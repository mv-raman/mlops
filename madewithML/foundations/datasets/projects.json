[{"id":1,"created_on":"2020-02-17 06:30:41","title":"Machine Learning Basics","description":"A practical set of notebooks on machine learning basics, implemented in both TF2.0 + Keras and PyTorch.","tags":["code","tutorial","keras","pytorch","tensorflow","deep-learning","natural-language-processing","madewithml","basics","foundation"]},{"id":2,"created_on":"2020-02-17 06:41:45","title":"Deep Learning with Electronic Health Record (EHR) Systems","description":"A comprehensive look at recent machine learning advancements in health.","tags":["article","tutorial","deep-learning","health","ehr"]},{"id":3,"created_on":"2020-02-20 06:07:59","title":"Automatic Parking Management using computer vision","description":"Detecting empty and parked spaces in car parking using a camera at lamp-post angle. ","tags":["code","tutorial","video","python","machine-learning","computer-vision","parking-management","haar"]},{"id":4,"created_on":"2020-02-20 06:21:57","title":"Easy street parking using region proposal networks","description":"Get a text on your phone whenever a nearby parking spot you need is free. ","tags":["code","tutorial","python","pytorch","machine-learning","computer-vision","opencv","twilio"]},{"id":5,"created_on":"2020-02-20 06:29:18","title":"Deep Learning based parking management system using Fastai","description":"Fastai provides easy to use wrappers to quickly build powerful systems. One could transfer learn a CNN in minutes and tie it to existing system. ","tags":["code","tutorial","fastai","deep-learning","parking-management"]},{"id":6,"created_on":"2020-02-20 06:43:18","title":"Comparison between YOLO and RCNN on real world videos","description":"Bringing theory to experiment is cool. We can easily train models in colab and find the results in minutes.","tags":["code","tutorial","computer-vision","yolo","rcnn"]},{"id":7,"created_on":"2020-02-20 06:47:21","title":"Show, Infer & Tell: Contextual Inference for Creative Captioning","description":"The beauty of the work lies in the way it architects the fundamental idea that humans look at the overall image and then individual pieces of it.\r\n","tags":["article","code","paper","research","tutorial","attention","deep-learning","recurrent-neural-networks","computer-vision","image-captioning"]},{"id":8,"created_on":"2020-02-24 04:12:43","title":"ML Experiments using Walmart Recruiting Store Sales Forecasting","description":"It's so cool that we can sit at home and get real-world datasets to solve close to real-world problems. ","tags":["code","tutorial","machine-learning","sales","pandas","structured-data","data-analysis","python-stack","forcasting","sales-forcasting"]},{"id":9,"created_on":"2020-02-24 16:24:45","title":"Awesome Graph Classification","description":"A collection of important graph embedding, classification and representation learning papers with implementations.","tags":["code","tutorial","deep-learning","graph-convolutional-networks","embeddings","graph-classification","graph-neural-networks","graphs","knowledge-graphs","representation-learning"]},{"id":10,"created_on":"2020-02-26 17:14:46","title":"Machine Learning Tutorials","description":"Creating organized  tutorials for some of the machine learning concepts.","tags":["article","code","tutorial","convolutional-neural-networks","linear-regression","logistic-regression","neural-networks","regression","parameter-estimation","maximum-likelihood-estimation"]},{"id":11,"created_on":"2020-02-28 16:48:54","title":"Awesome Community Detection","description":"A collection of important community detection and graph clustering papers with implementations.","tags":["code","tutorial","deep-learning","clustering","data-mining","dimensionality-reduction","graph-clustering","graphs"]},{"id":12,"created_on":"2020-02-28 19:56:46","title":"Awesome Gradient Boosting","description":"A curated list of gradient boosting research papers with implementations. ","tags":["code","tutorial","decision-trees","data-mining","boosting","gradient-boosting","nips","neurips"]},{"id":13,"created_on":"2020-02-28 23:45:23","title":"Awesome Decision Trees","description":"A collection of research papers on decision, classification and regression trees with implementations. ","tags":["code","tutorial","decision-trees","classification","gradient-boosting","classification-trees","regression-trees"]},{"id":14,"created_on":"2020-02-28 23:49:36","title":"Awesome Fraud Detection","description":"A curated list of data mining papers about fraud detection.","tags":["code","tutorial","deep-learning","anomaly-detection","classification","fraud-detection","community-detection"]},{"id":15,"created_on":"2020-02-28 23:55:26","title":"Awesome Monte Carlo Tree Search","description":"A curated list of Monte Carlo tree search papers with implementations. ","tags":["code","tutorial","bayesian-deep-learning","deep-learning","deep-q-networks","hierarchical-reinforcement-learning","multi-agent-reinforcement-learning","reinforcement-learning","monte-carlo-tree-search"]},{"id":16,"created_on":"2020-03-03 13:34:48","title":"Karate Club","description":"A general purpose community detection and network embedding library for research built on NetworkX. ","tags":["code","library","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","community-detection","node-embedding","network-embedding"]},{"id":17,"created_on":"2020-03-03 13:42:11","title":"GEMSEC: Graph Embedding with Self-Clustering","description":"GEMSEC - a graph embedding algorithm that learns a clustering of the nodes simultaneously with computing their embedding. ","tags":["code","paper","research","tutorial","tensorflow","deep-learning","embeddings","graph-clustering","graphs","node-classification","community-detection","node-embedding","network-embedding","arxiv:1802.03997"]},{"id":18,"created_on":"2020-03-03 13:47:25","title":"Multi-scale Attributed Node Embedding","description":"The reference implementation of \"Multi-scale Attributed Node Embedding\".","tags":["code","paper","research","tutorial","deep-learning","embeddings","graphs","node-classification","transfer-learning","node-embedding","network-embedding","attributed-embedding","skip-gram","matrix-factorization","implicit-factorization","arxiv:1909.13021"]},{"id":19,"created_on":"2020-03-03 13:54:31","title":"Diffusion to Vector","description":"Reference implementation of Diffusion2Vec (Complenet 2018) built on Gensim and NetworkX. ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-embedding","graph-neural-networks","graphs","node-classification","node-embedding","network-embedding","network-visualization","arxiv:2001.07463"]},{"id":20,"created_on":"2020-03-06 22:57:40","title":"ADMM for Non-Negative Matrix Factorization","description":"A sparsity aware implementation of \"Alternating Direction Method of Multipliers for Non-Negative Matrix Factorization with the Beta-Divergence\" (ICASSP 2014).","tags":["code","paper","research","tutorial","dimensionality-reduction","principal-components","non-negative-matrix-factorization","sparse-nmf","tsne","admm"]},{"id":21,"created_on":"2020-03-06 23:03:00","title":"Learning Role-based Graph Embeddings","description":"A scalable Gensim implementation of \"Learning Role-based Graph Embeddings\" (IJCAI 2018).","tags":["code","paper","research","tutorial","embeddings","graph-embedding","graphs","node-classification","node-embedding","network-embedding","structural-embedding","gensim","arxiv:1802.02896"]},{"id":22,"created_on":"2020-03-06 23:06:45","title":"An Edge Enhancement Approach for Motif-aware Community Detection","description":"An implementation of \"EdMot: An Edge Enhancement Approach for Motif-aware Community Detection\" (KDD 2019) ","tags":["code","paper","research","tutorial","graph-clustering","graphs","node-classification","community-detection","node-embedding","network-visualization","arxiv:1906.04560"]},{"id":23,"created_on":"2020-03-06 23:14:59","title":"Scalable Incomplete Network Embedding","description":"A PyTorch implementation of \"Scalable Incomplete Network Embedding\" (ICDM 2018).","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","feature-engineering","graphs","node-classification","representation-learning","node-embedding","network-embedding","arxiv:1810.06768"]},{"id":24,"created_on":"2020-03-06 23:18:13","title":"Splitter","description":"A Pytorch implementation of \"Splitter: Learning Node Representations that Capture Multiple Social Contexts\" (WWW 2019). ","tags":["code","paper","research","tutorial","pytorch","deep-learning","clustering","feature-engineering","graph-clustering","graphs","node-classification","community-detection","node-embedding","network-embedding","network-visualization","arxiv:1905.02138"]},{"id":25,"created_on":"2020-03-07 23:04:31","title":"AttentionWalk","description":"A PyTorch Implementation of \"Watch Your Step: Learning Node Embeddings via Graph Attention\" (NeurIPS 2018). ","tags":["code","paper","research","tutorial","pytorch","attention","convolutional-neural-networks","deep-learning","graph-convolutional-networks","embeddings","graph-classification","graph-neural-networks","graphs","node-classification","representation-learning"]},{"id":26,"created_on":"2020-03-07 23:11:58","title":"Graph Wavelet Neural Network","description":"A PyTorch implementation of \"Graph Wavelet Neural Network\" (ICLR 2019) ","tags":["code","paper","research","tutorial","pytorch","deep-learning","graph-convolutional-networks","graph-classification","graph-neural-networks","graphs","node-classification","representation-learning","wavelet","spectral-graph-theory"]},{"id":27,"created_on":"2020-03-07 23:18:15","title":"APPNP and PPNP","description":"A PyTorch implementation of \"Predict then Propagate: Graph Neural Networks meet Personalized PageRank\" (ICLR 2019). ","tags":["code","paper","research","tutorial","pytorch","deep-learning","graph-convolutional-networks","embeddings","graph-classification","graph-embedding","graph-neural-networks","graphs","node-classification","representation-learning","node-embedding","network-embedding","pagerank","arxiv:1810.05997"]},{"id":28,"created_on":"2020-03-07 23:23:46","title":"Attributed Social Network Embedding","description":"A sparsity aware and memory efficient implementation of \"Attributed Social Network Embedding\" (TKDE 2018). ","tags":["code","paper","research","tutorial","deep-learning","graph-convolutional-networks","embeddings","feature-engineering","graph-clustering","graph-embedding","graph-neural-networks","graphs","representation-learning","attributed-embedding","arxiv:1705.04969"]},{"id":29,"created_on":"2020-03-07 23:45:38","title":"Signed Graph Convolutional Network","description":"A PyTorch implementation of \"Signed Graph Convolutional Network\" (ICDM 2018). ","tags":["code","paper","research","tutorial","pytorch","deep-learning","graph-convolutional-networks","embeddings","graph-embedding","graph-neural-networks","graphs","node-classification","representation-learning","network-embedding","network-visualization","signed-graphs","link-prediction","arxiv:1808.06354"]},{"id":30,"created_on":"2020-03-07 23:47:25","title":"Label Propagation","description":"A NetworkX implementation of Label Propagation from a \"Near Linear Time Algorithm to Detect Community Structures in Large-Scale Networks\" (Physical Review E 200","tags":["code","paper","research","tutorial","graph-classification","graph-clustering","graphs","node-classification","community-detection","node-embedding","network-embedding","arxiv:0709.2938"]},{"id":31,"created_on":"2020-03-07 23:56:46","title":"GraphWave","description":"A scalable implementation of \"Learning Structural Node Embeddings Via Diffusion Wavelets (KDD 2018)\". ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","structural-embedding","graph-convolution","network-representation","arxiv:1710.10321"]},{"id":32,"created_on":"2020-03-08 00:00:22","title":"Walklets","description":"A lightweight implementation of Walklets from \"Don't Walk Skip! Online Learning of Multi-scale Network Embeddings\" (ASONAM 2017). ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1605.02115"]},{"id":33,"created_on":"2020-03-08 00:03:12","title":"M-NMF","description":"A TensorFlow implementation of \"Community Preserving Network Embedding\" (AAAI 2017) ","tags":["code","research","tutorial","tensorflow","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":34,"created_on":"2020-03-08 00:04:26","title":"Graph2Vec","description":"A parallel implementation of \"graph2vec: Learning Distributed Representations of Graphs\" (MLGWorkshop 2017). ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1707.05005"]},{"id":35,"created_on":"2020-03-08 00:10:56","title":"Boosted Factorization","description":"An implementation of \"Multi-Level Network Embedding with Boosted Low-Rank Matrix Approximation\" (ASONAM 2019). ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1808.08627"]},{"id":36,"created_on":"2020-03-08 00:12:06","title":" FSCNMF","description":"An implementation of \"Fusing Structure and Content via Non-negative Matrix Factorization for Embedding Information Networks\". ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1804.05313"]},{"id":37,"created_on":"2020-03-08 00:15:44","title":"Clustered Graph Convolutional Networks","description":"A PyTorch implementation of \"Cluster-GCN: An Efficient Algorithm for Training Deep and Large Graph Convolutional Networks\" (KDD 2019). ","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1905.07953"]},{"id":38,"created_on":"2020-03-08 00:18:59","title":"Orbital Feature Engineering","description":"A sparsity aware implementation of \"Biological Network Comparison Using Graphlet Degree Distribution\" (Bioinformatics 2007)","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":39,"created_on":"2020-03-08 00:20:04","title":"GraRep","description":"A SciPy implementation of \"GraRep: Learning Graph Representations with Global Structural Information\" (WWW 2015). ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":40,"created_on":"2020-03-08 00:26:14","title":"Binarized Attributed Network Embedding","description":"A sparsity aware implementation of \"Binarized Attributed Network Embedding\" (ICDM 2018).","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":41,"created_on":"2020-03-08 00:27:24","title":"DANMF","description":"A sparsity aware implementation of \"Deep Autoencoder-like Nonnegative Matrix Factorization for Community Detection\" (CIKM 2018).","tags":["code","paper","research","tutorial","autoencoders","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":42,"created_on":"2020-03-08 00:30:42","title":"Text Associated Deep Walk","description":"An implementation of \"Network Representation Learning with Rich Text Information\" (IJCAI '15).","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":43,"created_on":"2020-03-08 00:31:46","title":"Enhanced Network Embedding with Text Information","description":"A sparsity aware implementation of \"Enhanced Network Embedding with Text Information\" (ICPR 2018). ","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":44,"created_on":"2020-03-08 00:32:58","title":"Capsule Graph Neural Network","description":"A PyTorch implementation of \"Capsule Graph Neural Network\" (ICLR 2019).","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graph-neural-networks","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":45,"created_on":"2020-03-08 00:39:08","title":"SimGNN","description":"A PyTorch implementation of \"SimGNN: A Neural Network Approach to Fast Graph Similarity Computation\" (WSDM 2019). ","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graph-neural-networks","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":46,"created_on":"2020-03-08 00:40:42","title":"Graph Attention Mechansim","description":"A PyTorch implementation of \"Graph Classification Using Structural Attention\" (KDD 2018).","tags":["code","paper","research","tutorial","pytorch","attention","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":47,"created_on":"2020-03-08 00:43:20","title":"SEAL-CI","description":"A PyTorch implementation of  \"Semi-Supervised Graph Classification: A Hierarchical Graph Perspective\" (WWW 2019)","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1904.05003"]},{"id":48,"created_on":"2020-03-08 00:44:36","title":"Ego-splitting Framework","description":"A NetworkX implementation of \"Ego-splitting Framework: from Non-Overlapping to Overlapping Clusters\" (KDD 2017)","tags":["code","paper","research","tutorial","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation"]},{"id":49,"created_on":"2020-03-08 00:45:46","title":"MixHop and NGCN","description":"A PyTorch implementation of \"MixHop: Higher-Order Graph Convolutional Architectures via Sparsified Neighborhood Mixing\" (ICML 2019) and \"A Higher-Order Graph Co","tags":["code","paper","research","tutorial","pytorch","deep-learning","embeddings","graph-classification","graph-clustering","graph-embedding","graphs","node-classification","representation-learning","node-embedding","network-embedding","graph-convolution","network-representation","arxiv:1905.00067"]},{"id":53,"created_on":"2020-03-13 03:45:22","title":"Potential molecular solutions for COVID-19 using Graph VAEs","description":"Efforts towards proposing a potentially highly active molecule against a target protein of the 2019 Novel Coronavirus.","tags":["code","tutorial","video","autoencoders","variational-autoencoders","medicine","covid-19","graph-vae"]},{"id":54,"created_on":"2020-03-13 03:55:50","title":"Remdesivir as a Coronavirus Cure using Generative RNNs","description":"Identified Remdesivir as a potential COVID-2019 treatment, as well as a few other novel molecules that still need to be tested for synthetic feasibility.","tags":["code","tutorial","recurrent-neural-networks","covid-19","moses","chembl","pyrx"]},{"id":55,"created_on":"2020-03-13 04:13:00","title":"Valproic Acid for COVID-2019","description":"Identified Valproic Acid as potential treatments for COVID-2019","tags":["code","r","medicine","covid-19","pyrx","pharmacogx"]},{"id":56,"created_on":"2020-03-13 15:32:20","title":"COVID-19 Comprehensive Medical Dataset & Visualizer","description":"COVID-19 Korea Dataset with patient routes and visualizer.","tags":["code","dataset","library","covid-19"]},{"id":57,"created_on":"2020-03-13 20:57:11","title":"2019-nCov Novel Coronavirus Data analysis in Python","description":"A demo on Google Colab, showing how to extract \/ aggregate \/ slice data, and basic time series \/ cross-sectional plotting.","tags":["article","code","covid-19"]},{"id":58,"created_on":"2020-03-13 21:00:55","title":"Coronavirus Tracker API","description":"\ud83e\udda0 A simple and fast (< 200ms) API for tracking the global coronavirus (COVID-19, SARS-CoV-2) outbreak. It's written in python using the \ud83c\udf7c Flask framework. ","tags":["api","code","dataset","flask","library","covid-19"]},{"id":59,"created_on":"2020-03-16 17:02:43","title":"Getting started with JAX (MLPs, CNNs & RNNs)","description":"Learn the building blocks of JAX and use them to build some standard Deep Learning architectures (MLP, CNN, RNN, etc.).","tags":["article","code","notebook","tutorial","jax","xla","autograd","tpu"]},{"id":60,"created_on":"2020-03-16 17:14:36","title":"From PyTorch to JAX","description":"Towards neural net frameworks that purify stateful code.","tags":["article","code","notebook","tutorial","jax","haiku"]},{"id":61,"created_on":"2020-03-16 17:35:22","title":"Using JAX to Improve Separable Image Filters","description":"Optimizing the filters to improve the filtered images for computer vision tasks.","tags":["article","code","notebook","tutorial","jax","computer-vision","numpy","separable-filters"]},{"id":63,"created_on":"2020-03-19 17:09:21","title":"Predicting mortgage approvals: EDA and Azure ML Studio","description":"Introductory EDA (Exploratory Data Analysis) on mortgage approvals. Our goal is to explore and analyze the data then we design a predictor on Azure ML Studio","tags":["article","tutorial","azure","machine-learning","classification","exploratory-data-analysis"]},{"id":64,"created_on":"2020-03-19 18:37:08","title":"Screenshot to Code","description":"Turning design mockups into code with deep learning.","tags":["article","code","tutorial","convolutional-neural-networks","recurrent-neural-networks","web-design"]},{"id":65,"created_on":"2020-03-19 18:42:05","title":"Coloring Greyscale Images","description":"Coloring black and white images with neural networks.","tags":["article","code","tutorial","video","generative-adversarial-networks","colorization","computer-vision","image-processing"]},{"id":66,"created_on":"2020-03-19 19:01:17","title":"Securely Storing Configuration Credentials in a Jupyter Notebook","description":"A look at different methods to store configuration credentials in your applications.","tags":["article","tutorial","security","password-management","jupyter","credentials"]},{"id":67,"created_on":"2020-03-19 19:04:43","title":"Fruit Detection using Convolution Neural Networks in TensorFlow","description":"Trained a Convolutional Neural Network Model to predict fruits of over 100+ Classes (types) with a training accuracy of over 95%, and testing accuracy of over 9","tags":["code","paper","research","tutorial","keras","tensorflow","convolutional-neural-networks","deep-learning","computer-vision"]},{"id":68,"created_on":"2020-03-19 21:08:17","title":"End-to-end ML Lead Scoring Example using SKlearn","description":"A full machine learning tutorial, from idea to implemented python solution with Jupyter, MLflow, AWS Sagemaker, and Booklet.ai","tags":["article","code","tutorial","scikit-learn","library","lead-scoring","sagemaker","mlflow","booklet-ai"]},{"id":70,"created_on":"2020-03-19 23:07:35","title":"AI for Web Accessibility","description":"Applying AI technologies to make the web more accessible to people who are differently abled.","tags":["article","code","tutorial","machine-learning","accessibility"]},{"id":71,"created_on":"2020-03-19 23:20:31","title":"Introduction to Python","description":"Quickstart your journey into Python.","tags":["code","paper","research","tutorial","python"]},{"id":72,"created_on":"2020-03-19 23:36:17","title":"Embedding Java Classes with Code2Vec","description":"Code for the paper \"Obfuscated code2vec: Improving Class-Level Embeddings by Hiding Information\".","tags":["code","tutorial","embeddings","code-analysis"]},{"id":73,"created_on":"2020-03-19 23:45:14","title":"Face Verification","description":"Implementation of Siamese Neural network model used for face verification. The dataset used for this task is IMDB-WIKI-face images Dataset.","tags":["code","tutorial","siamese-networks","computer-vision","face-detection"]},{"id":74,"created_on":"2020-03-19 23:51:39","title":"K Means using PyTorch","description":"PyTorch implementation of kmeans for utilizing GPU","tags":["article","code","tutorial","pytorch","library","package","kmeans"]},{"id":75,"created_on":"2020-03-20 00:01:11","title":"Psychopathology FER Assistant","description":"An intelligent assistant platform to track psychopathology patients responses during face-to-face and remote sessions.","tags":["code","tutorial","video","flask","mental-health-care","facial-recognition"]},{"id":77,"created_on":"2020-03-20 03:23:27","title":"Sign Language Interpreter using Deep Learning","description":"A sign language interpreter using live video feed from the camera. The project was completed in 24 hours as part of HackUNT-19, the University of North Texas's ","tags":["code","tutorial","video","computer-vision","sign-language"]},{"id":78,"created_on":"2020-03-20 03:32:09","title":"The Illustrated Self-Supervised Learning","description":"A visual introduction to self-supervised learning methods in Computer Vision","tags":["article","tutorial","computer-vision","self-supervised-learning","illustrated"]},{"id":79,"created_on":"2020-03-20 03:40:16","title":"Planar Data Classification","description":"Planar Data Classification with one Hidden Layer , performed using traditional Mathematical approach. ","tags":["code","tutorial","classification","planar-data"]},{"id":80,"created_on":"2020-03-20 05:59:32","title":"NeRF: Neural Radiance Fields","description":"Representing scenes as neural radiance fields for view synthesis.","tags":["article","code","paper","research","video","computer-vision","view-synthesis","5d","arxiv:2003.08934"]},{"id":81,"created_on":"2020-03-20 06:07:56","title":"GradCAM for the BreaKHis Dataset","description":"An NBDev package for fine-tuning ResNets to visualize gradient-weighted class activation for the BreaKHis dataset.","tags":["article","code","tutorial","computer-vision","medical-imaging","transfer-learning"]},{"id":82,"created_on":"2020-03-20 06:10:37","title":"An Essentials Guide to PyTorch Dataset and DataLoader Usage","description":"A brief guide for basic usage of PyTorch's Dataset and DataLoader classes.","tags":["article","code","dataset","notebook","tutorial","pytorch"]},{"id":83,"created_on":"2020-03-20 13:13:28","title":"Positive and Unlabeled Materials Machine Learning","description":"PUMML is a code that uses semi-supervised machine learning to classify materials from only positive and unlabeled examples.","tags":["code","paper","research","machine-learning","library","semi-supervised-learning","materials","informatics","physics","chemistry","materials-science"]},{"id":84,"created_on":"2020-03-20 15:18:43","title":"Mention Classifier","description":"Category prediction model\r\nThis repo contains AllenNLP model for prediction of Named Entity categories by its mentions.","tags":["code","tutorial","named-entity-recognition","natural-language-processing","mention-classification"]},{"id":85,"created_on":"2020-03-20 17:35:59","title":"Message Passing GNNs C++","description":"C++ implementation using Eigen for the forward pass of Graph Convolutional Neural Networks.","tags":["code","tutorial","c++","graph-neural-networks","graphs","message-passing"]},{"id":86,"created_on":"2020-03-20 17:44:11","title":"Anchor Boxes with KMeans","description":"Initial anchor boxes estimation using kmeans clustering for Faster-RCNN.","tags":["article","code","paper","research","tutorial","tensorflow","convolutional-neural-networks","clustering","rcnn","kmeans","faster-rcnn","arxiv:1506.01497"]},{"id":88,"created_on":"2020-03-20 17:52:10","title":"Recurrent Independent Mechanisms","description":"An implementation of Recurrent Independent Mechanisms (Goyal et al. 2019) in PyTorch.","tags":["code","paper","research","tutorial","pytorch","recurrent-independent-mechanisms","arxiv:1909.10893"]},{"id":89,"created_on":"2020-03-20 18:17:31","title":"Rethinking Batch Normalization in Transformers","description":"We found that NLP batch statistics exhibit large variance throughout training, which leads to poor BN performance.","tags":["paper","research","tutorial","transformers","natural-language-processing","power-normalization","batch-normalization","normalization","arxiv:2003.07845"]},{"id":90,"created_on":"2020-03-20 18:26:05","title":"Sum of 3 Palindromes using ML","description":"Representing any number as the sum of three palindromes using ML.","tags":["code","paper","research","tutorial","machine-learning","puzzles","palindromes","arxiv:1602.06208"]},{"id":91,"created_on":"2020-03-20 18:30:04","title":"Pytest Board","description":"Continuous pytest runner with awesome visualization.","tags":["code","library","unit-tests","pytest","testing"]},{"id":92,"created_on":"2020-03-20 18:43:50","title":"Image Spam Buster - Kreate Hackathon","description":"\"Spam Buster\" for user generated IMAGE content.","tags":["code","tutorial","web-services","computer-vision","image-processing","spam-filtering","application"]},{"id":93,"created_on":"2020-03-20 18:54:13","title":"Music Genre Classification with Deep Learning","description":"Custom music genre classification system with our own genres and data.","tags":["code","tutorial","tensorflow","deep-learning","music-classification","conv-lstm"]},{"id":94,"created_on":"2020-03-20 18:58:58","title":"Visualizing Towed vehicles in Montreal","description":"The data show vehicles towed by the City of Montreal since 2016. Towing is performed for example during snow removal, construction work or during special events","tags":["code","paper","research","tutorial","streamlit"]},{"id":96,"created_on":"2020-03-20 19:07:11","title":"Markov Tweet Bot","description":"Auto tweeting bot that amplifies tweets and writes tweets using a Markov chain.","tags":["code","tutorial","hidden-markov-models","bots"]},{"id":97,"created_on":"2020-03-20 19:10:58","title":"Graph Convolution on Structured Documents","description":"Convert structured documents to graphs for document entity classification.","tags":["code","tutorial","graph-convolutional-networks","computer-vision","graph-neural-networks","graphs","optical-character-recognition","document-processing"]},{"id":98,"created_on":"2020-03-20 19:16:43","title":"Bachelorette Predictor","description":"Predict the Bachelorette winners from profile images.","tags":["code","tutorial","fastai","computer-vision","facial-recognition"]},{"id":99,"created_on":"2020-03-20 21:32:14","title":"Gender Change of People's Face using CycleGAN","description":"CycleGAN architecture in Keras and train the model with CelebA faces dataset to perform gender change on people's faces.","tags":["article","code","research","tutorial","keras","generative-adversarial-networks","computer-vision","cyclegan","celeba"]},{"id":101,"created_on":"2020-03-21 04:19:04","title":"ELECTRA: Pre-training Text Encoders as Discriminators","description":"PyTorch implementation of the electra model from the paper: ELECTRA - Pre-training Text Encoders as Discriminators Rather Than Generators","tags":["code","paper","research","pytorch","transformers","language-modeling","natural-language-processing","discriminators","generators"]},{"id":102,"created_on":"2020-03-21 11:29:06","title":"Deep Learning with Fashion MNIST dataset using Keras","description":"The project is a basic project where a sequential artificial neural network has been created to solve the famous Fashion MNIST dataset. ","tags":["code","tutorial","keras","tensorflow","deep-learning","feed-forward-neural-networks"]},{"id":103,"created_on":"2020-03-21 12:28:08","title":"Dupre","description":"Dupre provides an easy-to-use UI that simplifies the task of finding exact and near- duplicates in an image.","tags":["code","research","tutorial","tensorflow","convolutional-neural-networks","deep-learning","duplicate-detection"]},{"id":104,"created_on":"2020-03-21 22:40:48","title":"Spotify Recommendation Engine","description":"Web app that implements a basic version of Spotify's Discover Weekly.","tags":["article","code","tutorial","video","scikit-learn","music","recommendation-systems","spotify","firebase","flutter"]},{"id":105,"created_on":"2020-03-21 22:45:27","title":"Grape","description":"GRAPE is a regression API in Python environment","tags":["api","code","python","regression","library"]},{"id":107,"created_on":"2020-03-21 23:09:03","title":"Plant Fruit Classifier","description":"Building a world-class image classifier model with a custom dataset.","tags":["article","code","tutorial","fastai","computer-vision","image-collection"]},{"id":108,"created_on":"2020-03-21 23:17:38","title":"Tuned ALBERT (ensemble model)","description":"Top 6 in Squad 2.0","tags":["code","research","tutorial","natural-language-processing","question-answering","albert","squad"]},{"id":109,"created_on":"2020-03-21 23:25:33","title":"iyasai: Book Recommendation System","description":"Recommender system for books and stories that could help you and your loved ones lift up your mood whenever you are facing stress or unpleasant situations.","tags":["code","tutorial","flask","natural-language-processing","recommendation-systems"]},{"id":110,"created_on":"2020-03-21 23:31:56","title":"Gitjk: Undo What You Just Did in Git","description":"If you just ran a git command that you didn't mean to, this program will either undo it, tell you how to undo it, or tell you it's impossible to undo. ","tags":["code","git","library"]},{"id":111,"created_on":"2020-03-21 23:40:31","title":"Docker Job Queue","description":"A RabbitMq based job queuing system to run docker as jobs.","tags":["code","docker","library","queue","rabbitmq"]},{"id":112,"created_on":"2020-03-21 23:58:46","title":"Learning to See before Learning to Act: Visual Pre-training","description":"We find that pre-training on vision tasks significantly improves generalization and sample efficiency for learning to manipulate objects.","tags":["article","code","paper","research","video","pytorch","tensorflow","computer-vision","robotics","transfer-learning","affordance","nerf"]},{"id":113,"created_on":"2020-03-22 00:11:32","title":"AI for 3D Generative Design","description":"Making the design process faster and more efficient by generating 3D objects from natural language descriptions.","tags":["article","code","research","tutorial","autoencoders","variational-autoencoders","3d","computer-vision","natural-language-processing"]},{"id":114,"created_on":"2020-03-22 00:30:50","title":"Transformer OCR","description":"Rectification-free OCR using spatial attention from Transformers.","tags":["code","paper","research","tutorial","attention","transformers","computer-vision","natural-language-processing","optical-character-recognition","arxiv:2003.08077"]},{"id":115,"created_on":"2020-03-22 01:26:14","title":"SOLT: Data Augmentation for Deep Learning","description":"Data augmentation library for Deep Learning, which supports images, segmentation masks, labels and key points.","tags":["code","pytorch","deep-learning","library","computer-vision","data-augmentation","segmentation"]},{"id":116,"created_on":"2020-03-22 01:37:27","title":"PCDet: 3D Point Cloud Detection","description":"PCDet Toolbox in PyTorch for 3D Object Detection from Point Cloud","tags":["code","paper","research","tutorial","pytorch","convolutional-neural-networks","autonomous-vehicles","computer-vision","object-detection","point-cloud-generation","3d-object-detection","arxiv:1907.03670"]},{"id":117,"created_on":"2020-03-22 01:47:09","title":"SiamFC++: Towards Robust and Accurate Visual Tracking","description":"Implementation of a series of basic algorithms which is useful for video understanding, including Single Object Tracking (SOT), Video Object Segmentation (VOS).","tags":["code","paper","research","video","pytorch","computer-vision","segmentation","arxiv:1911.06188"]},{"id":118,"created_on":"2020-03-22 21:46:52","title":"Sinext","description":"Sign language to text with OpenCV and MNIST sign-language dataset","tags":["code","tutorial","computer-vision","opencv","sign-language"]},{"id":119,"created_on":"2020-03-23 20:38:06","title":"Self-Supervision with FastAI","description":"A tutorial of rotation-based self-supervision using FastAI2 & PyTorch!","tags":["article","code","notebook","tutorial","fastai","pytorch","self-supervised-learning"]},{"id":120,"created_on":"2020-03-24 04:38:08","title":"Gliding Vertex on Horizontal Bounding Box for Object Detection","description":"Gliding vertex on the horizontal bounding box for multi-oriented object detection.","tags":["code","paper","research","pytorch","computer-vision","object-detection","rcnn","multi-oriented-object","aerial-image","scene-text","pedestrian-detection","maskrcnn","arxiv:1911.09358"]},{"id":121,"created_on":"2020-03-24 04:56:38","title":"Deep Reinforcement Learning in TensorFlow2","description":"deep-rl-tf2 is a repository that implements a variety of polular Deep-RL algorithms using TF2. The key to this repo is an easy to understand code. ","tags":["code","tutorial","tensorflow","reinforcement-learning"]},{"id":122,"created_on":"2020-03-24 17:51:35","title":"Custom Classifier on Top of Bert-like Language Model","description":"Take pre-trained language model and build custom classifier on top of it.","tags":["article","code","tutorial","pytorch","attention","bert","transformers","language-modeling","natural-language-processing","sentiment-analysis","pytorch-lightning","polberta"]},{"id":123,"created_on":"2020-03-24 18:20:55","title":"Using Different Decoding Methods for LM with Transformers","description":"A look at different decoding methods for generate subsequent tokens in language modeling.","tags":["article","code","notebook","tutorial","huggingface","transformers","language-modeling","natural-language-processing","decoder","greedy-search","beam-search","sampling","survey"]},{"id":124,"created_on":"2020-03-24 21:12:12","title":"Unsupervised Toolbox","description":"Unsupervised learning Tool box : A micro framework for State of the Art Methods and models for unsupervised learning for NLU \/ NLG\r\n","tags":["code","autoencoders","library","clustering","embeddings","natural-language-processing","question-answering","question-generation","question-similarity","unsupervised-learning","text-similarity"]},{"id":125,"created_on":"2020-03-25 11:34:22","title":"TensorWatch","description":"TensorWatch is a debugging and visualization tool designed for data science, deep learning and reinforcement learning from Microsoft Research. It works in Jupyt","tags":["article","code","paper","research","library","visualization","debugging","monitoring","arxiv:2001.01215"]},{"id":126,"created_on":"2020-03-25 15:05:27","title":"Unet Implementation is Keras with GPU","description":"Vector Map generation from aerial imagery using deep learning GeoSpatial UNET","tags":["code","paper","research","tutorial","computer-vision","geospatial","satellite","uav"]},{"id":127,"created_on":"2020-03-25 15:12:34","title":"OSMI Mental Health Analysis","description":"Analyzing how healthy people are Mentally in Tech Sector.","tags":["code","tutorial","mental-health-care","mental-health"]},{"id":128,"created_on":"2020-03-25 15:21:34","title":"Multimodal Brain Tumor Segmentation","description":"Segmentation of gliomas in pre-operative MRI scans. Use the provided clinically-acquired training data to produce segmentation labels.","tags":["code","tutorial","computer-vision","medical-imaging","semantic-segmentation","u-net","tumor-segmentation","segmentation"]},{"id":129,"created_on":"2020-03-25 16:15:57","title":"Neural Encryption Networks","description":"I used a multiple autoencoders to effectively encode and encrypt text data.\r\nThese provide encryption for user defined bits.\r\nAs proof of concept 8 and 9 bit done","tags":["code","tutorial","deep-learning","machine-learning","cyber-security","neural-cryptography"]},{"id":130,"created_on":"2020-03-25 16:55:31","title":"Gymnast Pose Analysis","description":"Pose modelling for gymnasts using open-pose and open-cv.\r\n","tags":["code","tutorial","computer-vision","pose-estimation","pose-tracking","open-cv"]},{"id":131,"created_on":"2020-03-25 17:00:54","title":"EfficientDet: Scalable and Efficient Object Detection","description":"Implementation EfficientDet: Scalable and Efficient Object Detection in PyTorch.","tags":["code","paper","research","tutorial","pytorch","computer-vision","object-detection","efficientdet","arxiv:1911.09070"]},{"id":132,"created_on":"2020-03-25 17:16:10","title":"Driver and Car Monitoring.","description":"Understand driver's behavior and car control inside a vehicle.\r\nThis will help us to know how good does it drive, are the roads faulty, accident prone spots, etc","tags":["code","tutorial","tensorflow","deep-learning","tensorflow-lite","gis"]},{"id":133,"created_on":"2020-03-25 20:21:26","title":"A Survey of Long-Term Context in Transformers","description":"Over the past two years the NLP community has developed a veritable zoo of methods to combat expensive multi-head self-attention.","tags":["article","tutorial","attention","transformers","natural-language-processing","multi-head-attention"]},{"id":134,"created_on":"2020-03-26 06:20:56","title":"Advanced Native Python Features Behind PyTorch","description":"Learn about the advanced python native features powering the PyTorch API","tags":["article","tutorial","python","pytorch"]},{"id":135,"created_on":"2020-03-26 14:16:09","title":"The Illustrated SimCLR Framework","description":"A visual introduction to SimCLR: A Simple Framework for Contrastive Learning of Visual Representations.","tags":["article","paper","research","tutorial","self-supervised-learning","simclr","illustrated","contrastive-learning","arxiv:2002.05709"]},{"id":136,"created_on":"2020-03-26 17:22:36","title":"Finetune: Scikit-learn Style Model Finetuning for NLP","description":"Finetune is a library that allows users to leverage state-of-the-art pretrained NLP models for a wide variety of downstream tasks.","tags":["code","scikit-learn","transformers","library","language-modeling","natural-language-processing","finetuning","pretraining"]},{"id":137,"created_on":"2020-03-27 14:39:53","title":"Debugging Neural Networks with PyTorch and W&B","description":"A closer look at debugging common issues when training neural networks.","tags":["article","code","tutorial","pytorch","debugging","experiment-tracking","wandb"]},{"id":138,"created_on":"2020-03-27 14:50:02","title":"BachGAN: High-Res Image Synthesis from Salient Object Layout","description":"We propose a new task towards more practical application for image generation - high-quality image synthesis from salient object layout. ","tags":["code","paper","research","pytorch","generative-adversarial-networks","computer-vision","image-generation","salient-object-layout","image-synthesis","arxiv:2003.11690"]},{"id":139,"created_on":"2020-03-27 22:50:36","title":"Flax: Google\u2019s Open Source Approach To Flexibility In ML","description":"A gentle introduction to Flax: a neural network library for JAX that is designed for flexibility.","tags":["article","code","tutorial","jax","deep-learning","library","flax"]},{"id":140,"created_on":"2020-03-28 07:49:03","title":"Visual Paper Summary: ALBERT(A Lite BERT)","description":"An illustrated summary of ALBERT paper and how it improves BERT and makes it resource efficient","tags":["article","tutorial","attention","bert","transformers","natural-language-processing","albert","illustrated","summary"]},{"id":141,"created_on":"2020-03-28 17:41:42","title":"First Order Motion Model for Image Animation","description":"Generating a video sequence so that an object in a source image is animated according to the motion of a driving video.","tags":["article","code","paper","research","video","pytorch","animation","computer-vision","motion","image-animation"]},{"id":142,"created_on":"2020-03-28 17:49:20","title":"TorchIO:  Medical Image Processing in Deep Learning and PyTorch","description":"Tools for medical image processing in deep learning and PyTorch","tags":["code","paper","research","pytorch","library","computer-vision","medical-imaging","radiology","arxiv:2003.04696"]},{"id":143,"created_on":"2020-03-28 18:04:13","title":"torchlayers","description":"Shape inference for PyTorch (like Keras)  & new layers","tags":["article","code","keras","pytorch","library","inference","sota","shape","layers"]},{"id":144,"created_on":"2020-03-29 18:23:06","title":"Finetuning Transformers with JAX + Haiku","description":"Walking through a port of the RoBERTa pre-trained model to JAX + Haiku, then fine-tuning the model to solve a downstream task.","tags":["article","code","notebook","tutorial","jax","attention","bert","transformers","fine-tuning","natural-language-processing","haiku","pretraining","roberta"]},{"id":145,"created_on":"2020-03-30 04:14:44","title":"Controllable Person Image Synthesis with Attribute-Decomposed GAN","description":"A novel generative model for controllable person image synthesis, which can produce realistic person images with desired human attributes.","tags":["article","code","paper","research","generative-adversarial-networks","computer-vision","image-synthesis","pose","person-image-synthesis"]},{"id":146,"created_on":"2020-03-30 04:33:49","title":"Cycle Text-To-Image GAN with BERT","description":"Image generation from their respective captions, building on state-of-the-art GAN architectures.","tags":["code","paper","research","attention","bert","generative-adversarial-networks","transformers","computer-vision","image-generation","natural-language-processing","image-to-text","cycle-gan","attn-gan","arxiv:2003.12137"]},{"id":147,"created_on":"2020-03-30 05:39:57","title":"Back Translation for Text Augmentation with Google Sheets","description":"Learn how to augment existing labeled text data for free using Google Sheets.","tags":["article","tutorial","data-augmentation","natural-language-processing"]},{"id":148,"created_on":"2020-03-30 14:13:46","title":"An Illustrated Guide to Graph Neural Networks","description":"A breakdown of the inner workings of GNNs.","tags":["article","tutorial","graph-neural-networks","graphs","illustrated","graph-deep-learning"]},{"id":150,"created_on":"2020-04-01 08:26:46","title":"The Illustrated FixMatch for Semi-Supervised Learning","description":"Learn how to leverage unlabeled data using FixMatch for semi-supervised learning","tags":["article","tutorial","pytorch","computer-vision","semi-supervised-learning","illustrated"]},{"id":151,"created_on":"2020-04-01 14:13:29","title":"SimCLR","description":"What's new in semi-supervised learning? This paper, SimCLR, presents a new framework for contrastive learning of visual representations.","tags":["article","paper","research","tutorial","deep-learning","machine-learning","semi-supervised-learning","simclr","arxiv:2002.05709"]},{"id":152,"created_on":"2020-04-01 15:38:58","title":"A Two-Step Graph Convolutional Decoder for Molecule Generation","description":"A simple auto-encoder framework for molecule generation.","tags":["article","paper","research","video","graph-convolutional-networks","graph-neural-networks","graphs","chemistry","molecule-generation","arxiv:1906.03412"]},{"id":153,"created_on":"2020-04-02 16:02:33","title":"Why Batch Norm Causes Exploding Gradients","description":"Our beloved Batch Norm can actually cause exploding gradients, at least at initialization time.","tags":["article","paper","research","tutorial","deep-learning","batch-normalization","exploding-gradients","weights-initialization","normalization"]},{"id":154,"created_on":"2020-04-02 16:11:55","title":"Separating Sources of Randomness in NN at Initialization Time","description":"Neurons can have very different distributions when they are computed over weight randomness compared to when they are computed over sample randomness. In a rand","tags":["article","paper","research","tutorial","neural-networks","weights-initialization","randomness","kaiming-initialization","relu","variance","arxiv:1902.04942"]},{"id":155,"created_on":"2020-04-02 23:20:15","title":"What You Need to Know About Product Management for AI","description":"A product manager for AI does everything a traditional PM does, and much more.","tags":["article","tutorial","video","machine-learning","business","product-management"]},{"id":156,"created_on":"2020-04-03 00:48:45","title":"How to setup a local AWS SageMaker environment for PyTorch","description":"Learn how to develop an ML app for a PyTorch Model faster by using AWS SageMaker local mode vs. deploying directly to AWS.","tags":["article","code","tutorial","aws","pytorch","web-services","sagemaker","web-app"]},{"id":157,"created_on":"2020-04-03 01:56:32","title":"TransMoMo: Invariance-Driven Unsupervised Motion Retargeting","description":"A lightweight video motion retargeting approach that is capable of transferring motion of a person in a source video realistically to another video of a target ","tags":["article","code","paper","research","tutorial","video","pytorch","computer-vision","motion-generation","retargeting","transmomo","arxiv:2003.14401"]},{"id":158,"created_on":"2020-04-03 04:41:07","title":"Tracking Objects as Points","description":"Simultaneous object detection and tracking using center points.","tags":["code","paper","research","tutorial","computer-vision","object-detection","object-tracking","arxiv:2004.01177"]},{"id":159,"created_on":"2020-04-03 14:57:11","title":"Drifter-ML","description":"A machine learning testing framework for sklearn and pandas.  The goal is to help folks assess whether things have changed over time.","tags":["code","video","scikit-learn","machine-learning","library","unit-tests","pandas","testing"]},{"id":160,"created_on":"2020-04-03 15:03:36","title":"Programming Probabilistically","description":"A book on data science and machine learning with a foundation in applied statistics leading into deep learning.","tags":["code","tutorial","linear-discriminant-analysis","linear-regression","machine-learning","neural-networks","regression","linear-algebra"]},{"id":161,"created_on":"2020-04-03 19:02:48","title":"Towards an ImageNet Moment for Speech-to-Text","description":"An overview of the conditions met by the Speech-to-Text ML subfield to reach the ImageNet moment.","tags":["article","code","tutorial","speech","speech-recognition","speech-to-text","asr","russian","automated-speech-recognition"]},{"id":162,"created_on":"2020-04-03 20:17:50","title":"Natural Language Processing News","description":"Get the highlights from Natural Language Processing & Machine Learning research & industry straight to your inbox every month.","tags":["tutorial","natural-language-processing","newsletter"]},{"id":163,"created_on":"2020-04-03 20:21:13","title":"NLP Newsletter","description":"Democratizing Artificial Intelligence Research, Education, and Technologies.","tags":["tutorial","education","natural-language-processing","newsletter"]},{"id":164,"created_on":"2020-04-03 20:27:06","title":"The Batch","description":"The Batch highlights a mix of the most practical research papers, industry-shaping applications, and high-impact business news.","tags":["tutorial","deep-learning","newsletter"]},{"id":166,"created_on":"2020-04-03 20:30:47","title":"Made With ML Topics","description":"A tagged and curated collection of trending tutorials, toolkits and research.","tags":["tutorial","deep-learning","machine-learning","computer-vision","natural-language-processing","newsletter"]},{"id":167,"created_on":"2020-04-04 14:54:21","title":"Meta Pseudo Labels","description":"We all know about meta-learning and pseudo labeling but what if we combine the two techniques for semi-supervised learning? Can it be any beneficial? ","tags":["article","paper","research","deep-learning","machine-learning","neural-networks","meta-learning","semi-supervised-learning","arxiv:2003.10580"]},{"id":168,"created_on":"2020-04-04 17:54:28","title":"Self-Supervised Scene De-occlusion","description":"We investigate the problem of scene de-occlusion, which aims to recover the underlying occlusion ordering and complete the invisible parts of occluded objects.","tags":["article","code","paper","research","video","computer-vision","image-generation","self-supervised-learning","de-occlusion","arxiv:2004.02788"]},{"id":169,"created_on":"2020-04-05 02:36:15","title":"Python Practice Book","description":"A comprehensive, online book to learn the basics of Python development with code examples.","tags":["code","tutorial","python"]},{"id":170,"created_on":"2020-04-05 02:40:35","title":"Python Tutorial","description":"Python is a programming language. Python can be used on a server to create web applications.","tags":["tutorial","python"]},{"id":171,"created_on":"2020-04-05 02:45:39","title":"Python is Cool","description":"A gentle guide to the Python features that I didn't know existed or was too afraid to use. This will be updated as I learn more and become less lazy.","tags":["code","tutorial","python"]},{"id":173,"created_on":"2020-04-05 03:00:05","title":"Design Patterns for Production NLP Systems","description":"Designs and tips for designing NLP production systems.","tags":["article","tutorial","natural-language-processing","systems-design"]},{"id":174,"created_on":"2020-04-05 03:11:31","title":"Python Numpy Tutorial (with Jupyter and Colab)","description":"A quick crash course on both the Python programming language and its use for scientific computing.","tags":["article","tutorial","python","numpy"]},{"id":175,"created_on":"2020-04-05 03:20:08","title":"Python NumPy Tutorial for Beginners","description":"Learn the basics of the NumPy library in this tutorial for beginners.","tags":["code","tutorial","video","numpy"]},{"id":176,"created_on":"2020-04-05 03:25:44","title":"Complete Python Pandas Data Science Tutorial","description":"In this video we walk through many of the fundamental concepts to use the Python Pandas Data Science Library.","tags":["code","tutorial","video","python","pandas"]},{"id":177,"created_on":"2020-04-05 03:31:16","title":"cuDF - GPU DataFrames","description":"cuDF is a GPU DataFrame library for loading, joining, aggregating, filtering, and otherwise manipulating data.","tags":["code","library","pandas","cudf","rapidsai"]},{"id":178,"created_on":"2020-04-05 03:41:58","title":"Scikit-learn Tutorial","description":"This repository contains notebooks and other files associated with my Scikit-learn tutorial.","tags":["code","tutorial","scikit-learn"]},{"id":179,"created_on":"2020-04-05 03:47:21","title":"scikit-learn","description":"Examples for all the different utilities within scikit-learn.","tags":["scikit-learn","decision-trees","linear-regression","logistic-regression","naive-bayes","random-forests","regression","support-vector-machines","library","gradient-boosting","k-nearest-neighbors","decision-tree","gaussian-processes"]},{"id":180,"created_on":"2020-04-05 03:51:17","title":"Hands On Machine Learning","description":"A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in Python using Scikit-Learn, Keras and TensorFlow 2.","tags":["code","tutorial","keras","scikit-learn","tensorflow"]},{"id":181,"created_on":"2020-04-05 14:56:34","title":"Talking-Heads Attention","description":"A variation on multi-head attention which includes linear projections across the attention-heads dimension, immediately before and after the softmax operation.","tags":["article","paper","research","tutorial","attention","transformers","natural-language-processing","multi-head-attention","talking-heads-attention","linear-projections","arxiv:2003.02436"]},{"id":182,"created_on":"2020-04-05 17:45:09","title":"Tutorials | TensorFlow Core","description":"The TensorFlow tutorials are written as Jupyter notebooks and run directly in Google Colab\u2014a hosted notebook environment that requires no setup. ","tags":["tutorial","tensorflow"]},{"id":183,"created_on":"2020-04-05 17:50:10","title":"What does a CNN see?","description":"First super clean notebook showcasing @TensorFlow 2.0. An example of end-to-end DL with interpretability.","tags":["code","notebook","tutorial","tensorflow","convolutional-neural-networks","computer-vision","interpretability"]},{"id":184,"created_on":"2020-04-05 19:49:03","title":"Learning PyTorch with Examples","description":"This tutorial introduces the fundamental concepts of PyTorch through self-contained examples.","tags":["tutorial","pytorch"]},{"id":186,"created_on":"2020-04-05 19:54:47","title":"Understanding PyTorch with an example: a step-by-step tutorial","description":"Structured, incremental and from first principles approach to PyTorch.","tags":["article","tutorial","pytorch"]},{"id":187,"created_on":"2020-04-05 20:00:33","title":"Computational Linear Algebra for Coders","description":"Free online textbook of Jupyter notebooks for fast.ai Computational Linear Algebra course.","tags":["code","course","tutorial","machine-learning","linear-algebra","top-down"]},{"id":188,"created_on":"2020-04-05 20:06:59","title":"Linear Algebra - Khan Academy","description":"Learn the basics, starting with Vectors","tags":["tutorial","linear-algebra"]},{"id":189,"created_on":"2020-04-05 20:25:44","title":"How MLE (Maximum Likelihood Estimation) algorithm works","description":"Simplified and visualized explanation of Maximum Likelihood Estimation","tags":["tutorial","video","maximum-likelihood-estimation"]},{"id":191,"created_on":"2020-04-05 20:44:05","title":"Unfolding Na\u00efve Bayes from Scratch","description":"Na\u00efve Bayes explained via math, pure Python and then Scikit-learn.","tags":["article","code","tutorial","python","scikit-learn","naive-bayes"]},{"id":192,"created_on":"2020-04-05 21:01:33","title":"Develop k-Nearest Neighbors in Python From Scratch","description":"In this tutorial you are going to learn about the k-Nearest Neighbors algorithm including how it works and how to implement it from scratch in Python.","tags":["article","tutorial","python","k-nearest-neighbors"]},{"id":193,"created_on":"2020-04-05 21:06:38","title":"Machine Learning Basics with the K-Nearest Neighbors Algorithm","description":"The k-nearest neighbors (KNN) algorithm is a simple, easy-to-implement supervised machine learning algorithm for both classification and regression.","tags":["article","tutorial","k-nearest-neighbors"]},{"id":194,"created_on":"2020-04-05 21:14:39","title":"How kNN algorithm works","description":"I describe how the k Nearest Neighbors algorithm works, and provide a simple example using 2-dimensional data and k = 3.","tags":["tutorial","video","k-nearest-neighbors"]},{"id":195,"created_on":"2020-04-05 22:24:39","title":"Essence of linear algebra","description":"A geometric understanding of matrices, determinants, eigen-stuffs and more.","tags":["tutorial","video","linear-algebra"]},{"id":196,"created_on":"2020-04-05 22:37:22","title":"Linear Regression from Scratch in Python","description":"We will explore linear regression and we will implement it using Python from scratch.","tags":["article","tutorial","linear-regression","regression"]},{"id":197,"created_on":"2020-04-05 23:46:49","title":"Linear Algebra - Machine Learning Glossary","description":"Brief visual explanations of linear algebra with diagrams, code examples and links to resources for learning more.","tags":["code","tutorial","linear-algebra"]},{"id":198,"created_on":"2020-04-06 00:10:18","title":"Linear Regression - Machine Learning Glossary","description":"Brief visual explanations of linear regression with diagrams, code examples and links to resources for learning more.","tags":["article","tutorial","linear-regression","regression"]},{"id":199,"created_on":"2020-04-06 00:13:30","title":"Logistic Regression - Machine Learning Glossary","description":"Brief visual explanations of logistic regression with diagrams, code examples and links to resources for learning more.","tags":["article","tutorial","logistic-regression","regression"]},{"id":200,"created_on":"2020-04-06 00:17:16","title":"k-Nearest Neighbor - CS231n","description":"Nearest Neighbor Classifier in Python.","tags":["article","tutorial","k-nearest-neighbors"]},{"id":201,"created_on":"2020-04-06 00:24:06","title":"Naive Bayes Classification","description":"Naive Bayes classification methods are quite simple (in terms of model complexity) and commonly used for tasks such as document classification & spam filtering.","tags":["article","tutorial","naive-bayes"]},{"id":202,"created_on":"2020-04-06 00:28:55","title":"An Intuitive (and Short) Explanation of Bayes\u2019 Theorem","description":"A condensed version for Bayesian newcomers like myself.","tags":["article","tutorial","naive-bayes"]},{"id":203,"created_on":"2020-04-06 00:32:06","title":"K-nearest Neighbors","description":"A quick look at KNN with code.","tags":["article","tutorial","k-nearest-neighbors"]},{"id":204,"created_on":"2020-04-06 01:26:10","title":"Building A Logistic Regression in Python, Step by Step","description":"A step-by-step guide for logistic regression in Python.","tags":["article","code","notebook","tutorial","logistic-regression","regression"]},{"id":205,"created_on":"2020-04-06 01:39:54","title":"Logistic Regression","description":"An overview of the concept and math behind logistic regression.","tags":["article","tutorial","logistic-regression","regression"]},{"id":206,"created_on":"2020-04-06 02:01:23","title":"Decision Trees in Machine Learning","description":"A tree has many analogies in real life, and turns out that it has influenced a wide area of machine learning, covering both classification and regression.","tags":["article","tutorial","decision-trees","random-forests","decision-tree"]},{"id":207,"created_on":"2020-04-06 02:05:27","title":"Regularization in Machine Learning","description":"This article will focus on a technique that helps in avoiding overfitting and also increasing model interpretability.","tags":["article","tutorial","linear-regression","regression","interpretability","regularization"]},{"id":208,"created_on":"2020-04-06 02:10:59","title":"A Visual Introduction to Machine Learning","description":"In machine learning, computers apply statistical learning techniques to automatically identify patterns in data. ","tags":["tutorial","decision-trees","random-forests","illustrated","decision-tree","r2d3"]},{"id":209,"created_on":"2020-04-06 02:13:52","title":"Decision Trees","description":"An overview of decision trees with an implementation in scikit-learn.","tags":["article","tutorial","scikit-learn","decision-trees","random-forests","decision-tree"]},{"id":210,"created_on":"2020-04-06 02:28:30","title":"Linear classification: Support Vector Machine, Softmax","description":"The SVM loss is set up so that the SVM \u201cwants\u201d the correct class for each image to a have a score higher than the incorrect classes by some fixed margin \u0394.","tags":["article","tutorial","support-vector-machines","cs231n","stanford"]},{"id":211,"created_on":"2020-04-06 02:31:00","title":"Support Vector Machines","description":"SVMs work well in complicated feature domains, albeit requiring clear separation between classes. ","tags":["article","tutorial","support-vector-machines"]},{"id":212,"created_on":"2020-04-06 02:49:01","title":"In-Depth: Decision Trees and Random Forests","description":"An in-depth look at decision trees and random forests with scikit-learn.","tags":["article","code","notebook","tutorial","scikit-learn","decision-trees","random-forests","decision-tree"]},{"id":213,"created_on":"2020-04-06 03:05:06","title":"In-Depth: Support Vector Machines","description":"An in-depth look at SVMs with scikit-learn.","tags":["article","tutorial","scikit-learn","support-vector-machines"]},{"id":214,"created_on":"2020-04-06 03:12:27","title":"XGBoost Algorithm: Long May She Reign","description":"A closer look at XGBoost and why it performs so well on structured data.","tags":["article","tutorial","gradient-boosting","xgboost"]},{"id":215,"created_on":"2020-04-06 03:14:37","title":"XGBoost: eXtreme Gradient Boosting","description":"Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or GBM) Library, for Python, R, Java, Scala, C++ and more. Runs on single machine, Hadoop, Spar","tags":["code","library","gradient-boosting","xgboost"]},{"id":216,"created_on":"2020-04-06 03:54:00","title":"Module 1: Neural Networks - CS231n","description":"These notes accompany the Stanford CS class CS231n: Convolutional Neural Networks for Visual Recognition.","tags":["article","code","tutorial","video","cs231n","stanford","multilayer-perceptrons"]},{"id":217,"created_on":"2020-04-06 04:05:03","title":"Neural Networks - Machine Learning Glossary","description":"Neural network concepts explained with pure python.","tags":["article","tutorial","neural-networks","multilayer-perceptrons"]},{"id":218,"created_on":"2020-04-06 11:29:57","title":"Distributional RL using TensorFlow2","description":"\ud83d\udc33 Implementation of various Distributional Reinforcement Learning Algorithms using TensorFlow2.","tags":["code","tutorial","tensorflow","machine-learning","reinforcement-learning"]},{"id":219,"created_on":"2020-04-06 14:10:22","title":"Natural Language Processing: Pretraining - d2l","description":"An interactive deep learning book with code, math, and discussions, based on the NumPy interface.","tags":["article","code","tutorial","mxnet","attention","bert","transformers","natural-language-processing","pretraining","book"]},{"id":220,"created_on":"2020-04-06 15:19:59","title":"Module 2: Convolutional Neural Networks - CS231n ","description":"In Lecture 5 we move from fully-connected neural networks to convolutional neural networks.","tags":["article","tutorial","video","convolutional-neural-networks","video-games","computer-vision","image-classification","cs231n","stanford"]},{"id":221,"created_on":"2020-04-06 16:30:15","title":"Machine Learning is Fun! Part 3: CNNs","description":"This time, we are going to learn how to write programs that recognize objects in images using deep learning.","tags":["article","tutorial","convolutional-neural-networks"]},{"id":222,"created_on":"2020-04-06 16:42:33","title":"A Beginner's Guide To Understanding Convolutional Neural Networks","description":"A in-depth guide to understanding CNNs.","tags":["article","tutorial","convolutional-neural-networks"]},{"id":223,"created_on":"2020-04-06 16:45:31","title":"An Intuitive Explanation of Convolutional Neural Networks","description":"Convolutional Neural Networks are a category of Neural Networks that have proven very effective in areas such as image recognition and classification.","tags":["article","tutorial","convolutional-neural-networks"]},{"id":224,"created_on":"2020-04-06 16:48:44","title":"Understanding Convolutional Neural Networks for NLP","description":"More recently we\u2019ve also started to apply CNNs to problems in Natural Language Processing and gotten some interesting results.","tags":["article","tutorial","convolutional-neural-networks","natural-language-processing","text-classification"]},{"id":225,"created_on":"2020-04-06 16:51:33","title":"Visualization with Matplotlib","description":"We'll now take an in-depth look at the Matplotlib package for visualization in Python.","tags":["article","tutorial","matplotlib","visualization"]},{"id":227,"created_on":"2020-04-06 16:59:42","title":"SQL for Data Analysis","description":"A look at using SQL for properly dealing with mid-large sized datasets for data analysis.","tags":["article","tutorial","databases","sql"]},{"id":228,"created_on":"2020-04-06 17:02:32","title":"Introduction to Autoencoders","description":"A look at autoencoders for representation learning.","tags":["article","tutorial","autoencoders","representation-learning"]},{"id":229,"created_on":"2020-04-06 17:16:53","title":"Variational Autoencoders","description":"Statistical motivation and implementation of variational autoencoders.","tags":["article","tutorial","autoencoders","variational-autoencoders","representation-learning"]},{"id":230,"created_on":"2020-04-06 17:22:27","title":"Variational Autoencoders","description":"An introduction to VAEs with Pyro.","tags":["article","code","tutorial","autoencoders","variational-autoencoders","pyro"]},{"id":232,"created_on":"2020-04-06 17:26:29","title":"PYRO: Deep Universal Probabilistic Programming","description":"Pyro is a flexible, scalable deep probabilistic programming library built on PyTorch.","tags":["article","code","pytorch","autoencoders","hidden-markov-models","latent-dirichlet-allocation","variational-autoencoders","library","forecasting","pyro","probabilistic-programming","uber","uber-ai","monte-carlo-filtering","kernels","multivariate-forecasting","markov-chain-monte-carlo","gaussian-mixture-models","bayesian-optimization","kalman-filters"]},{"id":233,"created_on":"2020-04-06 17:30:30","title":"Lecture 13 | Generative Models - CS231n","description":"A look at the motivation and concepts behind variational autoencoders. ","tags":["tutorial","video","autoencoders","variational-autoencoders","cs231n","stanford","generative-models"]},{"id":234,"created_on":"2020-04-06 17:42:52","title":"An Overview of Semantic Image Segmentation","description":"Image segmentation is a computer vision task in which we label specific regions of an image according to what's being shown.","tags":["article","tutorial","computer-vision","semantic-segmentation","segmentation"]},{"id":235,"created_on":"2020-04-06 17:47:11","title":"Evaluating Image Segmentation Models","description":"A look at evaluation techniques for semantic and instance segmentation.","tags":["article","tutorial","computer-vision","natural-language-processing","semantic-composition","segmentation","instance-segmentation","evaluation"]},{"id":236,"created_on":"2020-04-06 18:00:07","title":"Convolutional Neural Networks","description":"A in-depth look at convolutional neural networks.","tags":["article","tutorial","convolutional-neural-networks"]},{"id":237,"created_on":"2020-04-06 18:02:48","title":"Common Architectures in Convolutional Neural Networks","description":"In this post, I'll discuss commonly used architectures for convolutional networks. ","tags":["article","tutorial","convolutional-neural-networks","computer-vision","architectures","survey"]},{"id":238,"created_on":"2020-04-06 18:37:33","title":"Googletrans","description":"Googletrans: Free and Unlimited Google translate API for Python. Translates totally free of charge.","tags":["code","library","translation","machine-translation","natural-language-processing"]},{"id":239,"created_on":"2020-04-06 18:39:48","title":"Prophet: Forecasting At Scale","description":"Tool for producing high quality forecasts for time series data that has multiple seasonality with linear or non-linear growth.","tags":["article","code","paper","research","library","forecasting","time-series","time-series-forecasting","prophet","facebook"]},{"id":240,"created_on":"2020-04-06 18:43:17","title":"Skorch","description":"A scikit-learn compatible neural network library that wraps pytorch","tags":["code","pytorch","scikit-learn","library","skorch"]},{"id":241,"created_on":"2020-04-06 18:45:33","title":"TFA: TensorFlow Addons","description":"Useful extra functionality for TensorFlow 2.x maintained by SIG-addons","tags":["code","tensorflow","library","utilities","addons"]},{"id":242,"created_on":"2020-04-06 18:49:09","title":"ELI5","description":"A library for debugging\/inspecting machine learning classifiers and explaining their predictions.","tags":["code","library","interpretability","debugging","eli5","inspection","explain"]},{"id":243,"created_on":"2020-04-06 18:52:50","title":"Lime: Local Interpretable Model-Agnostic Explanations","description":"Explains the predictions of any classifier in an interpretable and faithful manner, by learning an interpretable model locally around the prediction.","tags":["code","paper","research","video","library","interpretability","lime","arxiv:1602.04938"]},{"id":244,"created_on":"2020-04-06 18:55:12","title":"SHAP: SHapley Additive exPlanations","description":"A game theoretic approach to explain the output of any machine learning model.","tags":["code","library","interpretability","gradient-boosting","shap","explainability","shapely"]},{"id":245,"created_on":"2020-04-06 18:58:27","title":"Interpretable Machine Learning","description":"A guide for making black box models explainable.","tags":["article","tutorial","interpretability","lime","shap","explainability","shapely","black-box"]},{"id":246,"created_on":"2020-04-06 19:04:01","title":"Keras Tuner","description":"A hyperparameter tuner for Keras, specifically for tf.keras with TensorFlow 2.0.","tags":["article","code","keras","tensorflow","library","keras-tuner","hyperparameter-optimization","hyperparameter-tuner"]},{"id":247,"created_on":"2020-04-06 19:07:49","title":"Hyperopt: Distributed Hyperparameter Optimization","description":"Distributed Asynchronous Hyperparameter Optimization in Python.","tags":["code","library","hyperparameter-tuning","hyperparameter-optimization"]},{"id":248,"created_on":"2020-04-06 19:14:51","title":"Optuna: A hyperparameter optimization framework","description":"A lightweight, parallel distributed hyperparameter optimization framework.","tags":["article","code","chainer","keras","mxnet","pytorch","scikit-learn","tensorflow","library","xgboost","hyperparameter-optimization","hyperparamtere-tuning"]},{"id":249,"created_on":"2020-04-06 19:20:12","title":"makesense.ai","description":"Free to use online tool for labelling photos.","tags":["code","library","annotation","computer-vision","labeling","make-sense","image-labeling","bounding-boxes","open-source","free"]},{"id":250,"created_on":"2020-04-06 19:24:06","title":"Doccano","description":"Open source text annotation tool for machine learning practitioner. ","tags":["code","library","annotation","labeling","natural-language-processing","open-source","free","text-annotation","doccano"]},{"id":251,"created_on":"2020-04-06 19:28:58","title":"BRAT: Rapid Annotation Tool","description":"BRAT (brat rapid annotation tool) is based on the stav visualiser which was originally made in order to visualise BioNLP'11 Shared Task data.","tags":["code","health","library","annotation","labeling","named-entity-recognition","natural-language-processing","dependency-graphing"]},{"id":252,"created_on":"2020-04-06 20:23:46","title":"Word Embeddings","description":"This tutorial introduces word embeddings. It contains complete code to train word embeddings from scratch on a small dataset.","tags":["article","tutorial","tensorflow","embeddings","natural-language-processing","word-embeddings"]},{"id":253,"created_on":"2020-04-06 20:26:27","title":"On Word Embeddings","description":"This post presents the most well-known models for learning word embeddings based on language modeling.","tags":["article","tutorial","embeddings","language-modeling","natural-language-processing","word-embeddings"]},{"id":254,"created_on":"2020-04-06 20:28:43","title":"NLP for Developers: Word Embeddings | Rasa","description":"In this video, Rasa Developer Advocate Rachael will talk about what word embeddings are, how they work, when they're used and some  common errors. ","tags":["tutorial","video","character-embeddings","embeddings","natural-language-processing","word-embeddings","rasa"]},{"id":255,"created_on":"2020-04-06 20:30:27","title":"NLP for Developers: Transformers | Rasa","description":"In this video, Rasa Developer Advocate Rachael will talk about what transformers are, how they work, when they're used and some  common errors. ","tags":["tutorial","video","attention","transformers","natural-language-processing","rasa"]},{"id":256,"created_on":"2020-04-06 20:42:05","title":"A Visual Guide to Using BERT for the First Time","description":"Tutorial for how to use a variant of BERT to classify sentences.","tags":["article","code","notebook","tutorial","attention","bert","transformers","natural-language-processing","sentiment-analysis","text-classification","illustrated"]},{"id":257,"created_on":"2020-04-06 20:45:45","title":"The Illustrated GPT-2 (Visualizing Transformer Language Models)","description":"Visuals explaining the inner-workings of transformers.","tags":["article","tutorial","gpt2","transformers","language-modeling","natural-language-processing","illustrated"]},{"id":258,"created_on":"2020-04-06 20:48:35","title":"A Visual Intro to NumPy and Data Representation","description":"Ways to use NumPy and how it can represent different types of data (tables, images, text\u2026etc).","tags":["article","tutorial","numpy","illustrated"]},{"id":259,"created_on":"2020-04-06 20:51:58","title":"The Illustrated Word2vec","description":"In this post, we\u2019ll go over the concept of embedding, and the mechanics of generating embeddings with word2vec. ","tags":["article","tutorial","video","embeddings","natural-language-processing","word-embeddings","illustrated","word2vec"]},{"id":260,"created_on":"2020-04-06 20:55:32","title":"The Illustrated BERT, ELMo, and co.","description":"How NLP cracked transfer learning.","tags":["article","tutorial","attention","bert","transformers","embeddings","fine-tuning","language-modeling","natural-language-processing","text-classification","transfer-learning","decoder","elmo","masking"]},{"id":261,"created_on":"2020-04-06 21:00:34","title":"The Illustrated Transformer","description":"In this post, we will look at The Transformer \u2013 a model that uses attention to boost the speed with which these models can be trained.","tags":["article","tutorial","attention","self-attention","transformers","natural-language-processing","decoder","illustrated","masking","positional-encoding","encoder"]},{"id":262,"created_on":"2020-04-06 21:11:40","title":"Visualizing A Neural Machine Translation Model","description":"Mechanics of seq2seq models with attention.","tags":["article","tutorial","attention","sequence-to-sequence","machine-translation","natural-language-processing","illustrated"]},{"id":263,"created_on":"2020-04-06 21:14:17","title":"A Visual and Interactive Guide to the Basics of Neural Networks","description":"A visual look at the basics on NNs.","tags":["article","tutorial","neural-networks","illustrated","multilayer-perceptrons"]},{"id":264,"created_on":"2020-04-06 21:33:32","title":"The Unreasonable Effectiveness of Recurrent Neural Networks","description":"A close look at how RNNs are able to perform so well.","tags":["article","code","tutorial","recurrent-neural-networks","character-embeddings","embeddings","natural-language-processing","char-rnn"]},{"id":265,"created_on":"2020-04-06 21:36:45","title":"Lecture 10 | Recurrent Neural Networks","description":"Discuss the use of recurrent neural networks for modeling sequence data.","tags":["tutorial","video","attention","gated-recurrent-units","lstm","recurrent-neural-networks","computer-vision","image-captioning","language-modeling","natural-language-processing","cs231n","stanford"]},{"id":266,"created_on":"2020-04-06 21:39:39","title":"Understanding LSTM Networks","description":"A closer look at the inner workings of LSTM networks.","tags":["article","tutorial","lstm","recurrent-neural-networks"]},{"id":267,"created_on":"2020-04-06 21:42:45","title":"Attention and Augmented Recurrent Neural Networks","description":"Visualized attention and other augmentations with RNNs.","tags":["article","tutorial","attention","neural-turing-machines","adaptive-computation-time","neural-programmers"]},{"id":268,"created_on":"2020-04-06 21:51:55","title":"A Gentle Introduction to Text Summarization in Machine Learning","description":"Text summarization is the technique for generating a concise and precise summary of voluminous texts while focusing on the sections that convey useful info.","tags":["article","tutorial","natural-language-processing","text-summarization"]},{"id":269,"created_on":"2020-04-06 22:46:54","title":"Attention Mechanism","description":"Main concepts behind Attention, including an implementation of a sequence-to-sequence Attention model, followed by the application of Attention in Transformers.","tags":["article","tutorial","attention","self-attention","transformers","natural-language-processing"]},{"id":270,"created_on":"2020-04-06 22:50:30","title":"Attention? Attention!","description":"In this post, we are gonna look into how attention was invented, and various attention mechanisms and models, such as transformer and SNAIL.","tags":["article","tutorial","tensorflow","attention","recurrent-neural-networks","self-attention","transformers","natural-language-processing","pointer-network"]},{"id":271,"created_on":"2020-04-06 22:58:47","title":"The Annotated Transformer","description":"In this post I present an \u201cannotated\u201d version of the paper in the form of a line-by-line implementation. ","tags":["article","code","tutorial","attention","transformers","natural-language-processing","annotated"]},{"id":272,"created_on":"2020-04-06 23:38:26","title":"The Annotated GPT-2","description":"GPT-2 explained with visualization and PyTorch code.","tags":["article","tutorial","huggingface","pytorch","attention","gpt2","transformers","natural-language-processing","annotated"]},{"id":273,"created_on":"2020-04-06 23:41:52","title":"Transformers - Hugging Face","description":"\ud83e\udd17 Transformers: State-of-the-art Natural Language Processing for TensorFlow 2.0 and PyTorch. ","tags":["code","huggingface","pytorch","tensorflow","attention","bert","gpt","gpt2","transformers","xlnet","library","information-retrieval","language-modeling","named-entity-recognition","natural-language-processing","question-answering","reading-comprehension","text-classification","text-summarization","albert","roberta","t5","electra","distilbert","bart","conversational-ai"]},{"id":274,"created_on":"2020-04-07 00:15:13","title":"Understanding Generative Adversarial Networks (GANs)","description":"Building, step by step, the reasoning that leads to GANs.","tags":["article","tutorial","video","generative-adversarial-networks"]},{"id":275,"created_on":"2020-04-07 00:17:18","title":"Understanding Variational Autoencoders (VAEs)","description":"Building, step by step, the reasoning that leads to VAEs.","tags":["article","tutorial","autoencoders","variational-autoencoders"]},{"id":276,"created_on":"2020-04-07 00:21:33","title":"CycleGAN","description":"Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks.","tags":["article","code","paper","research","tutorial","video","generative-adversarial-networks","cyclegan","pix2pix","arxiv:1703.10593"]},{"id":277,"created_on":"2020-04-07 00:30:33","title":"Curriculum for Reinforcement Learning","description":"Curriculum learning applied to reinforcement learning, with a few exceptions of supervised learning.","tags":["article","tutorial","meta-learning","reinforcement-learning","generative-models"]},{"id":278,"created_on":"2020-04-07 00:34:46","title":"Self-Supervised Representation Learning","description":"What if we can get labels for free for unlabelled data and train unsupervised dataset in a supervised manner? ","tags":["article","tutorial","generative-adversarial-networks","computer-vision","object-recognition","representation-learning","self-supervised-learning","generative-modeling"]},{"id":279,"created_on":"2020-04-07 00:36:55","title":"Evolution Strategies","description":"Evolutionary algorithms refer to a division of population-based optimization algorithms inspired by natural selection. ","tags":["article","tutorial","reinforcement-learning","evolution","evolution-strategies"]},{"id":280,"created_on":"2020-04-07 00:38:25","title":"Meta Reinforcement Learning","description":"Explore cases when we try to \u201cmeta-learn\u201d Reinforcement Learning (RL) tasks by developing an agent that can solve unseen tasks fast and efficiently.","tags":["article","tutorial","meta-learning","reinforcement-learning"]},{"id":281,"created_on":"2020-04-07 00:40:59","title":"Generalized Language Models","description":"Trend in large unsupervised pre-trained language models which have achieved amazing SOTA results on a variety of language tasks.","tags":["article","tutorial","attention","bert","gpt2","transformers","language-modeling","natural-language-processing","ulmfit","albert","elmo","perplexity","conversational-ai"]},{"id":282,"created_on":"2020-04-07 00:53:12","title":"Meta-Learning: Learning to Learn Fast","description":"An overview of meta learning.","tags":["article","tutorial","meta-learning"]},{"id":283,"created_on":"2020-04-07 00:55:47","title":"From Autoencoder to Beta-VAE","description":"This post reviews several variations, including denoising, sparse, and contractive autoencoders, and VAE and its modification beta-VAE.","tags":["article","tutorial","autoencoders","variational-autoencoders","beta-vae"]},{"id":284,"created_on":"2020-04-07 00:57:12","title":"Policy Gradient Algorithms","description":"In this post, we are going to look deep into policy gradient, why it works, and many new policy gradient algorithms proposed in recent years.","tags":["article","tutorial","policy-gradient-methods","reinforcement-learning"]},{"id":285,"created_on":"2020-04-07 03:45:03","title":"A (Long) Peek into Reinforcement Learning","description":"In this post, we are gonna briefly go over the field of Reinforcement Learning (RL), from fundamental concepts to classic algorithms.","tags":["article","tutorial","policy-gradient-methods","q-learning","reinforcement-learning","evolution-strategies","monte-carlo","dynamic-programming","alphago-zero"]},{"id":286,"created_on":"2020-04-07 03:49:15","title":"Object Detection for Dummies","description":"We will go through several basic concepts, algorithms, and popular deep learning models for image processing and object detection.","tags":["article","tutorial","convolutional-neural-networks","computer-vision","object-detection","yolo","image-processing","alexnet","vgg","resnet","r-cnn","mask-r-cnn"]},{"id":287,"created_on":"2020-04-07 03:59:53","title":"Learning Word Embedding","description":"This post introduces several models for learning word embedding and how their loss functions are designed for the purpose.","tags":["article","tutorial","embeddings","natural-language-processing","word-embeddings"]},{"id":288,"created_on":"2020-04-07 04:04:15","title":"From GAN to WGAN","description":"This post explains the maths behind a GAN model and why it is hard to be trained. ","tags":["article","code","tutorial","generative-adversarial-networks","wasserstein-gan","wgan","kl-divergence"]},{"id":289,"created_on":"2020-04-07 04:09:52","title":"How to Explain the Prediction of a Machine Learning Model?","description":"Model interpretability, covering two aspects: (i) interpretable models w\/ model-specific interpretation methods & (ii) approaches of explaining black-box models","tags":["article","tutorial","interpretability","lime","beta"]},{"id":290,"created_on":"2020-04-07 13:38:36","title":"GANSpace: Discovering Interpretable GAN Controls","description":"This paper describes a simple technique to analyze Generative Adversarial Networks (GANs) and create interpretable controls for image synthesis.","tags":["code","paper","research","tutorial","video","generative-adversarial-networks","computer-vision","dimensionality-reduction","image-generation","interpretability","image-synthesis","interpretable-gans","ganspace","biggan","stylegan","latent-space","activation-space","principal-component-analysis","arxiv:2004.02546"]},{"id":291,"created_on":"2020-04-07 14:07:59","title":"Kornia: Differentiable Computer Vision Library for PyTorch","description":"Set of routines and differentiable modules to solve generic computer vision problems. ","tags":["code","pytorch","library","computer-vision","data-augmentation","edge-detection","image-filtering","color-space-conversions","kornia"]},{"id":292,"created_on":"2020-04-07 14:16:22","title":"BLiTZ \u2014 A Bayesian Neural Network library for PyTorch","description":"Bayesian Layers in Torch Zoo is a simple and extensible library to create Bayesian Neural Network layers on the top of PyTorch.","tags":["article","code","paper","research","tutorial","pytorch","bayesian-deep-learning","library","blitz","bayesian-neural-networks","bayesian-regression","arxiv:1505.05424"]},{"id":293,"created_on":"2020-04-07 15:09:07","title":"PyTorch - GAN","description":"PyTorch implementations of Generative Adversarial Networks.","tags":["code","tutorial","pytorch","generative-adversarial-networks","library","cyclegan","pix2pix","wasserstein-gan","began","infogan","dragan","stargan","dualgan","adversarial-autoencoders"]},{"id":294,"created_on":"2020-04-07 15:36:13","title":"PyTorch Geometric ","description":"Geometric deep learning extension library for PyTorch.","tags":["code","paper","research","pytorch","graph-convolutional-networks","library","graph-neural-networks","graphs","geometric","pytorch-geometric","arxiv:1903.02428"]},{"id":295,"created_on":"2020-04-07 15:40:00","title":"DGL: Deep Graph Library","description":"Python package built to ease deep learning on graph, on top of existing DL frameworks. ","tags":["code","paper","research","graph-convolutional-networks","library","graph-neural-networks","graphs","deep-graph-library","dgl","arxiv:2003.00982"]},{"id":297,"created_on":"2020-04-07 19:00:05","title":"Introduction to recommender systems","description":"Overview of some major recommendation algorithms.","tags":["article","tutorial","collaborative-filtering","recommendation-systems","matrix-factorization","content-based","user-user","item-item","bayesian-classifier"]},{"id":298,"created_on":"2020-04-07 19:08:25","title":"Introduction to Recommender Systems in 2019","description":"An introduction to building a recommendation system.","tags":["article","tutorial","collaborative-filtering","recommendation-systems","content-based","hybrid-approach"]},{"id":299,"created_on":"2020-04-07 19:12:38","title":"Build a Recommendation Engine With Collaborative Filtering","description":"Building a recommendation system in Python.","tags":["article","tutorial","python","scikit-learn","recommendation-systems"]},{"id":300,"created_on":"2020-04-07 19:17:20","title":"LightFM","description":"A Python implementation of LightFM, a hybrid recommendation algorithm.","tags":["code","library","recommendation-systems","matrix-factorization"]},{"id":301,"created_on":"2020-04-07 19:42:30","title":"A Visual Exploration of Gaussian Processes","description":"How to turn a collection of small building blocks into a versatile tool for solving regression problems.","tags":["article","tutorial","illustrated","kernels","gaussian-processes","distill-pub","posterior-distribution","prior-distribution","multivariate-gaussian-distributions"]},{"id":302,"created_on":"2020-04-07 19:47:39","title":"From both sides now: the math of linear regression","description":"Linear regression from both frequentist and Bayesian perspectives.","tags":["article","tutorial","linear-regression","regression","bayesian-inference","maximum-likelihood-estimation","gaussian-processes","bayesian-linear-regression","gaussian"]},{"id":303,"created_on":"2020-04-07 19:49:56","title":"Gaussian Processes for Dummies","description":"Gaussian Processes (GPs) are the natural next step in that journey as they provide an alternative approach to regression problems. ","tags":["article","tutorial","gaussian-processes"]},{"id":304,"created_on":"2020-04-07 19:54:17","title":"An intuitive guide to Gaussian processes","description":"A maths-free explanation of an under appreciated algorithm.","tags":["article","tutorial","gaussian-processes"]},{"id":305,"created_on":"2020-04-07 20:00:37","title":"Question Answering with a Fine-Tuned BERT","description":"What does it mean for BERT to achieve \u201chuman-level performance on Question Answering\u201d?","tags":["article","code","notebook","tutorial","video","attention","bert","transformers","fine-tuning","natural-language-processing","question-answering","squad"]},{"id":306,"created_on":"2020-04-07 20:07:28","title":"BERT Research - Key Concepts & Sources","description":"Video series on BERT's key concepts and sources.","tags":["article","tutorial","video","attention","bert","transformers","natural-language-processing"]},{"id":307,"created_on":"2020-04-07 20:11:29","title":"GLUE Explained: Understanding BERT Through Benchmarks","description":"In this post we take a look at an important NLP benchmark used to evaluate BERT and other transfer learning models!","tags":["article","tutorial","attention","bert","transformers","natural-language-processing","transfer-learning","blue","benchmarks"]},{"id":308,"created_on":"2020-04-07 23:22:18","title":"TinyBERT","description":"TinyBERT is 7.5x smaller and 9.4x faster on inference than BERT-base and achieves competitive performances in the tasks of natural language understanding.","tags":["code","paper","research","tutorial","attention","bert","transformers","natural-language-processing","tinybert","distillation","arxiv:1909.10351"]},{"id":309,"created_on":"2020-04-07 23:26:33","title":"Web Scraping For Machine Learning - With SQL Database","description":"Machine Learning requires data. But what about when the data you need is not available as a dataset? What then? Do you pay someone, or do it yourself?","tags":["article","code","tutorial","sql","full-stack","web-scraping"]},{"id":310,"created_on":"2020-04-07 23:45:57","title":"PySyft","description":"A library for encrypted, privacy preserving machine learning.","tags":["code","paper","research","library","security","privacy","pysyft","openmined","differential-privacy","encryption","federated-deep-learning","decentralized-ai","arxiv:1811.04017"]},{"id":311,"created_on":"2020-04-07 23:51:20","title":"Privacy Preserving Deep Learning with PyTorch & PySyft","description":"In this step-by-step tutorial series, you'll learn about all the ways PySyft can be used to bring Privacy and Decentralization to the Deep Learning ecosystem.","tags":["code","library","privacy","pysyft","openmined"]},{"id":313,"created_on":"2020-04-08 00:02:27","title":"NVIDIA Neural Modules: NeMo","description":"A toolkit for conversational AI.","tags":["article","code","deep-learning","library","natural-language-processing","speech","speech-recognition","conversational-ai"]},{"id":314,"created_on":"2020-04-08 00:06:21","title":"The Autonomous Learning Library","description":"A PyTorch library for building deep reinforcement learning agents.","tags":["code","pytorch","deep-q-networks","library","reinforcement-learning","deep-reinforcement-learning","soft-actor-critic","proximal-policy-optimization","deep-q-learning","actor-critic","policy-gradients"]},{"id":315,"created_on":"2020-04-08 00:10:21","title":"VoTT: Visual Object Tagging Tool","description":"An electron app for building end to end Object Detection Models from Images and Videos.","tags":["code","library","annotation","computer-vision","labeling","object-detection","cntk","video-tagging","image-annotation","tagging","image-tagging"]},{"id":316,"created_on":"2020-04-08 00:12:26","title":"Clinical BERT","description":"Repository for Publicly Available Clinical BERT Embeddings","tags":["code","paper","research","attention","bert","transformers","health","library","medicine","embeddings","natural-language-processing","clinical-bert","arxiv:1904.05342"]},{"id":317,"created_on":"2020-04-08 00:14:27","title":"COCO Annotator","description":"\u270f\ufe0f Web-based image segmentation tool for object detection, localization and key points.","tags":["code","library","action-localization","annotation","computer-vision","labeling","object-detection","segmentation","image-labeling","coco","annotated-images"]},{"id":318,"created_on":"2020-04-08 00:16:55","title":"Computer Vision Annotation Tool (CVAT)","description":"Free, online, interactive video and image annotation tool for computer vision.","tags":["code","library","annotation","computer-vision","labeling","segmentation","instance-segmentation","image-labeling","image-annotation","video-annotation"]},{"id":319,"created_on":"2020-04-08 00:19:04","title":"LabelImg","description":"\ud83d\udd8d\ufe0f A graphical image annotation tool and label object bounding boxes in images.","tags":["code","video","library","annotation","computer-vision","image-classification","labeling","yolo"]},{"id":320,"created_on":"2020-04-08 00:20:45","title":"Bokeh","description":"Bokeh is an interactive visualization library for modern web browsers.","tags":["code","library","visualization","bokeh"]},{"id":321,"created_on":"2020-04-08 00:25:37","title":"Snorkel","description":"A system for quickly generating training data with weak supervision.","tags":["article","code","library","data-augmentation","weak-supervision","rules","snorkel","snorkel-drybell"]},{"id":322,"created_on":"2020-04-08 00:30:41","title":"Harnessing Organizational Knowledge for Machine Learning","description":"A new weak supervision management system for this setting.","tags":["article","paper","research","library","labeling","rules","snorkel","snorkel-drybell","weka-supervision","arxiv:1812.00417"]},{"id":323,"created_on":"2020-04-08 08:16:05","title":"Applied Deep Learning Bootcamp","description":"This Bootcamp contains materials for an end-to-end deep learning project based on image classification.","tags":["code","tutorial","gcp","data-pipelines","better-training","deplyoment","ai-platform"]},{"id":324,"created_on":"2020-04-08 13:58:44","title":"AdverTorch","description":"A Toolbox for Adversarial Robustness Research","tags":["code","library","security","adversarial-learning","adversarial-attacks","adversarial-perturbations"]},{"id":325,"created_on":"2020-04-08 14:03:16","title":"Advbox Family","description":"Advbox Family is a series of AI model security tools set of Baidu Open Source,including the generation, detection and protection of adversarial examples.","tags":["code","onnx","paddlepaddle","pytorch","library","security","adversarial-learning","advbox","deepfool","fgsm","graphpipe"]},{"id":326,"created_on":"2020-04-08 14:08:58","title":"CleverHans","description":"An adversarial example library for constructing attacks, building defenses, and benchmarking both.","tags":["article","code","library","adversarial-learning","adversarial-attacks","cleverhans"]},{"id":327,"created_on":"2020-04-08 14:16:28","title":"How to Steal Modern NLP Systems with Gibberish?","description":"It\u2019s possible to steal BERT-based models without any real training data, even using gibberish word sequences.","tags":["article","paper","research","tutorial","attention","bert","transformers","computer-security","natural-language-processing","adversarial-learning","adversarial-attacks","arxiv:1910.12366"]},{"id":328,"created_on":"2020-04-08 14:29:22","title":"ProteinGCN: Protein model quality assessment using GCNs","description":"Source code for the paper: ProteinGCN: Protein model quality assessment using Graph Convolutional Networks.","tags":["code","paper","research","tutorial","pytorch","deep-learning","graph-convolutional-networks","health","graph-neural-networks","graphs","protein-model-quality-estimation","protein"]},{"id":329,"created_on":"2020-04-08 14:38:09","title":"How to Know When Machine Learning Does Not Now","description":"It is becoming increasingly important to understand how a prediction made by a Machine Learning model is informed by its training data. ","tags":["article","paper","research","tutorial","active-learning","anomaly-detection","interpretability","outlier-detection","semi-supervised-learning","adversarial-learning","uncertainty","adversarial-examples","arxiv:1803.04765"]},{"id":330,"created_on":"2020-04-08 14:43:19","title":"Breaking Linear Classifiers on ImageNet","description":"We say that we break, or fool ConvNets.","tags":["article","paper","research","tutorial","convolutional-neural-networks","adversarial-learning","adversarial-attacks","adversarial-examples","arxiv:1412.6572"]},{"id":331,"created_on":"2020-04-08 14:47:10","title":"Modin: Speed up your Pandas workflows ","description":"Scale your pandas workflows by changing one line of code.","tags":["code","library","pandas","modin","efficient"]},{"id":332,"created_on":"2020-04-08 14:53:51","title":"Numba","description":"NumPy aware dynamic Python compiler using LLVM. A Just-In-Time Compiler for Numerical Functions in Python.","tags":["code","library","numpy","numba"]},{"id":333,"created_on":"2020-04-08 15:00:03","title":"ONNX","description":"Open standard for machine learning interoperability.","tags":["code","onnx","machine-learning","library","interoperability"]},{"id":334,"created_on":"2020-04-08 15:04:28","title":"BioWordVec & BioSentVec","description":"Pre-trained embeddings for biomedical words and sentences","tags":["code","notebook","tutorial","fasttext","health","library","embeddings","natural-language-processing","sentence-embeddings","word-embeddings","bionlp","pubmed","sentence-similarity","mimic-iii"]},{"id":335,"created_on":"2020-04-08 15:07:44","title":"BioBERT: a pre-trained biomedical language representation model ","description":"Code for fine-tuning BioBERT for biomedical text mining tasks such as biomedical NER, relation extraction, QA, etc.","tags":["code","paper","research","attention","bert","transformers","health","library","named-entity-recognition","natural-language-processing","question-answering","relation-extraction","biomedical","biobert","text-mining"]},{"id":336,"created_on":"2020-04-08 15:23:28","title":"Organizing Machine Learning Projects Project Management Guideline","description":"The goal of this document is to provide a common framework for approaching machine learning projects that can be referenced by practitioners. ","tags":["article","tutorial","machine-learning","design","project-management","systems-design","projects-guide","machine-learning-systems"]},{"id":337,"created_on":"2020-04-08 15:26:21","title":"Discovering Millions of Datasets on the Web","description":"Dataset Search has indexed almost 25 million of these datasets, giving you a single place to search for datasets and find links to where the data is.","tags":["article","machine-learning","library","search","datasets","dataset-search"]},{"id":338,"created_on":"2020-04-08 15:29:34","title":"BayesNet","description":"TikZ ibrary for drawing Bayesian networks, graphical models and (directed) factor graphs in LaTeX.","tags":["code","bayesian-deep-learning","library","graphs","visualization","bayesian-networks","directed-factor-graphs","latex","tikz"]},{"id":339,"created_on":"2020-04-08 15:31:32","title":"An Introduction to Kubernetes","description":"This blog post will provide an introduction to Kubernetes so that you can understand the motivation behind the tool, what it is, and how you can use it.","tags":["code","tutorial","docker","kubernetes","devops"]},{"id":340,"created_on":"2020-04-08 15:33:57","title":"Building Machine Learning Products: A Problem Well-Defined","description":" In this post, we'll dig deeper into how to develop the requirements for a machine learning project when you're given a vague problem to solve.","tags":["article","tutorial","machine-learning","product-management","systems-design","products","guides","checklist"]},{"id":341,"created_on":"2020-04-08 15:42:56","title":"How to Unit Test Machine Learning Code","description":"Wouldn\u2019t suck to have to throw away perfectly good ideas because our implementations were buggy?","tags":["article","tutorial","unit-tests","testing"]},{"id":342,"created_on":"2020-04-08 15:49:19","title":"Multiprocessing vs. Threading in Python for Data Scientists","description":"We'll explore how data scientists can go about choosing between the two and which factors should be kept in mind while doing so.","tags":["article","tutorial","full-stack","multiprocessing","threading"]},{"id":343,"created_on":"2020-04-08 15:52:19","title":"Machine Learning Systems Design","description":"Designing a machine learning system.","tags":["article","tutorial","machine-learning","full-stack","product-management","systems-design","machine-learning-systems-design","checklist","mlops"]},{"id":344,"created_on":"2020-04-08 16:11:28","title":"Tokenizers","description":"\ud83d\udca5Fast State-of-the-Art Tokenizers optimized for Research and Production.","tags":["code","huggingface","library","natural-language-processing","preprocessing","tokenization","tokenizers"]},{"id":345,"created_on":"2020-04-08 16:14:23","title":"HMTL: Hierarchical Multi-Task Learning","description":"\ud83c\udf0a A State-of-the-Art neural network model for several NLP tasks based on PyTorch and AllenNLP","tags":["code","paper","research","tutorial","huggingface","pytorch","natural-language-processing","allennlp","allenai","multi-task-learning","arxiv:1811.06031"]},{"id":346,"created_on":"2020-04-08 16:23:21","title":"Bayesian Neural Networks Need Not Concentrate","description":"We show that if the prior does not distinguish between functions that generalize and functions that don\u2019t, Bayesian inference cannot provide uncertainties.","tags":["article","code","tutorial","bayesian-deep-learning","bayesian-neural-networks"]},{"id":347,"created_on":"2020-04-08 16:26:05","title":"The State of Transfer Learning in NLP","description":"This post expands on the NAACL 2019 tutorial on Transfer Learning in NLP. It highlights key insights and takeaways and provides updates based on recent work.","tags":["article","code","notebook","tutorial","natural-language-processing","transfer-learning","pretraining"]},{"id":348,"created_on":"2020-04-08 16:30:27","title":"Captum","description":"Model Interpretability for PyTorch","tags":["article","code","tutorial","pytorch","library","interpretability","multi-modal","captum","multimodal-learning"]},{"id":349,"created_on":"2020-04-08 16:35:52","title":"The Dark Secrets of BERT","description":"How much of the linguistically interpretable self-attention patterns that are presumed to be its strength are actually used to solve downstream tasks?","tags":["article","paper","research","tutorial","attention","bert","self-attention","transformers","fine-tuning","interpretability","natural-language-processing","disadvantages"]},{"id":350,"created_on":"2020-04-08 16:39:29","title":"Data Project Checklist","description":"There\u2019s a lot more to creating useful data projects than just training an accurate model!","tags":["article","tutorial","databases","product-management","training","systems-design","checklist"]},{"id":351,"created_on":"2020-04-08 16:43:50","title":"EvoNorms: Evolving Normalization-Activation Layers","description":"We use evolution to design new layers called EvoNorms, which outperform BatchNorm-ReLU on many tasks. ","tags":["paper","research","automl","batch-normalization","relu","normalization","activations","activation-layers","evonorms","group-normalization","groupnorm","batchnorm","arxiv:2004.02967"]},{"id":352,"created_on":"2020-04-08 16:47:43","title":"Do We Really Need Model Compression?","description":"In this blog post, we\u2019ll explore the obstacles involved in training small models from scratch. ","tags":["article","tutorial","model-compression"]},{"id":353,"created_on":"2020-04-08 17:08:41","title":"Keras OCR","description":"A packaged and flexible version of the CRAFT text detector and Keras CRNN recognition model. ","tags":["code","keras","library","computer-vision","optical-character-recognition"]},{"id":355,"created_on":"2020-04-08 17:18:52","title":"TensorFlow JS Examples","description":"Examples built with TensorFlow.js ","tags":["code","tutorial","javascript","tensorflow","tensorflow-js","library"]},{"id":356,"created_on":"2020-04-08 17:23:54","title":"TensorFlow.js Crash Course \u2014 Machine Learning For The Web","description":"Welcome to the first episode of the CodingTheSmartWay.com TensorFlow.js Crash Course for absolute beginners.","tags":["article","code","tutorial","video","tensorflow","tensorflow-js"]},{"id":357,"created_on":"2020-04-08 17:31:48","title":"Learn TensorFlow.js - Deep Learning and Neural Networks with JS","description":"This full course introduces the concept of client-side artificial neural networks.","tags":["tutorial","video","tensorflow","tensorflow-js"]},{"id":358,"created_on":"2020-04-08 17:34:52","title":"Milvus","description":"An open source vector similarity search engine.","tags":["code","library","similarity-search","vector-similarity","milvus"]},{"id":359,"created_on":"2020-04-08 17:36:13","title":"Annoy: Approximate Nearest Neighbors","description":"Approximate Nearest Neighbors in C++\/Python optimized for memory usage and loading\/saving to disk","tags":["code","c++","library","embeddings","similarity-search","spotify","vector-similarity","annoy"]},{"id":360,"created_on":"2020-04-08 17:38:56","title":"PyTorch Metric Learning","description":"The easiest way to use deep metric learning in your application. Modular, flexible, and extensible. Written in PyTorch.","tags":["article","code","paper","research","pytorch","library","metrics","self-supervised-learning","custom-metrics","losses","miners","regularizers","testers","trainers","custom-loss","deep-metric-learning","metric-learning"]},{"id":361,"created_on":"2020-04-08 17:42:32","title":"Logging in Python","description":"Logging is a very useful tool in a programmer\u2019s toolbox. ","tags":["article","tutorial","video","python","logging"]},{"id":362,"created_on":"2020-04-08 17:45:57","title":"Flask Mega-Tutorial series","description":"A comprehensive tutorial on Flask to create a complete app.","tags":["article","code","tutorial","databases","flask","html","javascript","sql","full-stack","sqlalchemy","jinja","bootstrap","ajax"]},{"id":363,"created_on":"2020-04-08 17:48:38","title":"Keras TCN","description":"Keras Temporal Convolutional Network.","tags":["code","tutorial","keras","convolutional-neural-networks","temporal-cnn","library"]},{"id":364,"created_on":"2020-04-08 17:53:15","title":"Named Entity Recognition Tagging","description":"In this post, we go through an example from Natural Language Processing, in which we learn how to load text data and perform NER tagging for each token.","tags":["article","tutorial","pytorch","recurrent-neural-networks","named-entity-recognition","natural-language-processing","stanford","cs230"]},{"id":365,"created_on":"2020-04-08 17:55:37","title":"ML beyond Curve Fitting: Causal Inference and do-Calculus","description":"An Intro to Causal Inference and do-Calculus","tags":["article","tutorial","causal-inference","do-calculus","judea-pearl"]},{"id":366,"created_on":"2020-04-08 17:59:20","title":"Introduction to Adversarial Machine Learning","description":"In this article we are going to learn about a handful of attacks, namely how they work and how we can defend networks against these attacks.","tags":["article","tutorial","adversarial-defense","adversarial-learning","adversarial-attacks","adversarial"]},{"id":367,"created_on":"2020-04-08 18:05:59","title":"ML Code Completeness Checklist","description":"Tips for releasing research code in Machine Learning (with official NeurIPS 2020 recommendations).","tags":["article","code","library","systems-design","checklist","reproducibility","research-code"]},{"id":368,"created_on":"2020-04-08 18:09:40","title":"The Machine Learning Reproducibility Checklist ","description":"How the AI Community Can Get Serious About Reproducibility","tags":["article","machine-learning","library","systems-design","checklist","reproducibility"]},{"id":369,"created_on":"2020-04-08 18:13:01","title":"The Case for Bayesian Deep Learning","description":"What makes Bayesian inference distinctive, and why Bayesian inference is worthwhile in deep learning.","tags":["article","tutorial","bayesian-deep-learning","bayesian-inference","bayesian-neural-networks"]},{"id":370,"created_on":"2020-04-08 18:15:27","title":"Introduction to Genetic Algorithms","description":"An introduction to the concepts and techniques around genetic algorithms.","tags":["article","tutorial","evolution-strategies","genetic-algorithms","evolutionary-algorithms"]},{"id":371,"created_on":"2020-04-08 18:18:09","title":"Introduction to K-Means Clustering in Python With Scikit-Learn","description":"A look at the old faithful K-Means clustering algorithm which has impacted a very huge number of applications in a wide variety of domains.","tags":["article","tutorial","scikit-learn","clustering","unsupervised-learning","k-means-clustering"]},{"id":372,"created_on":"2020-04-08 18:22:46","title":"An introduction to Q-Learning: Reinforcement Learning","description":"Q-Learning algorithm along with an implementation in Python using Numpy.","tags":["article","tutorial","q-learning","reinforcement-learning"]},{"id":373,"created_on":"2020-04-08 18:25:18","title":"An introduction to web scraping with Python ","description":"Let\u2019s scrape a fictional book store\u2019s website with BeautifulSoup!","tags":["article","code","tutorial","web-scraping","beautiful-soup","bs4"]},{"id":374,"created_on":"2020-04-08 18:28:35","title":"Practical Introduction to Web Scraping in Python","description":"Setting up a web scraper using Beautiful Soup 4.","tags":["article","tutorial","library","web-scraping","beautiful-soup","bs4","scraping"]},{"id":375,"created_on":"2020-04-08 18:31:20","title":"Manifold","description":"A model-agnostic visual debugging tool for machine learning","tags":["code","react","tensorflow-js","machine-learning","library","feature-importance","visualization","debugging","visual-debugging","model-agnostic","feature-attribution","performance-comparison","performance","redux"]},{"id":376,"created_on":"2020-04-08 18:34:47","title":"A Recipe for Training Neural Networks","description":"The most common neural net mistakes and listing a few common gotchas related to training neural nets.","tags":["article","tutorial","training","debugging","checklist","recipe"]},{"id":377,"created_on":"2020-04-08 18:37:09","title":"Checklist for debugging neural networks","description":"Tangible steps you can take to identify and fix issues with training, generalization, and optimization for machine learning models.","tags":["article","tutorial","debugging","systems-design","checklist"]},{"id":378,"created_on":"2020-04-08 19:37:57","title":"Ray","description":"Ray is a fast and simple framework for building and running distributed applications.","tags":["article","code","pytorch","library","distributed-training","reinforcement-learning","hyperparameter-tuning","hyperparameter-optimization","scalable-reinforcement-learning","raysgd","rllib","tuning"]},{"id":380,"created_on":"2020-04-08 21:05:06","title":"Graph Nets","description":"PyTorch Implementation and Explanation of Graph Representation Learning papers involving DeepWalk, GCN, GraphSAGE, ChebNet & GAT.","tags":["code","research","tutorial","pytorch","deep-learning","graph-convolutional-networks","graph-neural-networks","graphs","representation-learning","graph-representation-learning"]},{"id":382,"created_on":"2020-04-08 21:17:43","title":"Feature Visualization","description":"How neural networks build up their understanding of images","tags":["article","tutorial","interpretability","visualization","distill-pub","features","feature-visualization"]},{"id":383,"created_on":"2020-04-08 21:19:36","title":"The Building Blocks of Interpretability","description":"We explore the powerful interfaces that arise when you combine interpretability techniques\u2009and the rich structure of this combinatorial space.","tags":["article","tutorial","deep-learning","neural-networks","interpretability","distill-pub"]},{"id":384,"created_on":"2020-04-08 21:22:25","title":"Visualizing Memorization in RNNs","description":"Inspecting gradient magnitudes in context can be a powerful tool to see when recurrent units use short-term or long-term contextual understanding.","tags":["article","code","tutorial","attention","bert","recurrent-neural-networks","transformers","library","interpretability","natural-language-processing","visualization","debugging","distill-pub","memorization","heatmap","text-heatmap","distill-bert"]},{"id":385,"created_on":"2020-04-08 21:31:46","title":"GAN Lab","description":"An Interactive, Visual Experimentation Tool for Generative Adversarial Networks ","tags":["code","generative-adversarial-networks","neural-networks","library","interactive","demo"]},{"id":388,"created_on":"2020-04-08 21:36:39","title":"ConvNet Playground","description":"An interactive visualization for exploring Convolutional Neural Networks applied to the task of semantic image search.","tags":["article","data-visualization","convolutional-neural-networks","neural-networks","library","computer-vision","image-similarity-search","interactive","playground","semantic-image-search"]},{"id":389,"created_on":"2020-04-08 21:40:08","title":"Exploring Neural Networks with Activation Atlases","description":"An explorable activation atlas of features the network has learned which can reveal how the network typically represents some concepts.","tags":["article","tutorial","convolutional-neural-networks","library","activations","interactive"]},{"id":390,"created_on":"2020-04-08 21:42:55","title":"Deep Playground","description":"Tinker With a Neural Network Right Here in Your Browser.","tags":["code","tensorflow","neural-networks","library","interactive","playground","demo"]},{"id":392,"created_on":"2020-04-08 21:53:06","title":"Embedding Projector","description":"Visualization of high dimensional data, namely embeddings.","tags":["library","embeddings","natural-language-processing","word-embeddings","visualization","interactive"]},{"id":393,"created_on":"2020-04-08 21:55:50","title":"Seeing Theory","description":"A visual introduction to probability and statistics. ","tags":["code","library","statistics","illustrated","interactive","probability"]},{"id":394,"created_on":"2020-04-08 22:09:36","title":"ConvnetJS Demo","description":"Toy 2d classification with 2-layer neural network","tags":["article","neural-networks","library","interactive","convnet-js"]},{"id":395,"created_on":"2020-04-08 22:12:24","title":"Word2Viz: Explore Word Analogies","description":"Interactive visualization of word analogies in GloVe.","tags":["article","library","embeddings","natural-language-processing","word-embeddings","visualization","interactive","glove"]},{"id":396,"created_on":"2020-04-08 22:14:27","title":"D3 Graph Theory","description":"\ud83d\udca5 Interactive and colorful \ud83c\udfa8 graph theory tutorials made using d3.js \u26a1\ufe0f","tags":["code","tutorial","d3","library","interactive","graph-theory"]},{"id":397,"created_on":"2020-04-08 22:17:06","title":"Image-to-Image Translation with Conditional Adversarial Networks","description":"Tensorflow port of Image-to-Image Translation with Conditional Adversarial Nets","tags":["article","code","paper","research","tutorial","tensorflow","generative-adversarial-networks","library","computer-vision","image-to-image-translation","pix2pix","interactive","arxiv:1611.07004"]},{"id":398,"created_on":"2020-04-08 22:19:54","title":"Neural Slime Volleyball","description":"Recurrent neural network playing slime volleyball.  Can you beat them?","tags":["article","recurrent-neural-networks","library","video-games","interactive","convnet-js","p5-js"]},{"id":399,"created_on":"2020-04-08 22:24:46","title":"Whack a Mole","description":"\ud83d\udd28whack a mole with your nose, built with p5.js & ml5.js and powered by PoseNet.","tags":["code","library","interactive","posenet"]},{"id":400,"created_on":"2020-04-08 22:26:58","title":"Teachable Machine","description":"Train a computer to recognize your own images, sounds, & poses. Create machine learning models for your sites, apps, and more \u2013 no expertise. ","tags":["node-js","tensorflow","library","p5-js","ml5-js"]},{"id":401,"created_on":"2020-04-08 22:29:09","title":"Quick, Draw","description":"Can a neural network learn to recognize doodling?","tags":["code","dataset","paper","research","library","computer-vision","image-recognition","interactive","quick-draw","arxiv:1704.03477"]},{"id":402,"created_on":"2020-04-08 22:40:39","title":"The Infinite Drum Machine","description":"Create beats using sounds from the everyday world.","tags":["code","video","music","audio","embeddings","music-generation","interactive"]},{"id":403,"created_on":"2020-04-08 22:44:04","title":"A 2019 Guide to Speech Synthesis with Deep Learning","description":"A look at recent deep learning based speech synthesis research and techniques.","tags":["article","tutorial","natural-language-processing","speech","speech-synthesis","wavenet","tacotron","voiceloop","deep-voice","text-to-speech"]},{"id":404,"created_on":"2020-04-08 22:45:40","title":"GPyTorch","description":"A highly efficient and modular implementation of Gaussian Processes in PyTorch","tags":["code","pytorch","library","gaussian-processes"]},{"id":405,"created_on":"2020-04-08 22:56:47","title":"Lucid","description":"A collection of infrastructure and tools for research in neural network interpretability.","tags":["code","tutorial","tensorflow","interpretability"]},{"id":406,"created_on":"2020-04-08 22:58:14","title":"tf-explain","description":"Interpretability Methods for tf.keras models with Tensorflow 2.0","tags":["article","code","keras","tensorflow","library","interpretability","tensorflow-2-0"]},{"id":407,"created_on":"2020-04-08 23:00:02","title":"AllenNLP","description":"An open-source NLP research library, built on PyTorch.","tags":["code","pytorch","library","natural-language-processing","allennlp","allenai"]},{"id":408,"created_on":"2020-04-08 23:03:13","title":"FlashTorch","description":"Visualization toolkit for neural networks in PyTorch","tags":["article","code","video","pytorch","library","computer-vision","interpretability","visualization","explainability","flashtorch"]},{"id":409,"created_on":"2020-04-08 23:05:29","title":"DeepChem","description":"Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry, Materials Science and Biology ","tags":["code","deep-learning","machine-learning","library","drug-discovery","quantum-chemistry","biology","materials-science"]},{"id":410,"created_on":"2020-04-08 23:09:15","title":"Frameworks for Machine Learning Model Management","description":"This blog post will follow up by comparing three different tools developed to support reproducible machine learning model development.","tags":["article","tutorial","model-management","mlflow","experiment-tracking","systems-design","dvc","versioning","sacred"]},{"id":411,"created_on":"2020-04-08 23:11:09","title":"W&B: Weights and Biases","description":"Track model training at scale.","tags":["code","library","experiment-tracking","wandb","hyperparameter-optimization","weights-and-biases"]},{"id":412,"created_on":"2020-04-08 23:13:42","title":"RunwayML","description":"Machine learning for creators","tags":["code","design","library","computer-vision","face-detection","motion-capture","natural-language-processing","posenet","runwayml","densepose","mask-rcnn","body-estimation"]},{"id":413,"created_on":"2020-04-08 23:16:14","title":"Basic Relationship Patterns","description":"A quick walkthrough of the basic relational patterns.","tags":["article","code","tutorial","sql","sqlalchemy","alembic","relational-db"]},{"id":414,"created_on":"2020-04-08 23:18:04","title":"TensorBoard.dev ","description":"Easily host, track, and share your ML experiments for free.","tags":["tensorflow","experiment-tracking","tensorboard"]},{"id":415,"created_on":"2020-04-08 23:21:13","title":"BertViz","description":"Tool for visualizing attention in the Transformer model (BERT, GPT-2, Albert, XLNet, RoBERTa, CTRL, etc.)","tags":["article","code","paper","research","attention","bert","gpt2","transformers","xlnet","library","interpretability","natural-language-processing","visualization","roberta","xlm","ctrl","tensor2tensor","arxiv:1906.05714"]},{"id":416,"created_on":"2020-04-09 00:31:01","title":"Parameter Optimization in Neural Networks","description":"Visualizing parameter optimization","tags":["article","tutorial","tensorflow","convolutional-neural-networks","neural-networks","training","interactive","optimization","parameter-optimization","d3-js"]},{"id":417,"created_on":"2020-04-09 00:34:32","title":"Initializing Neural  Networks","description":"In this post, we'll explain how to initialize neural network parameters effectively.","tags":["neural-networks","library","weights-initialization","interactive","weights","initialization"]},{"id":418,"created_on":"2020-04-09 00:38:15","title":"Three Principles for Designing ML-Powered Products","description":"Reflecting on a handful of projects at Spotify, we\u2019ve come up with three principles we believe will help others design ML-powered experiences.","tags":["article","tutorial","design","product-management","systems-design"]},{"id":419,"created_on":"2020-04-09 00:41:03","title":"Text Feature Selection for Causal Inference","description":"Identifying the linguistic features that cause people to act a certain way after reading a text, regardless of confounding variables, is something people do.","tags":["article","code","tutorial","causal-inference","feature-selection","natural-language-processing","text","confounding-variables"]},{"id":420,"created_on":"2020-04-09 00:44:58","title":"Fairness Indicators: Scalable Infrastructure for Fair ML Systems","description":"Algorithms and the datasets on which ML models are trained on also have the ability to reflect or reinforce unfair biases.","tags":["article","code","tutorial","machine-learning","library","fairness","bias"]},{"id":421,"created_on":"2020-04-09 00:48:50","title":"Strategies to Expand Data for Specialized Genomics Problems","description":"How can we train a model that captures the specialized aspects of a data-limited problem and benefits from large amounts of related training data? ","tags":["article","tutorial","data-augmentation","genomics"]},{"id":422,"created_on":"2020-04-09 00:54:39","title":"Training Neural Nets on Larger Batches","description":"\ud83d\udca5 Practical Tips for 1-GPU, Multi-GPU & Distributed setups","tags":["article","tutorial","convolutional-neural-networks","training","distributed-training","gpu","batch-size"]},{"id":423,"created_on":"2020-04-09 00:57:49","title":"3D Ken Burns Effect from a Single Image","description":"Implementation of 3D Ken Burns Effect from a Single Image using PyTorch.","tags":["code","paper","research","tutorial","animation","3d","computer-vision","image-processing","ken-burns-effect","cupy","arxiv:1909.05483"]},{"id":424,"created_on":"2020-04-09 01:02:59","title":"Sparse Sinkhorn Attention","description":"A new efficient and sparse method for learning to attend based on differentiable sorting of internal representations.","tags":["code","paper","research","attention","transformers","natural-language-processing","reformer","sinkhorn","differentiable-sorting","arxiv:2002.11296"]},{"id":425,"created_on":"2020-04-09 01:41:48","title":"Backtester","description":"A backtesting framework for timeseries data.","tags":["code","library","time-series","time-series-forecasting","backtester"]},{"id":426,"created_on":"2020-04-09 16:37:10","title":"The Transformer Family","description":"This post presents how the vanilla Transformer can be improved for longer-term attention span, less memory and computation consumption, RL task solving, etc.","tags":["article","tutorial","attention","transformers","natural-language-processing"]},{"id":427,"created_on":"2020-04-09 18:57:01","title":"An Overview of Early Vision in InceptionV1","description":"A guided tour of the first five layers of InceptionV1,\r\ntaxonomized into \u201cneuron groups.\u201d","tags":["article","tutorial","convolutional-neural-networks","computer-vision","distill-pub","inception"]},{"id":428,"created_on":"2020-04-10 04:57:53","title":"AiLight: Automatic  Highlighting Using BERT","description":"Automatically highlight pdfs using BERT embeddings and clustering. \r\nhttps:\/\/anishthite.github.io\/ailight","tags":["article","attention","bert","transformers","library","embeddings","natural-language-processing"]},{"id":429,"created_on":"2020-04-10 15:23:21","title":"6 GAN Architectures You Really Should Know","description":"Some of the most popular GAN architectures, particularly 6 architectures that you should know to have a diverse coverage on GANs.","tags":["article","tutorial","generative-adversarial-networks","survey"]},{"id":430,"created_on":"2020-04-10 15:28:43","title":"Controlling Text Generation with Plug and Play Language Models","description":"This article discusses an alternative approach to controlled text generation, titled the Plug and Play Language Model (PPLM).","tags":["article","code","paper","research","tutorial","huggingface","transformers","language-modeling","natural-language-processing","text-generation","uber-ai","conditional-generation","pplm","arxiv:1912.02164"]},{"id":431,"created_on":"2020-04-10 15:35:00","title":"Genomic ULMFiT","description":"ULMFiT for Genomic Sequence Data","tags":["code","tutorial","fastai","pytorch","embeddings","language-modeling","natural-language-processing","ulmfit","genomics"]},{"id":432,"created_on":"2020-04-10 15:39:29","title":"Self-Supervised Learning and Computer Vision","description":"So, what do you do if there are no pre-trained models in your domain? ","tags":["article","tutorial","computer-vision","self-supervised-learning"]},{"id":433,"created_on":"2020-04-10 15:48:19","title":"ML for Clinicians: Advances for Multi-Modal Health Data","description":"This tutorial is intended for clinicians and other healthcare professionals who wish to become familiar with recent advances in machine learning in health.","tags":["tutorial","machine-learning","health","multi-modal","multilayer-perceptrons","clinical"]},{"id":434,"created_on":"2020-04-10 15:51:52","title":"scispaCy","description":"A full spaCy pipeline and models for scientific\/biomedical documents.","tags":["article","spacy","health","library","entity-linking","named-entity-recognition","natural-language-processing","biomedical","allenai","clinical"]},{"id":435,"created_on":"2020-04-10 15:57:40","title":"Adversarial Attacks and Defenses in Images, Graphs and Text","description":"We review the state of the art algorithms for generating adversarial examples and the countermeasures against adversarial examples for images, graphs and text.","tags":["paper","research","tutorial","adversarial-defense","adversarial-learning","adversarial-attacks","arxiv:1909.08072"]},{"id":436,"created_on":"2020-04-10 16:02:56","title":"InterpretML ","description":"Fit interpretable machine learning models. Explain blackbox machine learning.","tags":["code","paper","research","library","feature-importance","interpretability","lime","shap","explainability","sensitivity-analysis","partial-dependence","explainable-boosting","arxiv:1909.09223"]},{"id":437,"created_on":"2020-04-10 17:14:11","title":"Pruning Bert to Accelerate Inference","description":"After previously discussing various ways of accelerating models like BERT, in this blog post we empirically evaluate the pruning approach.","tags":["article","tutorial","attention","bert","transformers","model-compression","natural-language-processing","pruning","inference"]},{"id":438,"created_on":"2020-04-10 17:26:39","title":"Compressing Bert for Faster Prediction","description":"In this blog post, we discuss ways to make huge models like BERT smaller and faster. ","tags":["article","tutorial","attention","bert","transformers","knowledge-distillation","model-compression","natural-language-processing","pruning","quantization","distillation","inference","compression","tflite"]},{"id":439,"created_on":"2020-04-10 17:33:38","title":"Universal Adversarial Triggers for Attacking and Analyzing NLP","description":"We create short phrases that cause a specific model prediction when concatenated to \ud835\ude22\ud835\ude2f\ud835\ude3a input from a dataset. ","tags":["article","code","paper","research","tutorial","gpt2","transformers","adversarial-defense","natural-language-processing","squad","adversarial-learning","adversarial-attacks","allenai","arxiv:1908.07125"]},{"id":440,"created_on":"2020-04-10 17:39:19","title":"lazynlp","description":"Library to scrape and clean web pages to create massive datasets.","tags":["code","dataset","library","language-modeling","natural-language-processing","data-collection","text-mining","lazynlp"]},{"id":441,"created_on":"2020-04-10 17:45:55","title":"Fairness and Machine Learning","description":"This book gives a perspective on machine learning that treats fairness as a central concern rather than an afterthought.","tags":["article","tutorial","machine-learning","interpretability","privacy","explainability","fairness","bias","transparency","accountability"]},{"id":442,"created_on":"2020-04-10 17:47:45","title":"CausalML","description":"Uplift modeling and causal inference with machine learning algorithms.","tags":["code","paper","research","machine-learning","library","causal-inference","uplift-modeling","incubation","arxiv:2002.11631"]},{"id":443,"created_on":"2020-04-10 17:51:39","title":"AllenNLP Interpret","description":"A Framework for Explaining Predictions of NLP Models","tags":["api","article","code","paper","research","tutorial","conditional-random-fields","lstm","front-end-design","library","interpretability","language-modeling","named-entity-recognition","natural-language-processing","sentiment-analysis","squad","explainability","elmo","adversarial-learning","adversarial-attacks","allenai","saliency-maps","allen-nlp","textual-entailment","arxiv:1909.09251"]},{"id":444,"created_on":"2020-04-10 17:56:59","title":"sotabench","description":"Insight into the performance of open source Machine Learning .","tags":["library","state-of-the-art","sota","benchmarking"]},{"id":445,"created_on":"2020-04-10 18:00:50","title":"Natural Language Processing With spaCy in Python","description":"A comprehensive guide to NLP with spaCy.","tags":["article","tutorial","python","spacy","natural-language-processing","preprocessing","tokenization"]},{"id":446,"created_on":"2020-04-10 18:45:15","title":"Tips for Successfully Training Transformers on Small Datasets","description":"It turns out that you can easily train transformers on small datasets when you use tricks (and have the patience to train a very long time).","tags":["article","code","tutorial","transformers","training","data-augmentation","embeddings","natural-language-processing","small-datasets","ptb","wikitext-2","dropout"]},{"id":447,"created_on":"2020-04-10 19:04:43","title":"TOMA: Torch Memory-adaptive Algorithms","description":"Helps you write algorithms in PyTorch that adapt to the available (CUDA) memory.","tags":["code","pytorch","deep-learning","lstm","machine-learning","library","training","gpu","cuda","toma"]},{"id":448,"created_on":"2020-04-10 19:14:59","title":"\ud83e\udd84 How to build a SOTA Conversational AI with Transfer Learning","description":"Train a dialog agent leveraging transfer Learning from an OpenAI GPT and GPT-2 Transformer language model.","tags":["article","code","tutorial","transformers","chatbot","dialogue","language-modeling","natural-language-processing","transfer-learning","conversational-ai"]},{"id":449,"created_on":"2020-04-10 19:49:36","title":"Mimicry","description":"A PyTorch library for the reproducibility of GAN research.","tags":["article","code","pytorch","generative-adversarial-networks","library","benchmarks","reproducibility","dcgan","wgan-gp","sngan","cgan-pd","ssgan","infomax-gan"]},{"id":450,"created_on":"2020-04-10 20:03:14","title":"CS330: Deep Multi-Task and Meta Learning","description":"Study how the structure arising from multiple tasks can be leveraged to learn more efficiently or effectively.","tags":["course","tutorial","video","meta-learning","stanford","cs330","multi-task-learning"]},{"id":451,"created_on":"2020-04-10 20:10:28","title":"Evaluation Metrics for Language Modeling","description":"In this article, we will focus on traditional intrinsic metrics that are extremely useful during the process of training the language model itself. ","tags":["tutorial","bayesian-inference","language-modeling","metrics","natural-language-processing","generative-models","perplexity","gaussian-processes","cross-entropy","bits-per-character","bpc","glue"]},{"id":452,"created_on":"2020-04-10 20:18:20","title":"CS224n: Natural Language Processing with Deep Learning","description":"In this course, students will gain a thorough introduction to cutting-edge research in Deep Learning for NLP.","tags":["course","tutorial","video","deep-learning","natural-language-processing","stanford","cs224n"]},{"id":453,"created_on":"2020-04-10 20:23:21","title":"CS231n: Convolutional Neural Networks for Visual Recognition","description":"Deep dive into details of the deep learning architectures with a focus on learning end-to-end models for these tasks, particularly image classification.","tags":["course","tutorial","video","convolutional-neural-networks","deep-learning","computer-vision","cs231n","stanford"]},{"id":454,"created_on":"2020-04-10 20:27:12","title":"All The Ways You Can Compress BERT","description":"In this post I\u2019ll list and briefly taxonomize all the papers I\u2019ve seen compressing BERT. ","tags":["article","tutorial","attention","bert","transformers","knowledge-distillation","model-compression","natural-language-processing","pruning","quantization","pretraining","compression","weight-factorization","weight-sharing","downstream-tasks"]},{"id":455,"created_on":"2020-04-10 20:31:09","title":"Illustrated: Self-Attention","description":"Step-by-step guide to self-attention with illustrations and code.","tags":["article","code","notebook","tutorial","pytorch","attention","self-attention","transformers","natural-language-processing","illustrated"]},{"id":456,"created_on":"2020-04-10 20:49:37","title":"Gaussian Processes, Not Quite for Dummies","description":"More than just scratch the surface of GPs by reading some \"machine learning for dummies\" tutorial, but aren't quite yet ready to take on a textbook.","tags":["article","tutorial","video","gaussian-processes","nonlinear-regression"]},{"id":457,"created_on":"2020-04-10 20:53:29","title":"BigGanEx: A Dive into the Latent Space of BigGan","description":"A closer look at the generative abilities of the BigGAN.","tags":["article","tutorial","generative-adversarial-networks","art","generative-models","biggan","latent-space"]},{"id":458,"created_on":"2020-04-10 20:58:41","title":"Limitations of Deep Learning for Vision, and How We Might Fix The","description":"This is an opinion paper about the strengths and weaknesses of Deep Nets for vision.","tags":["article","paper","research","tutorial","deep-learning","computer-vision","limitations","arxiv:1805.04025"]},{"id":459,"created_on":"2020-04-10 21:05:32","title":"Beyond the Pixel Plane: Sensing and Learning in 3d","description":"Recent deep learning techniques that enable 3D object classification and semantic segmentation.","tags":["article","tutorial","3d","autonomous-vehicles","computer-vision","object-classification","semantic-segmentation","segmentation"]},{"id":460,"created_on":"2020-04-11 13:22:38","title":"Customer Analytics","description":"Customer Segmentation, RFM analysis on demographic, purchase data respectively and  Price Elasticity simulation for purchase probability","tags":["code","clustering","dimensionality-reduction","principal-component-analysis","rfm","price-elasticty"]},{"id":461,"created_on":"2020-04-11 15:46:49","title":"Human in the Loop: Deep Learning without Wasteful Labelling","description":"A new practical method for choosing batches of informative points in Deep Active Learning which avoids labelling redundancies that plague existing methods. ","tags":["article","code","paper","research","tutorial","bayesian-deep-learning","active-learning","labeling","bayesian-active-learning","arxiv:1906.08158"]},{"id":462,"created_on":"2020-04-11 16:52:35","title":"A Visual Guide to Self-Labelling Images","description":"A self-supervised method to generate labels via simultaneous clustering and representation learning","tags":["article","tutorial","computer-vision","image-clustering","representation-learning","self-supervised-learning","illustrated"]},{"id":463,"created_on":"2020-04-12 04:16:43","title":"Gradient Centralization","description":"Optimization technique that operates directly on gradients by centralizing their vectors to zero mean.","tags":["code","paper","research","tutorial","deep-learning","neural-networks","normalization","optimization","gradients","gradient-centralization","arxiv:2004.01461"]},{"id":464,"created_on":"2020-04-12 20:39:40","title":"A Survey of Methods for Model Compression in NLP","description":"A look at model compression techniques applied on base model pre-training to reduce the computational cost of prediction.","tags":["article","tutorial","knowledge-distillation","model-compression","pruning","quantization","precision-reduction","model-replacement","operation-fusion","survey"]},{"id":465,"created_on":"2020-04-13 02:18:51","title":"3D Photography using Context-aware Layered Depth Inpainting","description":"A multi-layer representation for novel view synthesis that contains hallucinated color and depth structures in regions occluded in the original view. ","tags":["article","code","notebook","paper","research","tutorial","video","design","3d","computer-vision","image-generation","inpainting","arxiv:2004.04727"]},{"id":466,"created_on":"2020-04-13 18:48:40","title":"Tokenizers: How Machines Read","description":"A survey of different tokenization strategies in NLP.","tags":["tutorial","natural-language-processing","tokenizers","survey"]},{"id":467,"created_on":"2020-04-13 19:43:35","title":"Practical Text Classification With Python and Keras","description":"You will get a grasp of current advancements of (deep) neural networks and how they can be applied to text.","tags":["article","tutorial","keras","natural-language-processing","sentiment-analysis","text-classification"]},{"id":468,"created_on":"2020-04-13 19:45:46","title":"Text Classification With Torchtext","description":"This example shows how to train a supervised learning algorithm for classification using one of these TextClassification datasets.","tags":["article","code","tutorial","pytorch","natural-language-processing","text-classification","torchtext","ngrams"]},{"id":469,"created_on":"2020-04-13 21:17:44","title":"Understanding Text With Bert","description":"Building a machine reading comprehension system using the latest advances in deep learning for NLP.","tags":["article","tutorial","attention","bert","transformers","natural-language-processing","question-answering","reading-comprehension"]},{"id":470,"created_on":"2020-04-13 21:38:20","title":"Transfer Learning with T5: the Text-To-Text Transfer Transformer","description":"In the paper, we demonstrate how to achieve state-of-the-art results on multiple NLP tasks using a text-to-text transformer pre-trained on a large text corpus.","tags":["article","code","paper","research","tutorial","transformers","machine-translation","natural-language-processing","question-answering","reading-comprehension","text-classification","text-summarization","transfer-learning","t5","multi-task-learning","arxiv:1910.10683"]},{"id":471,"created_on":"2020-04-13 21:48:48","title":"Building a COVID-19 Project Recommendation System","description":"How to create a GitHub open source repo recommendation system web app with MLflow, Sagemaker, and Booklet.ai.","tags":["article","code","github","scikit-learn","natural-language-processing","recommendation-systems"]},{"id":473,"created_on":"2020-04-13 22:33:21","title":"Neural Machine Translation With Attention","description":"This notebook trains a sequence to sequence (seq2seq) model for Spanish to English translation. ","tags":["code","tutorial","sequence-to-sequence","machine-translation","natural-language-processing"]},{"id":474,"created_on":"2020-04-13 22:48:49","title":"PyTorch Tutorial for Deep Learning Researchers","description":"This repository provides tutorial code for deep learning researchers to learn PyTorch. ","tags":["code","tutorial","pytorch","autoencoders","generative-adversarial-networks","variational-autoencoders","computer-vision","image-captioning","style-transfer"]},{"id":475,"created_on":"2020-04-14 00:34:57","title":"BLOCK: Bilinear Superdiagonal Fusion for VQA and VRD","description":"We introduce a novel module (BLOCK) to fuse two representations together.","tags":["code","paper","research","tutorial","visual-question-answering","block","visual-relationship-detection","arxiv:1902.00038"]},{"id":476,"created_on":"2020-04-14 00:40:10","title":"Show and Tell: A Neural Image Caption Generator","description":"A TensorFlow implementation of the image-to-text model.","tags":["article","code","paper","research","tutorial","tensorflow","convolutional-neural-networks","lstm","computer-vision","image-captioning","arxiv:1609.06647"]},{"id":477,"created_on":"2020-04-14 01:46:32","title":"SimpleGAN","description":"A Tensorflow-based framework to ease the training of generative models","tags":["article","code","keras","tensorflow","autoencoders","deep-learning","generative-adversarial-networks","neural-networks","library","computer-vision","cyclegan","pix2pix","wgan","infogan","dcgan","voxelgan","3dgan"]},{"id":478,"created_on":"2020-04-14 02:41:43","title":"Semantic Segmentation on MIT ADE20K dataset in PyTorch","description":"Pytorch implementation for Semantic Segmentation\/Scene Parsing on MIT ADE20K dataset.","tags":["code","tutorial","pytorch","computer-vision","semantic-segmentation","segmentation","scene-parsing","ade20k"]},{"id":479,"created_on":"2020-04-14 02:45:02","title":"Deep Tutorials for PyTorch","description":"This is a series of in-depth tutorials I'm writing for implementing cool deep learning models on your own with the amazing PyTorch library.","tags":["code","tutorial","pytorch","attention","computer-vision","image-captioning","machine-translation","natural-language-processing","object-detection","semantic-segmentation","super-resolution","text-classification","text-summarization","segmentation","sequence-labeling","text-recognition"]},{"id":480,"created_on":"2020-04-14 03:46:09","title":"ViLBERT-MT: Multi-Task Vision & Language Representation Learning","description":"A single ViLBERT Multi-Task model can perform 8 different vision and language tasks learnt from 12 datasets!","tags":["article","code","paper","research","tutorial","computer-vision","image-captioning","multi-modal","visual-question-answering","multi-task-learning","arxiv:1912.02315"]},{"id":481,"created_on":"2020-04-14 03:50:18","title":"Training an Image Classifier in PyTorch","description":"Torchvision, that has data loaders for common datasets such as Imagenet, CIFAR10, MNIST, etc. and data transformers for images, vizualization and data loaders.","tags":["article","code","tutorial","pytorch","computer-vision","image-classification","torchvision"]},{"id":482,"created_on":"2020-04-14 17:28:37","title":"A Visual Exploration of DeepCluster","description":"DeepCluster is a self-supervised method to combine clustering and representation learning","tags":["article","tutorial","pytorch","computer-vision","image-clustering","representation-learning","self-supervised-learning"]},{"id":483,"created_on":"2020-04-14 18:54:41","title":"Gate Decorator: Global Filter Pruning","description":"A global filter pruning algorithm called Gate Decorator, which transforms a vanilla CNN module by multiplying its output by the channel-wise scaling factors.","tags":["article","paper","research","tutorial","convolutional-neural-networks","model-compression","pruning","quantization","gate-decorator","arxiv:1909.08174"]},{"id":485,"created_on":"2020-04-14 20:10:53","title":"Health Checks for Machine Learning","description":"A guide to model retraining and evaluation.","tags":["article","tutorial","systems-design","checklist","health-checks"]},{"id":486,"created_on":"2020-04-14 20:12:43","title":"A 2019 guide to Human Pose Estimation with Deep Learning","description":"The basics of Human Pose Estimation (2D) and review the literature on this topic.","tags":["article","tutorial","computer-vision","pose-estimation","survey"]},{"id":487,"created_on":"2020-04-14 21:15:35","title":"Face Alignment in Full Pose Range: A 3D Total Solution","description":"Face Alignment in Full Pose Range: A 3D Total Solution.","tags":["article","code","paper","research","tutorial","pytorch","3d","computer-vision","pose-estimation","face-alignment","3d-face","arXiv:1804.01005"]},{"id":488,"created_on":"2020-04-14 21:21:51","title":"V2V-PoseNet Pytorch","description":"PyTorch implementation of V2V-PoseNet with IntegralPose\/PoseFix loss.","tags":["code","paper","research","tutorial","pytorch","computer-vision","hand-pose-estimation","pose-estimation","human-pose-estimation","arxiv:1711.07399"]},{"id":489,"created_on":"2020-04-14 22:22:40","title":"Deep Learning Based Super Resolution, Without Using a GAN","description":"Techniques and training a deep learning model for image improvement, image restoration, inpainting and super resolution.","tags":["tutorial","computer-vision","image-restoration","super-resolution","inpainting","image-improvement"]},{"id":490,"created_on":"2020-04-14 22:35:21","title":"U-Net Deep Learning Colorization of Greyscale Images","description":"This article describes experiments training a neural network to generate 3 channel colour images from single channel greyscale images using deep learning.","tags":["article","tutorial","colorization","computer-vision","unet"]},{"id":491,"created_on":"2020-04-14 22:38:54","title":"Deep Learning for Image Super-resolution: A Survey","description":"This article aims to provide a comprehensive survey on recent advances of image super-resolution using deep learning approaches.","tags":["paper","research","computer-vision","super-resolution","survey","arxiv:1902.06068"]},{"id":492,"created_on":"2020-04-14 22:41:52","title":"Second-order Attention Network for Single Image Super-resolution","description":"We propose a second-order attention network (SAN) for more powerful feature expression and feature correlation learning.","tags":["code","paper","research","tutorial","attention","computer-vision","super-resolution","arxiv:1909.11937"]},{"id":493,"created_on":"2020-04-14 22:52:49","title":"DeepSORT: Deep Learning to Track Custom Objects in a Video","description":"A look at deep learning based approached for object tracking.","tags":["article","code","tutorial","computer-vision","object-tracking","yolo","kalman-filters","deepsort"]},{"id":494,"created_on":"2020-04-14 22:59:56","title":"Fast Online Object Tracking and Segmentation: A Unifying Approach","description":"We illustrate how to perform both realtime object tracking and semi-supervised video object segmentation using a fully-convolutional Siamese approach.","tags":["article","code","paper","research","tutorial","video","convolutional-neural-networks","siamese-networks","computer-vision","object-tracking","segmentation","arxiv:1812.05050"]},{"id":495,"created_on":"2020-04-14 23:10:48","title":"Neural Style Transfer","description":"This tutorial uses deep learning to compose one image in the style of another image (ever wish you could paint like Picasso or Van Gogh?).","tags":["article","code","notebook","paper","research","tutorial","tensorflow","computer-vision","style-transfer","arxiv:1508.06576"]},{"id":496,"created_on":"2020-04-14 23:14:59","title":"Fast- Neural Style","description":"Pytorch implementation of an algorithm for artistic style transfer. ","tags":["code","paper","research","tutorial","pytorch","computer-vision","style-transfer","arxiv:1603.08155"]},{"id":497,"created_on":"2020-04-14 23:21:16","title":"Torchvision Object Detection Finetuning Tutorial","description":"Finetuning a pre-trained Mask R-CNN model in the Penn-Fudan Database for Pedestrian Detection and Segmentation.","tags":["article","code","notebook","tutorial","pytorch","convolutional-neural-networks","computer-vision","fine-tuning","object-detection","segmentation","mask-rcnn","torchvision"]},{"id":498,"created_on":"2020-04-14 23:25:47","title":"DCGAN Tutorial ","description":"This tutorial will give an introduction to DCGANs through an example.","tags":["article","code","tutorial","pytorch","generative-adversarial-networks","dcgan"]},{"id":499,"created_on":"2020-04-14 23:34:32","title":"Deep Learning for Videos: A 2018 Guide to Action Recognition","description":"In this post, I summarize the literature on action recognition from videos. ","tags":["article","tutorial","video","convolutional-neural-networks","spatial-temporal-cnn","temporal-cnn","computer-vision","video-classification","action-recognition"]},{"id":500,"created_on":"2020-04-15 14:37:55","title":"Homomorphic Encryption in Pysyft With Seal and Pytorch","description":"Evaluate tensor operations on encrypted data by leveraging the CKKS homomorphic encryption scheme implemented on the SEAL Microsoft library.","tags":["article","code","tutorial","pytorch","library","privacy","pysyft","differential-privacy","homomorphic-encryption","seal","tenseal"]},{"id":501,"created_on":"2020-04-15 15:20:56","title":"Shakespeare Meets Google's Flax","description":"Application of RNNs in Flax: Character-Level Language Model.","tags":["article","code","tutorial","recurrent-neural-networks","natural-language-processing","text-generation","flax","char-rnn"]},{"id":502,"created_on":"2020-04-15 15:48:53","title":"Anomaly Detection for Dummies","description":"Unsupervised anomaly detection for univariate & multivariate data.","tags":["article","code","notebook","tutorial","anomaly-detection","outlier-detection","unsupervised-learning","univariate","multivariate"]},{"id":503,"created_on":"2020-04-15 15:54:03","title":"Anomaly Detection with Autoencoder in TensorFlow 2.0","description":"How to implement a Deep Neural Network Model for Anomaly Detection in TensorFlow 2.0.","tags":["article","tutorial","tensorflow","autoencoders","finance","anomaly-detection","fraud-detection","financial-fraud"]},{"id":504,"created_on":"2020-04-15 15:56:49","title":"Deep Learning for Anomaly Detection: A Survey","description":"We present a structured and comprehensive review of research methods in deep anomaly detection (DAD).","tags":["paper","research","tutorial","anomaly-detection","survey","arxiv:1901.03407"]},{"id":505,"created_on":"2020-04-15 15:59:30","title":"Anomaly detection with Keras, TensorFlow, and Deep Learning","description":"Perform anomaly detection in your own image datasets using deep learning.","tags":["article","tutorial","keras","tensorflow","autoencoders","deep-learning","anomaly-detection","computer-vision"]},{"id":506,"created_on":"2020-04-15 16:05:16","title":"Deep Learning for Anomaly Detection","description":"Techniques and applications of anomaly detection.","tags":["article","tutorial","autoencoders","generative-adversarial-networks","sequence-to-sequence","support-vector-machines","variational-autoencoders","anomaly-detection","self-supervised-learning","semi-supervised-learning","unsupervised-learning","systems-design"]},{"id":507,"created_on":"2020-04-15 16:12:41","title":"Almost Everything You Need to Know About Time Series","description":"Understand moving average, exponential smoothing, stationarity, autocorrelation, SARIMA, and more.","tags":["article","tutorial","time-series","autocorrelation","sarima","moving-average"]},{"id":508,"created_on":"2020-04-15 16:29:08","title":"STEFANN: Scene Text Editor using Font Adaptive Neural Network","description":"A generalized method for realistic modification of textual content present in a scene image. \u2b50\ufe0f Accepted in CVPR 2020.","tags":["article","code","paper","research","tutorial","video","convolutional-neural-networks","deep-learning","computer-vision","image-generation","stefann","colornet","scene-text-editor","cvpr","font-generation","cvpr-2020","scene-image","font-adaptive","font-color-transfer","single-observation","fannet","generative-networks","arxiv:1903.01192"]},{"id":509,"created_on":"2020-04-15 16:34:04","title":"Time Series Prediction with LSTM Using PyTorch","description":"Time series applied to forecasting on the Airplane Passengers Dataset.","tags":["code","notebook","tutorial","pytorch","lstm","forecasting","time-series"]},{"id":510,"created_on":"2020-04-15 16:40:15","title":"Dask","description":"A flexible library for parallel computing in Python.","tags":["code","python","scikit-learn","library","pandas","numpy","parallel-computing","dask","dataframes"]},{"id":511,"created_on":"2020-04-15 16:59:46","title":"Complete Guide to Topic Modeling","description":"An overview of topic modeling with scikit-learn and gensim.","tags":["article","tutorial","scikit-learn","topic-modeling","gensim"]},{"id":512,"created_on":"2020-04-15 17:01:50","title":"Topic Modeling and Latent Dirichlet Allocation (LDA) in Python","description":"Apply LDA to a set of documents and split them into topics. ","tags":["article","code","notebook","tutorial","latent-dirichlet-allocation","topic-modeling","tfidf"]},{"id":513,"created_on":"2020-04-15 17:05:36","title":"lda2vec: Tools for interpreting natural language","description":"The lda2vec model tries to mix the best parts of word2vec and LDA into a single framework.","tags":["code","paper","research","video","latent-dirichlet-allocation","library","embeddings","interpretability","natural-language-processing","topic-modeling","word-embeddings","word2vec","lda2vec","arxiv:1605.02019"]},{"id":514,"created_on":"2020-04-15 17:09:33","title":"Algorithmic Solutions to Algorithmic Bias: A Technical Guide","description":"Technical approaches to mitigating algorithmic bias.","tags":["article","tutorial","autoencoders","variational-autoencoders","adversarial-learning","fairness","bias","de-biasing","upsampling"]},{"id":515,"created_on":"2020-04-15 17:15:45","title":"AI Fairness 360 Open Source Toolkit","description":"A comprehensive set of fairness metrics for datasets and ML models, explanations for metrics, and algorithms to mitigate bias in datasets and models.","tags":["article","code","paper","research","library","fairness","bias","ibm","arxiv:1810.01943"]},{"id":516,"created_on":"2020-04-15 17:21:53","title":"Deep Learning for Object Detection: A Comprehensive Review","description":"A closer look at Tensorflow\u2019s object detection models: Faster R-CNN, R-FCN, and SSD.","tags":["article","tutorial","tensorflow","convolutional-neural-networks","computer-vision","object-detection","rcnn"]},{"id":517,"created_on":"2020-04-15 17:31:22","title":"An Intuitive Guide to Deep Network Architectures","description":"Intuition behind base network architectures like MobileNets, Inception, and ResNet.","tags":["article","tutorial","computer-vision","image-classification","object-detection","transfer-learning"]},{"id":518,"created_on":"2020-04-15 17:34:24","title":"Topic Modeling with Gensim (Python)","description":"Application of LDA for topic modeling using Gensim.","tags":["article","tutorial","latent-dirichlet-allocation","topic-modeling","gensim","perplexity"]},{"id":519,"created_on":"2020-04-15 17:42:37","title":"Clustering Algorithms","description":"A look at different types of clustering.","tags":["article","tutorial","clustering","unsupervised-learning"]},{"id":520,"created_on":"2020-04-15 17:45:05","title":"10 Clustering Algorithms With Python","description":"Clustering or cluster analysis is an unsupervised learning problem.","tags":["article","tutorial","scikit-learn","clustering","unsupervised-learning","affinity-propagation","agglomerative-clustering","birch","dbscan","k-means","mean-shift","gaussian-mixture-model"]},{"id":521,"created_on":"2020-04-15 18:00:32","title":"Lifelines","description":"Survival analysis in Python ","tags":["article","code","library","survival-analysis","pandas"]},{"id":522,"created_on":"2020-04-15 18:06:10","title":"Survival Analysis: Intuition & Implementation in Python","description":"An overview and implementation of survival analysis.","tags":["article","code","tutorial","survival-analysis","time-to-event","lifelines","kaplan-meier-estimate","cox-proportional-hazard-model"]},{"id":523,"created_on":"2020-04-15 18:18:44","title":"Causality in Machine Learning 101 for Dummies like Me","description":"Exploring causality through the lens of machine learning.","tags":["article","tutorial","causal-inference","causality"]},{"id":524,"created_on":"2020-04-15 18:23:57","title":"Causal Inference in Machine Learning","description":"An illustrated look at causal inference in machine learning.","tags":["tutorial","causal-inference","counterfactuals","causality"]},{"id":525,"created_on":"2020-04-15 18:32:07","title":"DoWhy","description":"DoWhy is a Python library for causal inference that supports explicit modeling and testing of causal assumptions. ","tags":["article","code","bayesian-deep-learning","library","causal-inference","dowhy","microsoft"]},{"id":526,"created_on":"2020-04-15 19:23:37","title":"How to do Speech Recognition with Deep Learning","description":"Let\u2019s learn how to do speech recognition with deep learning!","tags":["article","tutorial","deep-learning","speech","speech-recognition"]},{"id":527,"created_on":"2020-04-15 19:29:02","title":"Frameworks For End-to-End Speech Recognition ","description":"Deep Learning-Based Automatic Speech Recognition","tags":["article","tutorial","speech","speech-recognition","asr"]},{"id":528,"created_on":"2020-04-15 19:34:55","title":"Tacotron 2 (without wavenet)","description":"PyTorch implementation with faster-than-realtime inference.","tags":["article","code","paper","research","tutorial","speech","speech-synthesis","tacotron","tts","arxiv:1712.05884"]},{"id":529,"created_on":"2020-04-15 19:39:24","title":"Real-Time Voice Cloning","description":"Clone a voice in 5 seconds to generate arbitrary speech in real-time. Code for Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech.","tags":["code","paper","research","tutorial","video","natural-language-processing","speech","speech-synthesis","sv2tts","text-to-speech","arxiv:1806.04558"]},{"id":530,"created_on":"2020-04-15 19:46:02","title":"Neural Nets for Generating Music","description":"A look at the use of deep learning on music generation. ","tags":["article","tutorial","deep-learning","audio","music-generation"]},{"id":531,"created_on":"2020-04-15 19:56:15","title":"GANSynth: Making music with GANs","description":"In this post, we introduce GANSynth, a method for generating high-fidelity audio with Generative Adversarial Networks (GANs).","tags":["article","code","paper","research","tutorial","tensorflow","generative-adversarial-networks","music","audio","music-generation","magenta","gansynth","arxiv:1902.08710"]},{"id":532,"created_on":"2020-04-15 20:03:46","title":"Magenta","description":"Making music and art using machine learning.","tags":["article","code","notebook","tensorflow","art","library","music","audio","music-generation","magenta"]},{"id":533,"created_on":"2020-04-15 20:11:56","title":"Generative Modeling with Sparse Transformers","description":"Sparse Transformer, a deep neural network which sets new records at predicting what comes next in a sequence\u2014whether text, images, or sound.","tags":["article","code","paper","research","tutorial","transformers","audio","computer-vision","image-generation","music-generation","natural-language-processing","generative-modeling","sparse-transformers","arxiv:1904.10509"]},{"id":535,"created_on":"2020-04-15 21:25:13","title":"Machine Learning for Humans, Part 3: Unsupervised Learning","description":"Clustering and dimensionality reduction: k-means clustering, hierarchical clustering, principal component analysis (PCA), singular value decomposition (SVD)","tags":["article","tutorial","clustering","dimensionality-reduction","unsupervised-learning","principal-component-analysis","svd"]},{"id":536,"created_on":"2020-04-15 21:39:44","title":"Active Learning: Curious AI Algorithms","description":"Discover active learning, a case of semi-supervised machine learning: from its definition and its benefits, to applications and modern research into it.\r\n","tags":["article","tutorial","active-learning","semi-supervised-learning"]},{"id":537,"created_on":"2020-04-15 21:48:07","title":"An Overview of Multi-Task Learning in Deep Neural Networks","description":"This post gives a general overview of the current state of multi-task learning.","tags":["article","tutorial","multi-task-learning"]},{"id":538,"created_on":"2020-04-15 22:15:16","title":"N-Shot Learning: Learning More with Less Data","description":"An in-depth look at zero-shot learning and few-shot learning.","tags":["article","tutorial","few-shot-learning","one-shot-learning","n-shot-learning"]},{"id":539,"created_on":"2020-04-15 22:18:12","title":"Advances in Few-Shot Learning: A Guided Tour","description":"A deep dive into matching networks, prototypical networks and model-agnostic meta-learning.","tags":["article","code","tutorial","few-shot-learning","meta-learning"]},{"id":540,"created_on":"2020-04-15 22:26:14","title":"Deep Learning Is Not Good Enough, We Need Bayesian Deep Learning","description":"In this post I\u2019m going to introduce Bayesian deep learning (BDL), which provides a deep learning framework which can also model uncertainty.","tags":["article","tutorial","bayesian-deep-learning","deep-learning","uncertainty"]},{"id":541,"created_on":"2020-04-15 22:40:42","title":"Interpretable Machine Learning","description":"Extracting human understandable insights from any Machine Learning model.","tags":["article","tutorial","interpretability","ermutation-importance","partial-dependence-plots","shap-values"]},{"id":542,"created_on":"2020-04-15 22:48:47","title":"How (And Why) to Create a Good Validation Set","description":"Steps for creating a representative validation set for training.","tags":["article","tutorial","systems-design","data-collection","checklist","validation-set"]},{"id":543,"created_on":"2020-04-15 22:51:46","title":"The Process for Data Preparation and Feature Engineering","description":"To get our predictions right, we must construct the data set and transform the data correctly.","tags":["article","tutorial","feature-engineering","systems-design","data-collection"]},{"id":544,"created_on":"2020-04-16 02:53:13","title":"Data Augmentation | How to use Deep Learning With Limited Data","description":"This article is a comprehensive review of Data Augmentation techniques for Deep Learning, specific to images.","tags":["article","tutorial","data-augmentation","pretraining"]},{"id":545,"created_on":"2020-04-16 03:01:53","title":"1000x Faster Data Augmentation","description":"Population Based Augmentation (PBA), an algorithm that quickly and efficiently learns a state-of-the-art approach to augmenting data for neural network training","tags":["article","code","paper","research","tutorial","data-augmentation","arxiv:1905.05393"]},{"id":546,"created_on":"2020-04-16 03:15:44","title":"Streamlit","description":"The fastest way to build custom ML tools.","tags":["code","library","visualization","streamlit","dashboard"]},{"id":547,"created_on":"2020-04-16 03:33:47","title":"Automated Machine Learning Hyperparameter Tuning in Python","description":"A complete walk through using Bayesian optimization for automated hyperparameter tuning in Python","tags":["article","tutorial","bayesian-optimization","hyperparameter-optimization"]},{"id":548,"created_on":"2020-04-16 03:39:20","title":"Hyperparameter Tuning for Machine Learning Models","description":"An in-depth look at hyperparameter optimization.","tags":["article","tutorial","ray","bayesian-optimization","hyperparameter-optimization","optuna","hyperopt","sigopt"]},{"id":549,"created_on":"2020-04-16 03:48:35","title":"15 Best Tools for Tracking Machine Learning Experiments","description":"A feature comparison of all the open-source and commercial options for experiment tracking.","tags":["article","tutorial","experiment-tracking"]},{"id":550,"created_on":"2020-04-16 08:14:50","title":"Cycle GAN in TensorFlow 2.0 with Custom Loops","description":"Implementation of \"Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networks\" by Jun-Yan Zhu et al. ","tags":["code","notebook","paper","research","tutorial","tensorflow","generative-adversarial-networks","computer-vision","image-to-image-translation","unpaired-images","arxiv:1703.10593"]},{"id":551,"created_on":"2020-04-16 08:24:58","title":"Embedding an image processing function in a tf.keras model","description":"Learn how to embed an image preprocessing function in a tf.keras model. ","tags":["article","code","notebook","tutorial","keras","tensorflow","embeddings","image-preprocessing","serving"]},{"id":552,"created_on":"2020-04-16 10:13:12","title":"Holopix50k: A Large-Scale In-the-wild Stereo Image Dataset","description":"The largest dataset of in-the-wild stereo image pairs (50K) crowd-sourced from the Holopix lightfield image-sharing social network.","tags":["article","code","paper","research","deep-learning","computer-vision","depth-estimation","disparity-estimation","self-supervised-learning","datasets","computational-photography","stereo-dataset","arxiv:2003.11172"]},{"id":553,"created_on":"2020-04-16 12:30:41","title":"\u201cReparameterization\u201d trick in Variational Autoencoders","description":"In this article, we are going to learn about the \u201creparameterization\u201d trick that makes Variational Autoencoders (VAE) an eligible candidate for Backpropagation.","tags":["article","tutorial","autoencoders","generative-modeling","reparameterization"]},{"id":554,"created_on":"2020-04-16 15:06:15","title":"Distributed Training With TensorFlow","description":"tf.distribute.Strategy can be used with a high-level API like Keras, and can also be used to distribute custom training loops.","tags":["article","tutorial","keras","tensorflow","distributed-training"]},{"id":555,"created_on":"2020-04-16 15:27:29","title":"A Gentle Introduction to Multi GPU\/Node Distributed Training","description":"High-level overview of the different types of training regimes that you'll encounter as you move from single GPU to multi GPU to multi node distributed training","tags":["article","tutorial","distributed-training"]},{"id":556,"created_on":"2020-04-16 15:30:13","title":"Horovod","description":"Distributed training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.","tags":["article","code","distribution","library","uber","horovod"]},{"id":557,"created_on":"2020-04-16 15:42:09","title":"When Not to Choose the Best NLP Model","description":"While these models are indeed incredible and do show unparalleled results, they may not be suited for your NLP task or your business. ","tags":["article","tutorial","natural-language-processing","production","systems-design"]},{"id":558,"created_on":"2020-04-16 15:49:29","title":"PyTorch Notebooks","description":"\ud83d\udd25A collection of PyTorch notebooks for learning and practicing deep learning","tags":["code","tutorial","pytorch","attention","bert","deep-learning","transformers","natural-language-processing"]},{"id":559,"created_on":"2020-04-16 16:18:26","title":"Creating an End-to-End Machine Learning Application","description":"A complete, end-to-end ML application, implemented in both TensorFlow 2.0 and PyTorch.","tags":["api","code","tutorial","fastapi","flask","python","pytorch","tensorflow","production","wandb","systems-design"]},{"id":560,"created_on":"2020-04-16 16:22:25","title":"Machine Learning Model with FLASK REST API","description":"In this tutorial we will see how you can make your first REST API for Machine Learning Model using FLASK.","tags":["api","article","tutorial","flask","machine-learning"]},{"id":561,"created_on":"2020-04-16 16:27:31","title":"How Docker Can Help You Become A More Effective Data Scientist","description":"A look at Docker from the perspective of a data scientist.","tags":["article","tutorial","docker","production"]},{"id":562,"created_on":"2020-04-16 16:36:35","title":"Bootstrap","description":"The most popular HTML, CSS, and JavaScript framework for developing responsive, mobile first projects on the web.","tags":["article","code","css","html","javascript","front-end-design","library","bootstrap"]},{"id":563,"created_on":"2020-04-16 16:40:53","title":"AWS vs Paperspace vs FloydHub : Choosing your cloud GPU partner","description":"A look at various features of the top three cloud GPU service providers. ","tags":["article","tutorial","aws","training","distributed-training","gpu","floydhub","paperspace"]},{"id":564,"created_on":"2020-04-17 13:16:09","title":"Optimize your ML models","description":"Learn to use optimize your custom image classification models (built-in tf.keras) using TensorFlow Lite and gain 10x reduction in model's size. ","tags":["code","notebook","tutorial","keras","tensorflow","computer-vision","image-classification","tpu","tensorflow-lite","embedded-systems","on-device"]},{"id":565,"created_on":"2020-04-17 13:22:07","title":"Wasserstein GAN with Gradient Penalty in TensorFlow 2.0","description":"TensorFlow 2.0 implementation of W-GAN with GP. ","tags":["code","notebook","tutorial","keras","tensorflow","generative-adversarial-networks","fashion-mnist"]},{"id":566,"created_on":"2020-04-17 21:57:35","title":"Machine learning deserves its own flavor of Continuous Delivery","description":"When traveling in the data science world, I'm homesick for a smooth continuous delivery flow. My thoughts on approachable CD4ML.","tags":["article","tutorial","cd4ml","data-version-control","mlops"]},{"id":567,"created_on":"2020-04-18 03:03:36","title":"Neural Arithmetic Logic Units in TensorFlow 2.0","description":"TensorFlow 2.0 implementation of NALU (https:\/\/arxiv.org\/abs\/1808.00508). ","tags":["code","paper","research","keras","tensorflow","deep-learning","arxiv:1808.00508"]},{"id":568,"created_on":"2020-04-18 11:53:58","title":"EvoNorm layers in TensorFlow 2","description":"Presents implementations of EvoNormB0 and EvoNormS0 layers as proposed in Evolving Normalization-Activation Layers by Liu et al.","tags":["article","code","paper","research","keras","tensorflow","deep-learning","automl","batch-normalization","wandb","normalization","batch-norm-relu","arxiv:2004.02967"]},{"id":569,"created_on":"2020-04-18 13:32:36","title":"An Introduction to Transfer Learning and HuggingFace","description":"In this talk I'll start by introducing the recent breakthroughs in NLP that resulted from the combination of Transfer Learning schemes and Transformer architect","tags":["tutorial","video","huggingface","transformers","natural-language-processing","transfer-learning"]},{"id":570,"created_on":"2020-04-19 17:40:48","title":"Introduction to Image Inpainting With Deep Learning","description":"In this article, we are going to learn how to do \u201cimage inpainting\u201d, i.e. fill in missing parts of images precisely using deep learning.","tags":["article","code","tutorial","deep-learning","computer-vision","wandb","inpainting","unet"]},{"id":571,"created_on":"2020-04-20 00:10:06","title":"Tools - matplotlib","description":"This notebook demonstrates how to use the matplotlib library to plot beautiful graphs.","tags":["code","notebook","tutorial","matplotlib","visualization"]},{"id":572,"created_on":"2020-04-20 00:14:29","title":"Introduction to Differential Calculus","description":"Introduces differential calculus: derivatives, partial derivatives and gradients.","tags":["code","notebook","tutorial","linear-algebra","math","differential-calculus"]},{"id":574,"created_on":"2020-04-20 00:23:44","title":"The Abstraction and Reasoning Corpus (ARC)","description":"Can a computer learn complex, abstract tasks from just a few examples? ARC can be used to measure a human-like form of general fluid intelligence.","tags":["code","dataset","paper","research","tutorial","artificial-general-intelligence","common-sense-reasoning","natural-language-processing","arc","arxiv:1911.01547"]},{"id":575,"created_on":"2020-04-20 00:27:41","title":"Addition RNN","description":"An implementation of sequence to sequence learning for performing addition.","tags":["code","notebook","tutorial","recurrent-neural-networks","math","arithmetic"]},{"id":576,"created_on":"2020-04-20 00:32:02","title":"Customizing What Happens in Fit()","description":"How to leverage the convenient features of fit() with a custom training loop. ","tags":["code","notebook","tutorial","keras","tensorflow","training"]},{"id":577,"created_on":"2020-04-20 00:41:46","title":"Intro to Keras for Researchers","description":"Everything you need to know to use Keras & TF 2.0 for deep learning research.","tags":["code","notebook","tutorial","keras","tensorflow","deep-learning"]},{"id":578,"created_on":"2020-04-20 00:49:49","title":"Micrograd","description":"A tiny scalar-valued autograd engine and a neural net library on top of it with PyTorch-like API","tags":["code","neural-networks","library","autograd"]},{"id":579,"created_on":"2020-04-20 00:53:19","title":"Transfer Learning & Fine-Tuning With Keras","description":"Your 100% up-to-date guide to transfer learning & fine-tuning with Keras.","tags":["article","code","notebook","tutorial","keras","tensorflow","computer-vision","fine-tuning","transfer-learning"]},{"id":580,"created_on":"2020-04-20 00:57:03","title":"GitHub Actions & Machine Learning Workflows with Hamel Husain","description":" In this talk, Hamel will provide a brief tutorial on GitHub Actions, and will show you how you can use this new tool to automate your ML workflows.","tags":["tutorial","video","machine-learning","mlops","github-actions","workflows","ci-cd"]},{"id":581,"created_on":"2020-04-20 01:01:38","title":"How To Create Semantic Search For Arbitrary Objects","description":"An end-to-end example of how to build a system that can search objects semantically. By Hamel Husain & Ho-Hsiang Wu","tags":["article","code","tutorial","deep-learning","natural-language-processing","semantic-search","code-search"]},{"id":582,"created_on":"2020-04-20 21:38:50","title":"CS285: Deep Reinforcement Learning","description":"A course on deep reinforcement learning, transfer and multi-task learning.","tags":["course","tutorial","video","reinforcement-learning","multi-task-learning"]},{"id":583,"created_on":"2020-04-20 21:43:24","title":"CS294-158-SP19 Deep Unsupervised Learning","description":"This course will cover two areas of deep learning in which labeled data is not required: Deep Generative Models and Self-supervised Learning. ","tags":["course","tutorial","video","self-supervised-learning","unsupervised-learning","generative-models"]},{"id":584,"created_on":"2020-04-21 05:03:56","title":"GitHub Actions: Providing Data Scientists With New Superpowers","description":"A Tutorial on GitHub Actions For Data Scientists","tags":["article","github","tutorial","github-actions"]},{"id":585,"created_on":"2020-04-21 05:06:19","title":"fastpages","description":"An easy to use blogging platform, with enhanced support for Jupyter Notebooks. ","tags":["code","fastai","library","github-actions","fastpages","blogging"]},{"id":586,"created_on":"2020-04-21 07:15:26","title":"Retrieve: Automate wget-ting pre-trained models","description":"No-frills library to download pre-trained models, cache it and return the local path.","tags":["code","python","deep-learning","library","pretraining","pre-trained-models","models"]},{"id":587,"created_on":"2020-04-21 14:37:17","title":"ndindex","description":"A Python library for manipulating indices of ndarrays.","tags":["article","code","library","numpy","arrays"]},{"id":588,"created_on":"2020-04-21 16:45:38","title":"Machine Learning Crash Course","description":"Machine Learning Crash Course features a series of lessons with video lectures, real-world case studies, and hands-on practice exercises.","tags":["article","course","tutorial","tensorflow","machine-learning"]},{"id":589,"created_on":"2020-04-21 16:49:22","title":"Dive into Deep Learning","description":"An interactive deep learning book with code, math, and discussions, based on the NumPy interface.","tags":["article","code","course","tutorial","mxnet","deep-learning","numpy"]},{"id":591,"created_on":"2020-04-21 17:51:29","title":"Overriding  train\/test steps for custom training  in TF2.2","description":"Custom training loops in tf.keras can't make use of things like callbacks,etc. by default and you have to write one for yourself. How to overcome it?","tags":["article","code","tutorial","keras","tensorflow","health","unet","custom-training-loops","bone-drr","kaggle"]},{"id":592,"created_on":"2020-04-21 19:17:56","title":"Beam Search in Sequence to Sequence Models","description":"In this video, you learn about the beam search algorithm in the context of generating sequences.","tags":["tutorial","sequence-to-sequence","beam-search"]},{"id":593,"created_on":"2020-04-21 23:19:54","title":"A Primer on Private Statistics","description":"We show how to privately estimate the CDF of a distribution (i.e., estimate the distribution in Kolmogorov distance), and conclude with pointers to research.","tags":["article","paper","research","tutorial","statistics","search-results-web-results--cumulative-distribution-function","kolmogorov-distance"]},{"id":594,"created_on":"2020-04-21 23:25:53","title":"TorchServe & TorchElastic PyTorch Libraries for Serving\/Training","description":"The officially supported way to deploy and manage models with PyTorch.","tags":["article","code","kubernetes","pytorch","model-management","library","training","production","experiment-tracking","logging","torchserve","torchelastic","eks","ec2","serving"]},{"id":595,"created_on":"2020-04-22 05:05:33","title":"Reproducible Models with W&B","description":"Discover simple techniques to make your ML experiments as reproducible as possible.","tags":["article","code","tutorial","machine-learning","wandb","reproducible-ml"]},{"id":596,"created_on":"2020-04-22 10:38:27","title":"Turning Machine Learning Models into APIs in Python","description":"Learn to how to create a simple API from a machine learning model in Python using Flask.","tags":["article","code","tutorial","machine-learning","rest-api"]},{"id":597,"created_on":"2020-04-22 16:30:56","title":"CS229: Machine Learning","description":"A broad introduction to machine learning and statistical pattern recognition. ","tags":["code","course","tutorial","video","machine-learning","stanford","cs229","andrew-ng"]},{"id":598,"created_on":"2020-04-22 16:33:59","title":"The Future of (Transfer Learning in) Natural Language Processing","description":"Transfer Learning in Natural Language Processing (NLP): Open questions, current trends, limits, and future directions.","tags":["tutorial","video","natural-language-processing","transfer-learning"]},{"id":599,"created_on":"2020-04-22 16:43:13","title":"MONAI","description":"AI Toolkit for Healthcare Imaging.","tags":["article","code","tutorial","pytorch","healthcare","computer-vision","medical-imaging","imaging","nvidia","monai"]},{"id":600,"created_on":"2020-04-22 17:37:25","title":"Building a Simple Chatbot from Scratch in Python (using NLTK)","description":"A look at retrieval based and generative conversational AI for creating chatbots.","tags":["article","tutorial","chatbot","natural-language-processing","conversational-ai","nltk"]},{"id":601,"created_on":"2020-04-22 17:41:06","title":"How I Used Deep Learning To Train A Chatbot To Talk Like Me","description":"Facebook chatbot that I trained to talk like me using Seq2Seq.","tags":["article","code","tutorial","tensorflow","deep-learning","sequence-to-sequence","chatbot","natural-language-processing","conversational-ai"]},{"id":602,"created_on":"2020-04-23 00:36:02","title":"DialoGPT: Toward Human-Quality Conversational Response Generation","description":"Large-scale pre-training for dialogue.","tags":["article","code","paper","research","tutorial","gpt","transformers","chatbot","natural-language-processing","transfer-learning","conversational-ai","arxiv:1911.00536"]},{"id":603,"created_on":"2020-04-23 00:42:03","title":"Tpus, Systolic Arrays, and bfloat16: Accelerate Your DL","description":"Systolic arrays and bfloat16 multipliers, two components of tensor processing units (TPUs) that are responsible for accelerating your deep learning training.","tags":["tutorial","video","training","tpu","bfloat16"]},{"id":604,"created_on":"2020-04-23 00:45:10","title":"A Basic Soft-Margin Kernel SVM Implementation in Python","description":"This is a basic implementation of a soft-margin kernel SVM solver in Python using numpy and cvxopt.","tags":["article","code","tutorial","python","support-vector-machines"]},{"id":605,"created_on":"2020-04-23 03:59:57","title":"Upside Down Reinforcement Learning","description":"Implementation of UDRL as outlined by Juergen Schmidhuber in https:\/\/arxiv.org\/abs\/1912.02875","tags":["code","tutorial","reinforcement-learning"]},{"id":606,"created_on":"2020-04-23 08:19:18","title":"Hyperparameter search with W&B and Kubernetes","description":"An end-to-end guide on training your models on a Kubernetes cluster, and tracking them with Weights & Biases.","tags":["article","code","tutorial","kubernetes","deep-learning","library","wandb"]},{"id":607,"created_on":"2020-04-23 08:41:10","title":"Synchronizing Facial Movements with Video Frame Orientation","description":"I am seeing the #TFDevSummit 2020 video. whenever I move my face while watching the video that video frames also will move as per my face movement. ","tags":["code","video","tensorflow","tensorflow-js"]},{"id":608,"created_on":"2020-04-23 12:52:02","title":"PyImageSearch","description":"An online platform of blogs on Computer Vision and Deep Learning.","tags":["article","tutorial","deep-learning","machine-learning","computer-vision","pyimagesearch"]},{"id":609,"created_on":"2020-04-23 12:54:42","title":"Google's Python Class","description":"This is a free class for people with a little bit of programming experience who want to learn Python","tags":["article","tutorial","python"]},{"id":610,"created_on":"2020-04-23 12:56:29","title":"A Comprehensive Hands-on Guide to Transfer Learning","description":"Deep Learning on Steroids with the Power of Knowledge Transfer!","tags":["article","tutorial","deep-learning","transfer-learning"]},{"id":611,"created_on":"2020-04-23 12:58:22","title":"Transfer Learning - Machine Learning's Next Frontier","description":"This post gives an overview of transfer learning, motivates why it warrants our application, and discusses practical applications and methods.","tags":["article","tutorial","transfer-learning"]},{"id":612,"created_on":"2020-04-23 13:56:46","title":"Implementing DCGANs using PyTorch C++ API (Libtorch)","description":"The blog discusses the paper review of DCGANs and implementation using PyTorch C++ API in detail. From loading models to visualizing batch of the data, in C++! ","tags":["article","code","tutorial","c++","pytorch","deep-learning","generative-adversarial-networks","computer-vision","dcgan","libtorch"]},{"id":613,"created_on":"2020-04-23 14:03:13","title":"Linear Regression on a CSV File using PyTorch in C++ (Libtorch)","description":"Use any CSV file in C++ to perform Linear Regression using Fully Connected layers in PyTorch is now easy with this project! :)","tags":["code","tutorial","video","c++","pytorch","linear-regression","regression","library","libtorch"]},{"id":614,"created_on":"2020-04-23 14:07:44","title":"Applying Transfer Learning using PyTorch C++ API (Dogs vs Cats)","description":"Loading Custom Dataset in the PyTorch C++ API isn't straight forward. This blog helps you do that, and explains transfer learning implementation in C++.","tags":["article","code","tutorial","c++","pytorch","deep-learning","library","transfer-learning","libtorch","dogs-vs-cats"]},{"id":615,"created_on":"2020-04-23 14:12:19","title":"Setting up Jupyter Notebook in C++ for PyTorch and OpenCV","description":"This blog explains how to run any code using PyTorch C++ API and OpenCV (C++) in the Jupyter Notebook.","tags":["article","tutorial","c++","pytorch","opencv","jupyter","libtorch","xeus-cling","jupyter-notebook"]},{"id":616,"created_on":"2020-04-23 14:15:21","title":"Custom Data Loading using PyTorch C++ API","description":"How can you load a custom dataset in C++ using PyTorch C++ API? This blog helps you with that.","tags":["article","tutorial","c++","pytorch","opencv","libtorch","custom-data-loading"]},{"id":617,"created_on":"2020-04-23 14:23:00","title":"Understanding how Vectors push_back in C++ (GCC)","description":"This blog is not just another blog explaining how to push elements into Vector container in C++. It takes you through the source code and shows how GCC does it.","tags":["article","tutorial","c++","gcc","vectors","coding"]},{"id":618,"created_on":"2020-04-23 16:23:09","title":"Introduction to Anomaly Detection in Python","description":"Learn how anomalies are created\/generated, why they are important to consider while developing machine learning models, how they can be detected.","tags":["article","code","tutorial","scikit-learn","machine-learning"]},{"id":619,"created_on":"2020-04-23 16:55:27","title":"Implementing Portrait Bokeh Mode using OpenCV and NumPy (Python)","description":"Do you love the portrait mode in your smartphone? This code will help you do the same using OpenCV and NumPy! Detects the faces, asks if you want to blur them!","tags":["code","video","python","library","computer-vision","opencv","numpy","image-processing"]},{"id":620,"created_on":"2020-04-23 17:26:26","title":"ELECTRA ","description":"Explaining the new self-supervised task for language representation learning, ELECTRA which uses \"replace token detection\".","tags":["article","tutorial","attention","bert","generative-adversarial-networks","transformers","language-modeling","natural-language-processing","representation-learning","electra"]},{"id":621,"created_on":"2020-04-23 18:17:12","title":"MixNMatch","description":"Multifactor Disentanglement and Encoding for Conditional Image Generation","tags":["code","paper","research","tutorial","video","pytorch","generative-adversarial-networks","computer-vision","image-generation","generative-models","disentanglement","finegan","mixnmatch","arxiv:1911.11758"]},{"id":622,"created_on":"2020-04-23 21:40:09","title":"MT-Clinical BERT","description":"Scaling Clinical Information Extraction with Multitask Learning","tags":["code","paper","research","tutorial","attention","bert","transformers","health","information-extraction","named-entity-recognition","natural-language-processing","pretraining","multi-task-learning","clinical-information-extraction","entailment","similarity","arxiv:2004.10220"]},{"id":623,"created_on":"2020-04-24 00:30:02","title":"medaCy","description":"\ud83c\udfe5 Medical Text Mining and Information Extraction with spaCy","tags":["code","spacy","health","library","information-extraction","named-entity-recognition","natural-language-processing","text-mining","medical-text-mining","clinical-text-mining","metamap","ontologies"]},{"id":624,"created_on":"2020-04-24 00:42:41","title":"How to Train a New Language Model From Scratch Using Transformers","description":"In this post we\u2019ll demo how to train a \u201csmall\u201d model (84 M parameters = 6 layers, 768 hidden size, 12 attention heads).","tags":["article","code","notebook","tutorial","huggingface","attention","transformers","language-modeling","natural-language-processing","tokenizers"]},{"id":625,"created_on":"2020-04-24 03:17:20","title":"NSFW JS","description":"A JavaScript library for identifying indecent content in JavaScript on the client.","tags":["article","code","javascript","tensorflow","tensorflow-js","machine-learning","library"]},{"id":628,"created_on":"2020-04-24 03:59:17","title":"Concrete Compressive Strength Prediction using Machine Learning","description":"Predicting Strength of the most important materials in Civil Engineering. ","tags":["article","code","notebook","tutorial","civil-engineering","concrete-engineering","concrete-strength"]},{"id":629,"created_on":"2020-04-24 05:01:26","title":"ARIMA Modeling - Guide to Time Series Forecasting in Python","description":"How ARIMA models works . How to train and forecast using ARIMA, SARIMA, SARIMAX and find the optimal model with Python","tags":["article","tutorial","arima","time-series","time-series-forecasting","box-jenkins","sarimax","autoarima"]},{"id":630,"created_on":"2020-04-24 05:13:05","title":"Facial Points Detection in Javascript","description":"Implementation of  Facial Points detection in Javascript using OpenCVJs and TensorflowJs","tags":["code","research","video","javascript","tensorflow","tensorflow-js","convolutional-neural-networks","facial-points-detection","facial-detection"]},{"id":631,"created_on":"2020-04-24 11:29:56","title":"How to Plan and Execute Your ML and DL Projects","description":"This tutorial presents ways to structure ML and DL projects in a systematic manner. ","tags":["article","tutorial","deep-learning","machine-learning","product-management","systems-design"]},{"id":632,"created_on":"2020-04-24 11:37:13","title":"Lagrangian Neural Networks","description":"Trying to learn a simulation? Try Lagrangian Neural Networks, which explicitly conserve energy and may generalize better!","tags":["article","code","paper","research","tutorial","jax","deep-learning","graph-neural-networks","graphs","interpretability","arxiv:2003.04630"]},{"id":633,"created_on":"2020-04-24 17:27:51","title":"Towards Deep Generative Modeling with W&B","description":"In this report, we will learn about the evolution of generative modeling.","tags":["article","tutorial","autoencoders","variational-autoencoders","wandb","generative-modeling","adversarial-learning"]},{"id":634,"created_on":"2020-04-24 17:33:17","title":"Market Basket Analysis Using Association Rule Mining in Python","description":"Detailed introduction to market basket analysis using association rule mining in Python. Complete tutorial with code examples using mlxtend library.","tags":["article","tutorial","python","machine-learning","market-research","data-mining"]},{"id":635,"created_on":"2020-04-24 17:36:47","title":"Principal Component Analysis for Dimensionality Reduction","description":"This article will focus on a walkthrough for principal component analysis in Python.","tags":["article","tutorial","python","machine-learning","dimensionality-reduction","principal-component-analysis"]},{"id":636,"created_on":"2020-04-24 17:40:45","title":"Visualization of Multidimensional Datasets Using t-SNE in Python","description":"This article will focus on t-Distributed Stochastic Neighbor Embedding (t-SNE) in Python and its application to data visualization of multidimensional datasets.","tags":["article","research","tutorial","python","scikit-learn","dimensionality-reduction","embeddings","tsne","visualization"]},{"id":637,"created_on":"2020-04-24 17:44:16","title":"Label Encoding in Python","description":"A detailed guide to label encoding in Python with code examples.","tags":["article","tutorial","python","scikit-learn","machine-learning","labeling"]},{"id":638,"created_on":"2020-04-24 20:01:08","title":"Reliable Decision Support using Counterfactual Models","description":"We propose using a different learning objective that predicts counterfactuals instead of predicting outcomes under an existing action policy as in supervised le","tags":["paper","research","video","health","medicine","counterfactual-gaussian-processes","counterfactuals","arxiv:1703.10651"]},{"id":639,"created_on":"2020-04-24 20:51:18","title":"ML Foundations and Methods for Precision Medicine and Healthcare","description":"This tutorial will discuss ideas from machine learning that enable personalization (useful for applications in education, retail, medicine and recsys).","tags":["article","bayesian-deep-learning","deep-learning","health","medicine","causal-inference","reinforcement-learning","what-if","causal-risk"]},{"id":640,"created_on":"2020-04-24 21:15:07","title":"The Science of Assisting Medical Diagnosis","description":"From Expert systems to Machine-learned models","tags":["article","paper","research","health","knowledge-base","medical-diagnosis","expert-systems","differential-diagnosis","arxiv:1804.08033"]},{"id":641,"created_on":"2020-04-25 05:20:25","title":"Torchmeta","description":"A collection of extensions and data-loaders for few-shot learning & meta-learning in PyTorch","tags":["code","pytorch","library","few-shot-learning","meta-learning","zero-shot-learning"]},{"id":642,"created_on":"2020-04-25 23:18:44","title":"Introduction to Linear Regression - Mathematics and Application","description":"Introduction to linear regression covering the math, basic theory, and implementation with Python and sklearn. ","tags":["article","tutorial","scikit-learn","linear-regression","machine-learning","regression"]},{"id":643,"created_on":"2020-04-26 04:34:02","title":"Albert-base for Sanskrit","description":"Trained Albert-base from scratch on Sanskrit corpus of Wikipedia. I have also added a link to how to train your own Language model from scratch.","tags":["article","code","notebook","tutorial","huggingface","attention","bert","transformers","library","language-modeling","natural-language-processing","albert"]},{"id":644,"created_on":"2020-04-26 05:42:37","title":"Adversarial Latent Autoencoders","description":"Introducing the Adversarial Latent Autoencoder (ALAE), a general architecture that can leverage recent improvements on GAN training procedures.","tags":["code","paper","research","tutorial","autoencoders","generative-adversarial-networks","computer-vision","image-generation","latent-space","disentanglement","arxiv:2004.04467"]},{"id":645,"created_on":"2020-04-26 09:40:11","title":"Visual Machine Learning","description":"\ud83d\udc40This application has been created to help people to visually understand how machine learning works. ","tags":["code","tutorial","tensorflow-js","linear-regression","regression","full-stack","firebase","front-end","vue-js"]},{"id":646,"created_on":"2020-04-26 13:20:32","title":"Doing more with TensorFlow Lite","description":"Learn about different usage scenarios of TensorFlow Lite along with some best practices. ","tags":["article","tutorial","model-compression","quantization","tensorflow-lite","on-device"]},{"id":647,"created_on":"2020-04-27 07:15:08","title":"A Visual Guide to Recurrent Layers in Keras","description":"Understand how to use Recurrent Layers like RNN, GRU and LSTM in Keras with diagrams.","tags":["article","tutorial","keras","tensorflow","lstm","recurrent-neural-networks"]},{"id":648,"created_on":"2020-04-27 20:42:49","title":"Indian Scriptures Dataset","description":"This project contains various Indian scriptures \ud83d\udcdc in a structured .csv format. The files contain the verses in their original Sanskrit language and their ve","tags":["code","tutorial"]},{"id":649,"created_on":"2020-04-28 03:42:29","title":"Spektral","description":"Graph Neural Networks with Keras and Tensorflow 2.","tags":["code","keras","tensorflow","graph-convolutional-networks","library","graph-neural-networks","graphs"]},{"id":650,"created_on":"2020-04-28 04:19:14","title":"Unsupervised Speech Decomposition","description":"This demo webpage provides sound examples for SpeechSplit, an autoencoder that can decompose speech into content, timbre, rhythm and pitch.","tags":["paper","research","autoencoders","speech","unsupervised-learning","decomposition","arxiv:2004.11284"]},{"id":651,"created_on":"2020-04-28 04:22:51","title":"GCAN: Graph-aware Co-Attention Networks","description":"For Explainable Fake News Detection on Social Media","tags":["code","paper","research","tutorial","attention","social-media","fake-news-detection","graph-neural-networks","graphs","natural-language-processing","co-attention","gcan","arxiv:2004.11648"]},{"id":652,"created_on":"2020-04-28 15:14:00","title":"Optimal Transport and the Sinkhorn Transformer","description":"Understand optimal transport and the Sinkhorn-Knopp algorithm before diving into the Sinkhorn Transformer.","tags":["article","tutorial","attention","transformers","natural-language-processing","sinkhorn","optimal-transport"]},{"id":653,"created_on":"2020-04-28 16:20:29","title":"Semantic Graphs for Generating Deep Questions","description":"Deep Question Generation (DQG), which aims to generate complex questions that require reasoning over multiple pieces of information of the input passage. ","tags":["code","paper","research","tutorial","attention","graphs","natural-language-processing","question-generation","semantic-graphs","arxiv:2004.12704"]},{"id":654,"created_on":"2020-04-28 16:24:08","title":"Automating Data Augmentation: Practice, Theory and New Direction","description":"A new framework for exploiting data augmentation to patch a flawed model and improve performance on crucial subpopulation of data.","tags":["article","tutorial","data-augmentation"]},{"id":655,"created_on":"2020-04-28 16:27:03","title":"Automating the Art of Data Augmentation","description":"Learning to Compose Domain-Specific Transformations for Data Augmentation","tags":["article","code","tutorial","library","data-augmentation","tanda"]},{"id":656,"created_on":"2020-04-28 16:59:15","title":"Deploying Huggingface\u2018s BERT to production with Torch Serve","description":"Torch Serve is a new awesome framework to serve torch models in production. This story teaches you how to use it for Huggingface\/transformers models like BERT.","tags":["article","code","tutorial","huggingface","pytorch","attention","bert","transformers","natural-language-processing","production","torch-serve"]},{"id":657,"created_on":"2020-04-28 17:03:45","title":"Optimizing Multiple Loss Functions with Loss-Conditional Training","description":" We propose a method that allows replacing multiple models trained on one loss function each by a single model trained on a distribution of losses. ","tags":["article","research","optimization","loss","multiple-losses"]},{"id":658,"created_on":"2020-04-28 21:34:00","title":"Gutenberg Dialog","description":"Build a dialog dataset from online books in many languages.","tags":["code","dataset","paper","research","library","language-modeling","natural-language-processing","datasets","arxiv:2004.12752"]},{"id":659,"created_on":"2020-04-28 23:08:29","title":"Neural-Backed Decision Trees","description":"Combine interpretability of a decision tree with accuracy of a neural network.","tags":["code","paper","research","tutorial","decision-trees","deep-learning","neural-networks","interpretability","arxiv:2004.00221"]},{"id":660,"created_on":"2020-04-29 02:36:18","title":"Awesome AI\/ML\/DL","description":"Awesome Artificial Intelligence, Machine Learning and Deep Learning as we learn it. Study notes and a curated list of awesome resources of such topics.","tags":["article","code","research","tutorial","artificial-general-intelligence","deep-learning","machine-learning","computer-vision","natural-language-processing","collection"]},{"id":661,"created_on":"2020-04-29 02:41:24","title":"Better NLP project","description":"This is a wrapper program\/library that encapsulates a couple of NLP libraries that are popular among the AI and ML communities.","tags":["code","library","natural-language-processing"]},{"id":662,"created_on":"2020-04-29 03:10:44","title":"Why Sigmoid: A Probabilistic Perspective","description":"A comprehensive set of explanations for why the logistic sigmoid function is chosen for logistic regression from a probabilistic perspective. ","tags":["article","tutorial","video","logistic-regression","machine-learning","regression","statistics","activation","sigmoid"]},{"id":663,"created_on":"2020-04-29 04:42:16","title":"Recipes for building an open-domain chatbot","description":"Python framework for sharing, training and testing dialogue models, from open-domain chitchat to VQA (Visual Question Answering).","tags":["code","paper","research","library","chatbot","natural-language-processing","conversational-ai","visual-question-answering","open-domain","arxiv:2004.13637"]},{"id":664,"created_on":"2020-04-29 06:48:27","title":"Understanding the Backpropagation Algorithm(101)","description":"Starting from neural networks, I've tried to explain Back-Propagation Algorithim with an example.","tags":["article","tutorial","deep-learning","feed-forward-neural-networks","neural-networks"]},{"id":665,"created_on":"2020-04-29 10:46:20","title":"Object-detection with multi-template matching","description":"This python package allows to perform object detection using one or a few template images, it provides a simpler alternative to deep-learning methods","tags":["code","paper","research","video","python","library","computer-vision","object-detection","object-localization","object-recognition"]},{"id":666,"created_on":"2020-04-29 12:10:43","title":"AIDeveloper","description":"GUI-based software for training, evaluating and applying deep neural nets for image classification ","tags":["code","paper","research","deep-learning","library","computer-vision","image-classification","image-processing","graphical-user-interface"]},{"id":667,"created_on":"2020-04-29 18:34:28","title":"No Trump Social Chrome Plugin","description":"An AI-driven Browser Extension to Replace Trump Pics with Puppies!","tags":["article","tensorflow-js","library","computer-vision","trump","chrome-extension"]},{"id":668,"created_on":"2020-04-29 18:44:58","title":"Intro to Linear Algebra for Applied Machine Learning with Python","description":"Intro to fundamental topics on linear algebra for machine learning with Numpy and Python.  Suited for beginner\/intermediate Lvl practitioners. Work in progress.","tags":["article","tutorial","linear-algebra","math"]},{"id":669,"created_on":"2020-04-29 19:27:47","title":"Pandas Profiling","description":"Generates profile reports from a pandas DataFrame.","tags":["code","library","pandas","profiling"]},{"id":670,"created_on":"2020-04-29 19:35:22","title":"Attribute2Font: Creating Fonts You Want From Attributes","description":"Official PyTorch implementation of the Attribute2Font: Creating Fonts You Want From Attributes.","tags":["article","code","tutorial","pytorch","generative-adversarial-networks","transformers","design","natural-language-processing","font-generation"]},{"id":671,"created_on":"2020-04-29 23:22:43","title":"MedCAT - Medical Concept Annotation Tool","description":"A tool used to extract information from Electronic Health Records (EHRs) and link it to biomedical ontologies like SNOMED-CT and UMLS.","tags":["code","paper","research","spacy","health","healthcare","library","active-learning","annotation","named-entity-recognition","natural-language-processing","semi-supervised-learning","arxiv:1912.10166"]},{"id":672,"created_on":"2020-04-30 03:17:11","title":"Geocoding in Python Using Google Maps API","description":"The article will focus on geocoding in Python which is getting coordinates for an address or any place around the world and calculating distances  between them.","tags":["api","article","tutorial","python","geography"]},{"id":673,"created_on":"2020-04-30 17:47:13","title":"Intro to Keras for Engineers","description":"Everything you need to know to use Keras & TF 2.0 to build real-world machine learning solutions.","tags":["code","notebook","tutorial","keras","tensorflow","deep-learning"]},{"id":674,"created_on":"2020-04-30 17:52:55","title":"YOLOv4: Optimal Speed and Accuracy of Object Detection","description":"A minimal implementation of YOLOv4.","tags":["code","paper","research","pytorch","library","computer-vision","object-detection","yolo","yolov4","arxiv:2004.10934"]},{"id":675,"created_on":"2020-05-01 03:08:32","title":"Transfer Learning with EfficientNet family of models","description":"Learn to use the EfficientNet family of models for transfer learning in TensorFlow using TFHub.","tags":["article","code","notebook","tutorial","tensorflow","transfer-learning","wandb","efficientnet"]},{"id":676,"created_on":"2020-05-01 03:11:13","title":"Customizing Training Loops in TensorFlow 2.0","description":"Learn to use all the delicacies of Keras' modular recipes and put them in a custom training loop. ","tags":["article","code","notebook","tutorial","keras","tensorflow","wandb","custom-training-loops"]},{"id":678,"created_on":"2020-05-01 07:16:33","title":"Real-Estate-Transaction-Price-Prediction","description":"In this Project, client has provided us a real estate dataset to predict the Transaction_Price(Sale_Price) of a Property with 42 Explanatory Variables.","tags":["code","notebook","tutorial","linear-regression","logistic-regression","random-forests","regression","decision-tree"]},{"id":679,"created_on":"2020-05-01 16:17:32","title":"Geometric and Relational Deep Learning","description":"Videos from emerging fields of Graph Representation Learning and Geometric Deep Learning.","tags":["tutorial","graph-convolutional-networks","graph-neural-networks","graphs","representation-learning","graph-representation-learning","grdl-2020","geometric-deep-learning"]},{"id":680,"created_on":"2020-05-01 16:21:01","title":"Neural Additive Models: Interpretable ML with Neural Nets","description":"Neural Additive Models (NAMs) which combine some of the expressivity of DNNs with the inherent intelligibility of generalized additive models.","tags":["article","code","paper","research","tutorial","feed-forward-neural-networks","interpretability","neural-additive-models","additive-models","arxiv:2004.13912"]},{"id":681,"created_on":"2020-05-01 16:25:34","title":"The AI Economist","description":"Improving Equality and Productivity with AI-Driven Tax Policies","tags":["article","paper","research","library","reinforcement-learning","economics","equality","tax","arxiv:2004.13332"]},{"id":682,"created_on":"2020-05-01 16:30:06","title":"Using Optuna to Optimize PyTorch Hyperparameters","description":"Let's see how PyTorch and Optuna can work together!","tags":["article","tutorial","pytorch","hyperparameter-optimization","optuna"]},{"id":683,"created_on":"2020-05-01 16:35:06","title":"TAPAS: Weakly Supervised Table Parsing via Pre-training","description":"Using neural networks to find answers in tables.","tags":["article","code","paper","research","attention","bert","transformers","library","natural-language-processing","weak-supervision","table-parsing","tables","tapas","arxiv:2004.02349"]},{"id":684,"created_on":"2020-05-01 16:48:19","title":"WT5?! Training Text-to-Text Models to Explain their Predictions","description":"We leverage the text-to-text framework proposed by Raffel et al.(2019) to train language models to output a natural text explanation alongside their prediction.","tags":["code","paper","research","tutorial","transformers","interpretability","language-modeling","natural-language-processing","t5","text-to-text-transfer-transformer","arxiv:2004.14546"]},{"id":685,"created_on":"2020-05-01 16:51:55","title":"CNN Explainer","description":"CNN Explainer uses TensorFlow.js, an in-browser GPU-accelerated deep learning library to load the pretrained model for visualization. ","tags":["code","tutorial","video","d3","tensorflow","tensorflow-js","convolutional-neural-networks","library","interpretability","interactive"]},{"id":686,"created_on":"2020-05-01 16:59:48","title":"Jukebox: A Generative Model for Music","description":"We\u2019re introducing Jukebox, a neural net that generates music, including rudimentary singing, as raw audio in a variety of genres and artist styles. ","tags":["article","code","notebook","paper","research","convolutional-neural-networks","transformers","library","audio","music-generation","natural-language-processing","jukebox","openai"]},{"id":687,"created_on":"2020-05-01 17:17:48","title":"Exploratory Data Analysis of Time Series","description":"Exploratory Data Analysis of Time Series data in Python. It uses lot of the principles and concepts discussed in Prof. Hyndman's book. The focus is on understa\r\n","tags":["article","code","notebook","tutorial","time-series","time-series-forecasting"]},{"id":688,"created_on":"2020-05-01 17:47:40","title":"Gotchas of Transfer Learning for Image Classification","description":"Discover the things you should care about while doing transfer learning for image classification. ","tags":["article","tutorial","deep-learning","library","computer-vision","transfer-learning"]},{"id":689,"created_on":"2020-05-01 17:51:53","title":"Ensemble Forecasts ","description":"Time series forecasting using classical methods (ETS, Holt-Winter's, SARIMA) and Prophet. I show and discuss advantages of Ensemble Forecast","tags":["article","tutorial","arima","time-series","time-series-forecasting","sarima","ensemble-forecast","fbprophet","ets","holt-winter"]},{"id":690,"created_on":"2020-05-01 18:42:41","title":"VIP AI 101 CheatSheet for All (Montr\u00e9al.AI)","description":" Artificial intelligence 101 first world-class overview of AI for all.","tags":["article","tutorial","deep-learning","machine-learning","cheatsheet","montreal-ai"]},{"id":691,"created_on":"2020-05-01 20:09:00","title":"scarpet-nn: Programmable Neural Networks in Minecraft","description":"\u26cfTools and libraries to run neural networks in Minecraft.","tags":["code","video","deep-learning","neural-networks","library","minecraft"]},{"id":692,"created_on":"2020-05-02 03:39:27","title":"Hands on One-Shot Learning","description":"One-shot learning can be seen as an attempt to create an approach to train machines with a similar ability to learn like humans. Hands-On One-Shot Learning with","tags":["code"]},{"id":693,"created_on":"2020-05-02 05:05:44","title":"SciTLDR: Extreme Summarization of Scientific Documents","description":"A new automatic summarization task with high source compression requiring expert background knowledge and complex language understanding.","tags":["code","paper","research","tutorial","transformers","natural-language-processing","text-summarization","bart","arxiv:2004.15011"]},{"id":694,"created_on":"2020-05-02 15:29:06","title":"BLINK: Better entity LINKing","description":"Entity Linking python library that uses Wikipedia as the target knowledge base.","tags":["code","paper","research","library","named-entity-recognition","natural-language-processing","wikification","arxiv:1911.03814"]},{"id":695,"created_on":"2020-05-02 21:33:31","title":"Five Cool Python Libraries for Data Science","description":"Python is a best friend for the majority of the Data Scientists. Libraries make their life simpler. I have come across five cool Python libraries while working ","tags":["article","tutorial","python","machine-learning","library","natural-language-processing","data-science"]},{"id":696,"created_on":"2020-05-02 21:58:29","title":"Deep Learning Drizzle","description":"Collection of freely available Deep Learning, Machine Learning, Reinforcement Learning, Optimization, Natural Language Processing, and Computer Vision lectures.","tags":["article","code","tutorial","machine-learning","collection"]},{"id":697,"created_on":"2020-05-03 04:58:44","title":"Explainable Deep Learning: A Field Guide for the Uninitiated","description":"A field guide to deep learning explainability for those uninitiated in the field.","tags":["paper","research","deep-learning","interpretability","explainability","survey","arxiv:2004.14545"]},{"id":698,"created_on":"2020-05-03 06:31:49","title":"Breast Cancer Classification","description":"I have used the KNN algorithm to classify the tumor as benign or malignant","tags":["code","tutorial","scikit-learn","health","pandas","k-nearest-neighbors","tumor-prediction"]},{"id":699,"created_on":"2020-05-03 09:10:18","title":"Linear Algebra Series","description":"This Linear Algebra series is a set of 12 blog posts to provide intuitions\/drawing\/python code on basics of Linear Algebra.","tags":["code","tutorial","linear-algebra"]},{"id":700,"created_on":"2020-05-03 13:49:29","title":"Fastai2 Vision Module","description":"A detailed guide to using fastai2 Datablock API for common computer vision tasks","tags":["article","tutorial","fastai","computer-vision"]},{"id":701,"created_on":"2020-05-03 15:12:25","title":"A Collection of Conference & School Notes in Machine Learning","description":"Machine Learning Conference & Summer School Notes. \ud83e\udd84\ud83d\udcdd\ud83c\udf89","tags":["code","tutorial","machine-learning","illustrated","conferences","notes"]},{"id":702,"created_on":"2020-05-03 20:19:10","title":"Unsupervised Question Decomposition for Question Answering","description":"Decompose hard (multi-hop) questions into several, easier (single-hop) questions using unsupervised learning, and get better accuracy on multi-hop QA.","tags":["article","code","paper","research","deep-learning","machine-learning","natural-language-processing","question-answering","unsupervised-learning","arxiv:2002.09758"]},{"id":703,"created_on":"2020-05-04 05:09:59","title":"Implementing Graph Neural Networks with JAX","description":"I\u2019ll talk about my experience on how to build and train Graph Neural Networks (GNNs) with JAX.","tags":["article","tutorial","jax","graph-neural-networks","graphs"]},{"id":704,"created_on":"2020-05-04 11:58:27","title":"Training Batch Norm and Only Batch Norm","description":"Experiments with the ideas presented in https:\/\/arxiv.org\/abs\/2003.00152 by Frankle et al. ","tags":["article","code","paper","research","deep-learning","computer-vision","representation-learning","wandb","sparse-networks","arxiv:2003.00152"]},{"id":705,"created_on":"2020-05-04 14:13:13","title":"Deep Learning With Graph-Structured Representations","description":"Novel approaches based on the theme of structuring the representations and computations of neural network-based models in the form of a graph.","tags":["article","research","tutorial","graph-convolutional-networks","graph-neural-networks","graphs","graph-auto-encoders","relational-graph-convolutional-networks","neural-relational-inference"]},{"id":706,"created_on":"2020-05-04 14:18:58","title":"GNNExplainer: Generating Explanations for Graph Neural Networks","description":"General tool for explaining predictions made by graph neural networks (GNNs).","tags":["code","research","tutorial","library","graph-neural-networks","graphs","interpretability","explainability"]},{"id":707,"created_on":"2020-05-05 03:36:50","title":"The Big Bad NLP Database","description":"A collection of 400+ NLP datasets with papers included.","tags":["library","natural-language-processing","datasets"]},{"id":708,"created_on":"2020-05-05 03:51:53","title":"POINTER: Constrained Text Generation","description":"Constrained Text Generation via Insertion-based Generative Pre-training","tags":["paper","research","attention","bert","transformers","natural-language-processing","text-generation","lexical-constraints","arxiv:2005.00558"]},{"id":709,"created_on":"2020-05-05 03:55:09","title":"Expertise Style Transfer: A New Task Towards Better Communication","description":"A New Task Towards Better Communication between Experts and Laymen","tags":["paper","research","computer-vision","natural-language-processing","style-transfer","text-generation","communication","arxiv:2005.00701"]},{"id":710,"created_on":"2020-05-05 04:01:24","title":"Differential Subspace Search in High-Dimensional Latent Space","description":"Differential subspace search to allow efficient iterative user exploration in such a space, without relying on domain- or data-specific assumptions.","tags":["paper","research","video","audio","audio-generation","computer-vision","dimensionality-reduction","generation","image-generation","generative-models","latent-space","singular-value-decompoition"]},{"id":711,"created_on":"2020-05-05 05:55:13","title":"C++ Implementation of PyTorch Tutorials for Everyone","description":"This repository provides tutorial code in C++ to learn PyTorch by building CNNs, RNNs, etc. Tutorials are divided into three sections based on complexity.","tags":["code","research","tutorial","c++","pytorch","torch","convolutional-neural-networks","deep-learning","machine-learning","neural-networks","recurrent-neural-networks","libtorch","torchscript"]},{"id":712,"created_on":"2020-05-05 05:55:46","title":"Covid-19: A-Geo-Statistical-Analysis","description":"Analysis with the time series data available for various countries.","tags":["code","research","tutorial","time-series","covid19"]},{"id":713,"created_on":"2020-05-05 07:13:49","title":"Cognito : Data wrangling toolkit","description":"Cognito is an exclusive python data preprocessing library and command-line utility that helps any developer to transform raw data into a machine-learning format","tags":["article","code","machine-learning","library","automl","imputation","preprocessing","time-series","audit"]},{"id":714,"created_on":"2020-05-05 10:41:06","title":"Digit Classification of MNIST Dataset using Tensorflow Lite","description":"Created an Android App which classifies and reconizes digit of MNIST dataset using Tensorflow-Lite and Keras.Trained the model on Laptop and deployed it on the ","tags":["code","keras","tensorflow","library","classification","tensorflow-lite","mnist"]},{"id":715,"created_on":"2020-05-05 14:31:35","title":"Taxonomy of Real Faults in Deep Learning Systems","description":"Large taxonomy of faults in deep learning (DL) systems.","tags":["paper","research","deep-learning","checklist","bugs","arxiv:1910.11015"]},{"id":716,"created_on":"2020-05-05 14:39:50","title":"RIP correlation. Introducing the Predictive Power Score","description":"We define and open-source the Predictive Power Score (PPS). The PPS is an alternative to the correlation that finds more patterns in your data.","tags":["article","code","library","metrics","correlation","predictive-power-score","pps"]},{"id":717,"created_on":"2020-05-05 14:46:57","title":"Synthesizer: Rethinking Self-Attention in Transformer Models","description":"The dot product self-attention is known to be central and indispensable to state-of-the-art Transformer models. But is it really required?","tags":["paper","research","attention","transformers","natural-language-processing","synthesizers","arxiv:2005.00743"]},{"id":718,"created_on":"2020-05-05 15:07:21","title":"Movie Recommendation Engine","description":"Content-Based Recommendations: Content-Based Recommendation algorithm takes into account the likes and dislikes of the user and generates a User Profile.","tags":["article","tutorial","machine-learning","recommendation-systems","data-science"]},{"id":719,"created_on":"2020-05-05 17:05:14","title":"Interactive Machine Learning Experiments","description":"\ud83e\udd16 Interactive Machine Learning experiments: \ud83c\udfcb\ufe0fmodels training + \ud83c\udfa8models demo","tags":["article","code","tutorial","javascript","python","tensorflow","tensorflow-js","artificial-general-intelligence","machine-learning"]},{"id":720,"created_on":"2020-05-05 18:00:19","title":"Sentiment Prediction of Google Play Store Reviews with Tensorflow","description":"How to train your own algorithm to classify the sentiment of the reviews of your app from scratch.","tags":["article","tutorial","keras","tensorflow"]},{"id":721,"created_on":"2020-05-05 18:06:52","title":"Mutual Fund Ratings Predictions ","description":"To predict the ratings of mutual fund. In order to help investors decide on which mutual fund to pick for an investment.","tags":["code","notebook","tutorial","scikit-learn","random-forests","finance","pandas","numpy","gradient-boosting","decision-tree","xgboost","mutual-funds","multiclass-classification","light-gbm","cat-boost","voting-classifier","ovr-classifier"]},{"id":723,"created_on":"2020-05-05 19:45:50","title":"DeepWay: Autonomous navigation for blind.","description":"I have tried to make something which can be used by blind people to navigate around the streets. Have a look at the video and GitHub repo for details.","tags":["code","video","library","computer-vision","segmentation","unet","blind-navigation","arduino","jetson-nano"]},{"id":724,"created_on":"2020-05-05 22:01:45","title":"First Steps with Tensorflow","description":"Learn LinearRegression with Tensorflow","tags":["code","notebook","tutorial","python","tensorflow","linear-regression","regression"]},{"id":725,"created_on":"2020-05-06 00:03:10","title":"CNN Block Image PuzzleSolver","description":"Solving Block Image Puzzle with neural networks (WebApp Solution)","tags":["article","code","tutorial","library","puzzles","streamlit","cnn","webapp"]},{"id":726,"created_on":"2020-05-06 01:10:55","title":"ConvNets-TensorFlow2","description":"Implementing a variety of popular and important CNN architectures","tags":["code","tutorial","keras","tensorflow","convolutional-neural-networks","deep-learning","computer-vision"]},{"id":727,"created_on":"2020-05-06 04:01:41","title":"Exploring Bayesian Optimization","description":"Breaking Bayesian Optimization into small, sizeable chunks.","tags":["article","tutorial","bayesian-deep-learning","bayesian-optimization","hyperparameter-optimization"]},{"id":728,"created_on":"2020-05-06 04:05:13","title":"PCGrad: Gradient Surgery for Multi-Task Learning","description":"Code for \"Gradient Surgery for Multi-Task Learning\"","tags":["code","paper","research","tutorial","pytorch","tensorflow","library","multi-task-learning","loss","pcgrad","arxiv:2001.06782"]},{"id":729,"created_on":"2020-05-06 04:08:16","title":"Fast Support Vector Classification with RAPIDS cuML","description":"In this post, we will discuss how you can use the SVM package in RAPIDS cuML to perform fast support vector classification on a GPU.","tags":["article","support-vector-machines","library","rapidsai","nvidia","cuml"]},{"id":730,"created_on":"2020-05-06 04:11:08","title":"cuML - GPU Machine Learning Algorithms","description":"cuML is a suite of libraries that implement ML algorithms and mathematical primitives functions that share compatible APIs with other RAPIDS projects.","tags":["code","library","rapidsai","nvidia","cuml"]},{"id":731,"created_on":"2020-05-06 04:17:15","title":"Introduction to Geometric Deep Learning","description":"Geometric Deep Learning (GDL) -  interpreting it in the context of relational inductive bias, a statistical reasoning term.","tags":["article","tutorial","graph-classification","graphs","geometric-deep-learning","graph-segmentation"]},{"id":732,"created_on":"2020-05-06 04:20:43","title":"StellarGraph - Machine Learning on Graphs","description":"State-of-the-art algorithms for graph machine learning, making it easy to discover patterns and answer questions about graph-structured data.","tags":["code","graph-convolutional-networks","library","graph-neural-networks","graphs","stellargraph"]},{"id":733,"created_on":"2020-05-06 04:30:47","title":"LandCover.ai","description":"Dataset for automatic mapping of buildings, woodlands and water from aerial imagery.","tags":["dataset","paper","research","library","computer-vision","aerial-imagery","landcover","arxiv:2005.02264"]},{"id":734,"created_on":"2020-05-06 04:33:15","title":"Generating SOAP Notes from Doctor-Patient Conversations","description":"Evaluate complete pipelines for leveraging these transcripts to train machine learning model to generate these notes.","tags":["paper","research","health","natural-language-processing","text-generation","text-summarization","soap-notes","arxiv:2005.01795"]},{"id":735,"created_on":"2020-05-06 06:42:32","title":"Lead Scoring Model for Hospitality industry","description":"Build a propensity model to identify the leads with higher chances to sales.","tags":["code","research","r","logistic-regression","regression","hospitality","lead-scoring","binaryclassification"]},{"id":736,"created_on":"2020-05-06 14:38:02","title":"Mixed-precision training for tf.keras models","description":"Discusses several methods to incorporate mixed-precision training for tf.keras models. ","tags":["article","code","tutorial","keras","tensorflow","deep-learning","wandb","mixed-precision-training","fast-training-methods"]},{"id":737,"created_on":"2020-05-06 18:06:04","title":"Nature-Scene Classification using FASTAI","description":"Classifying Nature-scene images using deep learning  with fastai library","tags":["code","tutorial","fastai","deep-learning","computer-vision","image-classification"]},{"id":738,"created_on":"2020-05-06 20:33:00","title":"Machine-Learning-Single-Layer-Multiclass-Perceptron","description":"Implemented a Single Layer Perceptron and applied it on the MNIST dataset for multi-class classification using NumPy.","tags":["code","tutorial","machine-learning","computer-vision","image-classification"]},{"id":739,"created_on":"2020-05-06 20:36:13","title":"Breast-Cancer Prediction and Classification","description":"Implementing Different Classification Models for Breast Cancer Prediction and comparing their performance using scikit-learn.","tags":["code","tutorial","scikit-learn","machine-learning","health","classification"]},{"id":740,"created_on":"2020-05-06 20:40:20","title":"ML-Neural Networks","description":"Designing an Artificial Neural Network for Multi-class classification of MNIST data using NumPy.","tags":["code","tutorial","feed-forward-neural-networks","backpropagation"]},{"id":741,"created_on":"2020-05-07 01:15:12","title":"Zero-shot Neural Retrieval via Domain-targeted Synthetic Queries","description":"Zero-shot learning for ad-hoc retrieval models that relies on synthetic query generation.","tags":["article","paper","research","transformers","information-retrieval","natural-language-processing","question-answering","covid-19","semantic-search","arxiv:2004.14503"]},{"id":742,"created_on":"2020-05-07 03:22:58","title":"AIMET - Model Efficiency Toolkit","description":"AIMET is a library that provides advanced model quantization and compression techniques for trained neural network models.","tags":["code","library","model-compression","quantization","aimet","qualcomm"]},{"id":743,"created_on":"2020-05-07 06:07:42","title":"A tale of quantization in TF Lite","description":"Model optimization strategies and quantization techniques to help deploy machine learning models in resource-constrained environments.","tags":["article","code","tutorial","tensorflow","model-compression","quantization","tensorflow-lite","wandb"]},{"id":744,"created_on":"2020-05-07 08:52:47","title":"Automobile Sales Pipeline Forecast ","description":"To plan the marketing spends and target meet monthly, sales pipeline forecast using machine learning model at line of business level.","tags":["code","tutorial","random-forests","automobile","finance","sales","forecasting","decision-tree","xgboost","hyperparameter-optimization"]},{"id":745,"created_on":"2020-05-07 15:46:28","title":"Rusklainer","description":"Identification of contributing features towards the rupture risk prediction of intracranial aneurysms using LIME explainer","tags":["research","tutorial","machine-learning","front-end-design","health","healthcare","library","interpretability","lime","explainability"]},{"id":778,"created_on":"2020-05-07 21:28:34","title":"Harry Potter and the Deep Learning Experiment","description":"RNN built with TensorFlow to generate text based on Harry Potter's books.","tags":["article","code","tutorial","tensorflow","deep-learning","recurrent-neural-networks","natural-language-processing","text-generation"]},{"id":779,"created_on":"2020-05-08 06:51:23","title":"Neural Nets- Easy(Keras) vs Hard(Numpy)","description":"Building MLPs in Keras vs Numpy","tags":["article","code","tutorial","keras","feed-forward-neural-networks","machine-learning","multilayer-perceptrons"]},{"id":780,"created_on":"2020-05-08 12:06:30","title":"Med7 - clinical natural language processing for EHR","description":"Med7 is a transferable clinical natural language processing model for electronic health records, compatible with spaCy, for named-entity recognition task","tags":["article","code","paper","research","tutorial","spacy","health","healthcare","library","named-entity-recognition","natural-language-processing","clinical-ner","med7","arxiv:2003.01271"]},{"id":781,"created_on":"2020-05-08 12:50:32","title":"Various Generative Adversarial Nets in TensorFlow2","description":"GANs-TensorFlow2 is a repository that implements a variety of popular Generative Adversarial Network algorithms using TensorFlow2. The key to this repository ..","tags":["code","keras","tensorflow","deep-learning","generative-adversarial-networks","machine-learning"]},{"id":782,"created_on":"2020-05-08 13:08:53","title":"Digit Recognizer","description":"Simple MNIST based digit recognizer. Deployed over Heroku using Flask.\r\nhttps:\/\/digit-detect.herokuapp.com\/","tags":["code","tutorial","flask","onnx","deep-learning","mnist"]},{"id":783,"created_on":"2020-05-08 14:44:04","title":"NeuralCook \u2014 Image2Ingredients and Cooking Recommendation","description":"Deep learning application to identify ingredients from cooking dishes images and recommend dishes to cook, given a set of ingredients.","tags":["article","code","paper","research","tutorial","video","clustering","natural-language-processing","recommendation-systems","text-generation","cooking","joint-embeddings","neuralcook","image2ingredients","semantic-distance"]},{"id":784,"created_on":"2020-05-08 14:59:08","title":"Haystack \u2014 Neural Question Answering At Scale","description":"Scaling Question Answering models to find answers in large document stores via retriever and reader approach.","tags":["code","library","information-retrieval","natural-language-processing","question-answering","search","neural-search"]},{"id":785,"created_on":"2020-05-08 17:13:36","title":"SimCLR in TensorFlow 2","description":"(Minimally) implements SimCLR (https:\/\/arxiv.org\/abs\/2002.05709) in TensorFlow 2.","tags":["article","code","paper","research","tensorflow","deep-learning","computer-vision","representation-learning","self-supervised-learning","simclr","wandb","arxiv:2002.05709"]},{"id":786,"created_on":"2020-05-08 17:35:20","title":"G-MARC : GUI for Model Agnostic IML on Rupture risk Classifier","description":"Study and Visualization of Model Agnostic Interpretable ML Approaches on the classification of Rupture status of Intracranial Aneurysms","tags":["code","python","machine-learning","graphic-design","healthcare","interpretability","model-selection","explainability","gui","interface","plots","cxfreeze"]},{"id":787,"created_on":"2020-05-08 18:15:56","title":"Semantic Cord19 Paper Explorer","description":"Semantic research paper explorer to search Research Papers in COVID and CoronaVirus. Can be easily modified to any Research Paper Database","tags":["code","fasttext","natural-language-processing","streamlit","cord19"]},{"id":788,"created_on":"2020-05-09 04:12:10","title":"NER model for 40 languages trained with the new TFTrainer","description":"This model is a fine-tuned XLM-Roberta-base over the 40 languages proposed in XTREME from Wikiann. ","tags":["code","tutorial","huggingface","tensorflow","attention","bert","transformers","library","language-modeling","multilingual","named-entity-recognition","natural-language-processing","tftrainer"]},{"id":789,"created_on":"2020-05-09 04:16:01","title":"Mathematics of Neural Networks","description":"Text on \"the mathematics of neural networks\" for a general audience.","tags":["paper","research","tutorial","convolutional-neural-networks","math"]},{"id":790,"created_on":"2020-05-09 06:22:40","title":"Interpretability in Deep Learning with W&B - CAM and GradCAM","description":"This report will review how CAM and Grad-CAM counters the common criticism that neural networks are not interpretable.","tags":["article","code","paper","research","tutorial","interpretability","wandb","arxiv:1610.02391"]},{"id":791,"created_on":"2020-05-09 14:30:08","title":"Pose Animator","description":"Takes a 2D vector illustration and animates its containing curves in real-time based on the recognition result from PoseNet and FaceMesh.","tags":["code","tutorial","tensorflow-js","computer-vision","pose-estimation","posenet","facemesh"]},{"id":792,"created_on":"2020-05-09 16:59:54","title":"A Commit History of BERT and its Forks","description":"What a commit history of version-controlled research papers could look like?","tags":["article","research","tutorial","natural-language-processing"]},{"id":793,"created_on":"2020-05-10 04:32:06","title":"MapExtrackt","description":"PyTorch Feature Map Extractor","tags":["code","notebook","video","pytorch","convolutional-neural-networks","library","feature-maps"]},{"id":794,"created_on":"2020-05-10 04:43:21","title":"W4995 Applied Machine Learning","description":"This class offers a hands-on approach to machine learning and data science.","tags":["article","code","course","tutorial","video","machine-learning","applied-machine-learning","columbia","w4995"]},{"id":795,"created_on":"2020-05-10 04:51:17","title":"U^2-Net","description":"The code for our newly accepted paper in Pattern Recognition 2020: \"U^2-Net: Going Deeper with Nested U-Structure for Salient Object Detection.\"","tags":["code","research","tutorial","computer-vision","object-detection","segmentation","unet","salient-object-detection"]},{"id":796,"created_on":"2020-05-10 05:08:27","title":"Age and Gender Estimation using Multi-Task CNN","description":"Used a multi task CNN to predict the age group and gender of the person in the image.","tags":["code","tutorial","convolutional-neural-networks","deep-learning","computer-vision","image-classification","multi-task-learning"]},{"id":797,"created_on":"2020-05-10 15:31:27","title":"Data augmentation recipes in tf.keras image-based models","description":"Learn about different ways of doing data augmentation when training an image classifier in tf.keras.","tags":["article","code","notebook","tutorial","keras","tensorflow","deep-learning","computer-vision","data-augmentation","image-classification","recipe"]},{"id":798,"created_on":"2020-05-10 16:16:05","title":"TF callbacks in action ","description":"This article consist, about how to use Tenserflow callbacks.\r\nI've covered some really important Tensorflow callbacks guides. \r\n","tags":["article","code","keras","tensorflow","deep-learning","feed-forward-neural-networks"]},{"id":799,"created_on":"2020-05-11 00:40:49","title":"Injecting Inductive Bias in Graph Neural Networks (MIT talk)","description":"Equivariant Mesh Neural Networks and Neural Augmented (Factor) Graph Neural Networks.","tags":["tutorial","video","graph-neural-networks","graphs"]},{"id":800,"created_on":"2020-05-11 00:44:10","title":"Feature Stores for ML","description":"List of production ML groups and their open-source feature store architectures.","tags":["article","tutorial","library","production","feature-store","industry"]},{"id":803,"created_on":"2020-05-11 02:13:32","title":"Image Semantic Segmentation of UAV mining area based on Deeplabv3","description":"Data: UAV mining area image\r\nTools: PyTorch\r\nFrame: Deeplabv3\r\nSemantic Segmentation ","tags":["article","code","research","pytorch","computer-vision","semantic-segmentation","segmentation","deeplabv3"]},{"id":804,"created_on":"2020-05-11 02:14:13","title":"Generative Adversarial Networks with Python","description":"Deep Learning Generative Models for Image Synthesis and Image Translation. ","tags":["article","tutorial","deep-learning","generative-adversarial-networks","library","generative-modeling"]},{"id":805,"created_on":"2020-05-11 02:16:41","title":"Generative Adversarial Networks: A Crash Course in GANs","description":"This course covers GAN basics, and also how to use the TF-GAN library to create GANs.","tags":["article","tutorial","tensorflow","deep-learning","generative-adversarial-networks","generative-modeling"]},{"id":806,"created_on":"2020-05-11 02:22:58","title":"Deep Generative Models","description":"CS236: A comprehensive course to learn about generative modeling techniques in deep learning. ","tags":["article","research","tutorial","autoencoders","generative-adversarial-networks","autoregressive-models","normalizing-flow-models"]},{"id":807,"created_on":"2020-05-11 02:25:51","title":"Introduction to Machine Learning Problem Framing","description":"This course helps you frame machine learning (ML) problems.","tags":["article","tutorial","deep-learning","machine-learning","production"]},{"id":811,"created_on":"2020-05-11 04:12:18","title":"tf.keras for Researchers: Crash Course","description":"A crash course on how to best use Keras when doing research. ","tags":["code","notebook","research","tutorial","keras","tensorflow","deep-learning"]},{"id":813,"created_on":"2020-05-11 04:19:44","title":"Inside TensorFlow: tf.Keras ","description":"Walkthrough of the high-level Keras API of TensorFlow. ","tags":["article","tutorial","video","keras","tensorflow","deep-learning"]},{"id":815,"created_on":"2020-05-11 04:22:23","title":"keras.io Guides and Examples","description":"Official keras.io guides and code examples.","tags":["article","code","tutorial","keras","tensorflow","deep-learning"]},{"id":817,"created_on":"2020-05-11 08:05:18","title":"On-device Learning of Activity Recognition Networks","description":"Personalized machine learning on the smartphone.","tags":["article","code","tutorial","on-device-learning"]},{"id":819,"created_on":"2020-05-11 11:24:26","title":"TensorFlow Extended Workshop","description":"Slides for teaching a complete workshop on TensorFlow Extended.  ","tags":["article","code","tutorial"]},{"id":820,"created_on":"2020-05-11 14:19:18","title":"A Comprehensive Survey on Graph Neural Networks","description":"A Comprehensive Survey on Graph Neural Networks.","tags":["paper","research","tutorial","graph-convolutional-networks","graph-neural-networks","graphs","graph-autoencoders","spatial-temporal-gnns","arxiv:1901.00596"]},{"id":821,"created_on":"2020-05-11 15:03:57","title":"Hidden Technical Debt in Machine Learning Systems","description":"Using the software engineering framework of technical debt, we find it is common to incur massive ongoing maintenance costs in real-world ML systems. ","tags":["paper","research","production","systems-design","industry","technical-debt"]},{"id":822,"created_on":"2020-05-11 15:10:09","title":"In-Domain GAN Inversion for Real Image Editing","description":"We propose an in-domain GAN inversion method, which faithfully reconstructs the input image but also ensures the inverted code to be semantically meaningful.","tags":["article","code","paper","research","tutorial","video","generative-adversarial-networks","computer-vision","image-generation","inversion","image-editing"]},{"id":823,"created_on":"2020-05-11 15:33:13","title":"Feature importance","description":"A python source file illustrating multiple methods to extract Feature importance from a dataset","tags":["code","python","scikit-learn","feature-engineering","feature-importance","feature-selection","data-science","data"]},{"id":824,"created_on":"2020-05-11 15:42:43","title":"Normalising a distribution","description":"A Kaggle kernel\/Jupyter Notebook illustrating a number of methods (including experimental ones), on how to normalise a distribution in `Python`.","tags":["code","notebook","python","scikit-learn","distribution","data-science","jupyter-notebook","normalisation","transformation","data-transformation","kaggle-kernel","kaggle"]},{"id":825,"created_on":"2020-05-11 23:07:39","title":"Neural Networks for NLP (CMU CS 11-747)","description":"This class will start with a brief overview of neural networks, then spend the majority of the class demonstrating how to apply neural networks to language.","tags":["course","tutorial","video","neural-networks","natural-language-processing","carnegie-mellon"]},{"id":826,"created_on":"2020-05-12 03:02:02","title":"DANet PyTorch","description":"A Pytorch implementation of Dual Attention Network for Scene Segmentation","tags":["article","code","paper","research","pytorch","attention","computer-vision","semantic-segmentation","segmentation","danet","arxiv:1809.02983"]},{"id":827,"created_on":"2020-05-12 05:00:47","title":"SupContrast: Supervised Contrastive Learning","description":"PyTorch implementation of \"Supervised Contrastive Learning\" (and SimCLR incidentally)","tags":["code","paper","research","tutorial","pytorch","self-supervised-learning","simclr","contrastive-learning","arxiv:2004.11362","arxiv:2002.05709"]},{"id":828,"created_on":"2020-05-12 05:04:58","title":"BART version of closed-book QA","description":"This is a BART version of sequence-to-sequence model for open-domain QA in a closed-book setup, based on PyTorch and Huggingface's Transformers.","tags":["code","paper","research","tutorial","huggingface","pytorch","transformers","natural-language-processing","question-answering","bart","arxiv:1910.13461","arxiv:2002.08910"]},{"id":829,"created_on":"2020-05-12 05:07:35","title":"Unsupervised Reinforcement Learning","description":"Lecture on unsupervised reinforcement learning by Sergey Levine. Originally prepared for AAMAS 2020.","tags":["tutorial","video","reinforcement-learning","unsupervised-learning","unsupervised-reinforcement-learning"]},{"id":830,"created_on":"2020-05-12 08:19:56","title":"DeepRecommender","description":"Training Deep AutoEncoders for Collaborative Filtering.","tags":["code","paper","research","tutorial","pytorch","autoencoders","recommendation-systems","arxiv:1708.01715"]},{"id":831,"created_on":"2020-05-13 02:24:24","title":"CCNet_PyTorch","description":"A PyTorch Implementation of  CCNet: Criss-Cross Attention for Semantic Segmentation","tags":["article","code","paper","research","pytorch","attention","computer-vision","semantic-segmentation","segmentation","ccnet","arxiv:1811.11721"]},{"id":832,"created_on":"2020-05-13 04:22:09","title":"Image segmentation in 2020","description":"Architectures, Losses, Datasets, and Frameworks","tags":["article","computer-vision","semantic-segmentation","segmentation","instance-segmentation"]},{"id":833,"created_on":"2020-05-13 04:27:08","title":"Plan2Explore: Plan to Explore via Self-Supervised World Models","description":"A self-supervised reinforcement learning agent that tackles task-specific and the sample efficiency challenges.","tags":["article","code","paper","research","video","reinforcement-learning","self-supervised-learning","plan2explore","arxiv:2005.05960"]},{"id":834,"created_on":"2020-05-13 04:36:33","title":"TailorGAN: Making User-Defined Fashion Designs","description":"Generate a photo-realistic image which combines the texture from reference A and the new attribute from reference B.","tags":["code","paper","research","tutorial","generative-adversarial-networks","design","fashion","computer-vision","image-generation","generative-modeling","arxiv:2001.06427"]},{"id":835,"created_on":"2020-05-13 04:39:31","title":"Toward Better Storylines with Sentence-Level Language Models","description":"We propose a sentence-level language model which selects the next sentence in a story from a finite set of fluent alternatives.","tags":["paper","research","language-modeling","natural-language-processing","text-generation","storytelling","arxiv:2005.05255"]},{"id":836,"created_on":"2020-05-13 04:43:57","title":"Epipolar Transformers","description":"Differentiable \"epipolar transformer\", which enables the 2D detector to leverage 3D-aware features to improve 2D pose estimation.","tags":["code","paper","research","tutorial","video","transformers","3d","computer-vision","pose-estimation","epipoplar","cvpr-2020","arxiv:2005.04551"]},{"id":837,"created_on":"2020-05-13 04:46:46","title":"torchdyn","description":"A PyTorch based library for all things neural differential equations","tags":["code","pytorch","library","neural-differential-equations","torchdyn"]},{"id":838,"created_on":"2020-05-13 04:49:04","title":"mljar-supervised","description":"\u2728 Automated Machine Learning Python package designed to save time for a data scientist \ud83d\ude0e","tags":["code","linear-regression","regression","library","automl","supervised-learning","multi-class-classification"]},{"id":839,"created_on":"2020-05-13 04:58:45","title":"Underrated ML","description":"A podcast that pitches underrated ideas in Machine Learning.","tags":["podcast","tutorial","machine-learning","underrated-topics"]},{"id":840,"created_on":"2020-05-13 05:03:33","title":"Machine Learning on Graphs: A Model and Comprehensive Taxonomy","description":"We propose a simple framework (GraphEDM) and a comprehensive Taxonomy to review and unify several graph representation learning methods.","tags":["paper","research","autoencoders","graph-convolutional-networks","graph-neural-networks","graphs","representation-learning","survey","graph-regularization","arxiv:2005.03675"]},{"id":841,"created_on":"2020-05-13 05:10:58","title":"BLEURT: Learning Robust Metrics for Text Generation","description":"A metric for Natural Language Generation based on transfer learning.","tags":["code","paper","research","tutorial","metrics","natural-language-processing","text-generation","transfer-learning","language-generation","bleu","sentence-bleu","bertscore","arxiv:2004.04696"]},{"id":842,"created_on":"2020-05-13 13:20:07","title":"Identifying Brain Tumor from MRI images using FastAI -DynamicUnet","description":"To use FASTAI unet learner to identify tumours from MRI of Brain, logging loss metrics in Neptune AI logger and compare the results after hyperparameter tuning.","tags":["article","code","fastai","pytorch","deep-learning","computer-vision","segmentation","neptune-ai"]},{"id":843,"created_on":"2020-05-13 14:49:21","title":"T5 fine-tuning","description":"A colab notebook to showcase how to fine-tune T5 model on various NLP tasks (especially non text-2-text tasks with text-2-text approach)","tags":["code","notebook","paper","research","tutorial","transformers","natural-language-processing","t5","text-2-text","arxiv:1910.10683"]},{"id":844,"created_on":"2020-05-13 14:57:43","title":"Little Ball of Fur","description":"Little Ball of Fur is a graph sampling extension library for NetworkX.","tags":["code","library","graph-classification","graph-clustering","graphs","node-classification","community-detection","network-science","network-sampling"]},{"id":845,"created_on":"2020-05-13 15:09:03","title":"Creating and deploying static websites using Markdown and Pelican","description":"A series of articles consisting of a detailed step by step tutorial on how to create and host your personal static website using only Markdown and Python","tags":["article","code","tutorial","python","analytics","pelican","markdown","website","disqus"]},{"id":846,"created_on":"2020-05-13 17:35:39","title":"Guitar Chords Recognition","description":"An application that predicts the chords when Mel spectrograms of guitar sound are fed into a CNN.","tags":["code","video","convolutional-neural-networks","library","audio","audio-classification","streamlit","chords"]},{"id":847,"created_on":"2020-05-13 22:53:36","title":"HuggingTweets","description":"Tweet Generation with Huggingface.","tags":["code","tutorial","huggingface","transformers","natural-language-processing","text-generation","wandb"]},{"id":848,"created_on":"2020-05-13 22:56:19","title":"Using Custom spaCy Components in Rasa","description":"Get a custom spaCy model working inside of Rasa on your local machine.","tags":["article","tutorial","spacy","rasa"]},{"id":849,"created_on":"2020-05-13 22:59:38","title":"Top Down Introduction to BERT with HuggingFace and PyTorch","description":"I will also provide some intuition into how BERT works with a top down approach (applications to algorithm).","tags":["article","tutorial","huggingface","pytorch","attention","bert","transformers","natural-language-processing","top-down"]},{"id":850,"created_on":"2020-05-13 23:02:29","title":"Transformers from Scratch","description":"Attempt to explain directly how modern transformers work, and why, without some of the historical baggage.","tags":["article","code","tutorial","transformers","natural-language-processing","from-scratch"]},{"id":851,"created_on":"2020-05-14 02:15:27","title":"Pleural Effusion Detection","description":"Attempting a Convolutional Neural Network to detect pleural effusion in frontal chest radiographs.","tags":["code","research","keras","tensorflow","convolutional-neural-networks"]},{"id":852,"created_on":"2020-05-14 07:11:26","title":"Scene Classification using Pytorch and Fast.ai","description":"The objective is to classify Multi-label images using deep learning. Here I have used Fast.ai library for implementing the model. ","tags":["code","research","fastai","pytorch","deep-learning","computer-vision","image-classification","transfer-learning"]},{"id":853,"created_on":"2020-05-14 08:43:26","title":"Plant Disease Detection Web Application ","description":"Detection of disease in plant leaves using fastai library ","tags":["code","tutorial","fastai","flask","deep-learning","agriculture","library","web-design","plants"]},{"id":854,"created_on":"2020-05-14 12:05:20","title":"ASAP: Pooling for Graph Neural Network (AAAI 2020)","description":"ASAP is a sparse and differentiable pooling method that addresses the limitations of previous graph pooling layers.","tags":["code","paper","research","attention","graph-convolutional-networks","self-attention","graph-classification","graph-neural-networks","graphs","pool","molecule","graph","arxiv:1911.07979"]},{"id":855,"created_on":"2020-05-14 12:32:20","title":"Fake new detection Pytorch","description":"Fake News Detection by Learning Convolution Filters through Contextualized Attention.","tags":["code","paper","research","pytorch","attention","convolutional-neural-networks","fake-news-detection","natural-language-processing","liar"]},{"id":856,"created_on":"2020-05-14 12:41:52","title":"Chest X-Ray Classification ","description":"Learning to classify chest x-ray in the compressed domain of high-resolution medical images.","tags":["code","paper","research","covid","chestx-ray","x-ray","chestx-ray14","pneumonia","thoracic-disease","lung-disease","lung","corona"]},{"id":857,"created_on":"2020-05-14 14:25:11","title":"FastHugs: Sequence Classification with Transformers and Fastai","description":"Fine-tune a text classification model with HuggingFace \ud83e\udd17 transformers and fastai-v2.","tags":["article","code","notebook","tutorial","fastai","huggingface","transformers","library","natural-language-processing","sequence-classification","fasthugs"]},{"id":858,"created_on":"2020-05-14 14:35:37","title":"Open-Dialog Chatbots for Learning New Languages","description":"A tutorial for automatically generate code comments using Deep Learning.","tags":["article","code","notebook","tutorial","huggingface","gpt2","transformers","natural-language-processing","conversational-ai"]},{"id":859,"created_on":"2020-05-14 16:48:08","title":"An Approach for Table Scraping With Azure Form Recognizer","description":"Invoice handling is the most important task in many different fields that deal with large amounts of data in many different formats. ","tags":["article","research","tutorial","deep-learning","azure-form-recognizer","table-scraping"]},{"id":860,"created_on":"2020-05-14 17:35:04","title":"Electra","description":"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators","tags":["code","research","generative-adversarial-networks","natural-language-processing","electra","text-encoder"]},{"id":861,"created_on":"2020-05-14 17:44:44","title":"Flowtron","description":"Auto-regressive flow-based generative network for text to speech synthesis.","tags":["code","paper","research","library","computer-vision","natural-language-processing","speech","speech-synthesis","style-transfer","tacotron","flowtron","iaf","text-to-speech","arxiv:2005.05957"]},{"id":862,"created_on":"2020-05-14 19:13:59","title":"DQN In Pytorch Livestream Series","description":"I'm doing a series of streams about reinforcement learning (starting from Q learning) focused on showing the work in as much detail as possible (e.g. debugging)","tags":["code","tutorial","video","pytorch","deep-q-networks","reinforcement-learning","atari","breakout","cartpole"]},{"id":863,"created_on":"2020-05-15 04:24:58","title":"S2IGAN: Speech-to-Image Generation via Adversarial Learning","description":"A speech-to-image generation (S2IG) framework is proposed which translates speech descriptions to photo-realistic images without using any text information.","tags":["article","paper","research","computer-vision","image-generation","arxiv:2005.06968"]},{"id":864,"created_on":"2020-05-15 13:04:19","title":"Twitter Sentiment Analysis","description":"This project is based on Natural Language processing (NLP), in this we do sentiment analysis(i.e, how much it is positive or negative) of tweets of any account.","tags":["code","notebook","tutorial","machine-learning","natural-language-processing","sentiment-analysis"]},{"id":865,"created_on":"2020-05-15 13:48:56","title":"Simple Linear Regression","description":"This will cover Simple Liner Regression and its  Algorithm and the techniques that is used in along with the formula. I will also cover little bit of math.","tags":["article","code","tutorial","linear-regression","regression"]},{"id":866,"created_on":"2020-05-15 13:51:56","title":"HuggingFace nlp library","description":"nlp is a lightweight and extensible library to easily share and load dataset and evaluation metrics, already providing access to ~100 datasets and ~10 evaluatio","tags":["code","notebook","huggingface","library","metrics","natural-language-processing","datasets"]},{"id":867,"created_on":"2020-05-15 13:52:28","title":"Multiple Linear Regression in python","description":"It is used to explain the relationship between independent variables and a single continuous dependent variable.","tags":["article","code","tutorial","linear-regression","multinomial-regression","regression"]},{"id":868,"created_on":"2020-05-15 14:07:47","title":"RXNMapper: Unsupervised Attention-Guided Atom-Mapping","description":"The atom-mapping information was learned by an ALBERT model trained in an unsupervised fashion on a large dataset of chemical reactions.","tags":["article","code","paper","research","attention","bert","transformers","natural-language-processing","unsupervised-learning","chemistry","albert","molecules","atom-mapping","rxnmapper","chemical-compounds"]},{"id":869,"created_on":"2020-05-15 14:08:12","title":"ICLR 2020 Trends: Better & Faster Transformers for NLP","description":"A summary of promising directions from ICLR 2020 for better and faster pretrained tranformers language models. ","tags":["article","research","attention","deep-learning","self-attention","transformers","language-modeling","natural-language-processing","natural-language-understanding"]},{"id":870,"created_on":"2020-05-15 15:24:24","title":"DeepRobust","description":"A pytorch adversarial library for attack and defense methods on images and graphs.","tags":["code","pytorch","library","adversarial-defense","computer-vision","graph-neural-networks","graphs","adversarial-learning","adversarial-attacks"]},{"id":871,"created_on":"2020-05-15 15:29:42","title":"The Puppyteer Crawler","description":"Crawls a website for pictures of dogs! It uses a crawler that uses Puppeteer then for every image encountered, it uses Tensorflowjs' coco-ssd for classification","tags":["article","code","tutorial","node-js","tensorflow","tensorflow-js","machine-learning","puppeteer"]},{"id":872,"created_on":"2020-05-15 15:39:27","title":"AutoML - AutoGluon","description":"An open-source library that utilizes Automatic Machine Learning (AutoML) by deploying ML into itself.","tags":["code","mxnet","library","automl","autogluon"]},{"id":873,"created_on":"2020-05-15 16:24:19","title":"Learning Machine Learning","description":"Whatever I know in Machine Learning. A Big collection of tutorials from which I learnt.","tags":["code","tutorial","machine-learning","education"]},{"id":874,"created_on":"2020-05-15 19:25:54","title":"Interactive COVID-19 Analysis dashboard with Dash","description":"A Beautiful Dashboard to visualize large data with option to interact and filter out to visualize the desire result using Dash and Python.","tags":["article","code","python","data-science"]},{"id":875,"created_on":"2020-05-15 22:53:58","title":"Differentiable Reasoning over Text","description":"We consider the task of answering complex multi-hop questions using a corpus as a virtual knowledge base (KB).","tags":["article","code","paper","research","tutorial","entity-linking","natural-language-processing","question-answering","multi-hop","reasoning","arxiv:2002.10640"]},{"id":876,"created_on":"2020-05-15 22:59:17","title":"30x Faster Hyperparameter Search with Ray Tune and RAPIDS","description":"We will show how to both increase the accuracy of our Random Forest Classifier by 5% AND reduce tuning time by 30x.","tags":["article","tutorial","ray","rapidsai","hyperparameter-optimization"]},{"id":877,"created_on":"2020-05-16 02:42:32","title":"Semi-supervised image classification with GANs","description":"Shows how to perform semi-supervised image classification with GANs. The cover image is from Chapter 7, GANs in Action.","tags":["code","notebook","tutorial","keras","tensorflow","generative-adversarial-networks","computer-vision","semi-supervised-learning"]},{"id":878,"created_on":"2020-05-16 05:27:56","title":"Exploratory Data Analysis on MS COCO Style Datasets","description":"A Simple Toolkit to do exploratory data analysis on MS COCO style formatted datasets.","tags":["code","deep-learning","library","computer-vision","object-detection"]},{"id":879,"created_on":"2020-05-16 10:57:53","title":"HighRes-net: Multi-Frame Super-Resolution of satellite imagery","description":"Pytorch implementation of HighRes-net, a neural network for multi-frame super-resolution, trained and tested on the European Space Agency\u2019s Kelvin competition.","tags":["article","code","paper","research","library","computer-vision","super-resolution","remote-sensing","multi-frame-super-resolution","earth-observation","satellite-imagery","proba-v","highres-net","arxiv:2002.06460"]},{"id":880,"created_on":"2020-05-16 11:50:31","title":"How Deep Is Your Love For Transfer Learning In NLP?","description":"A review of NLP research","tags":["article","deep-learning","natural-language-processing","transfer-learning"]},{"id":881,"created_on":"2020-05-16 13:32:51","title":"Time Series Forecasting with TensorFlow.js","description":"Machine learning is becoming increasingly popular these days and a growing number of the world\u2019s population see it is as a magic crystal ball: predicting when a","tags":["article","code","tutorial","javascript","tensorflow","tensorflow-js","machine-learning","time-series","time-series-forecasting"]},{"id":882,"created_on":"2020-05-16 13:35:31","title":"Phrases extraction and D3 Wordcloud","description":"100% JavaScript solution to extracting phrases from text and display key points in a beautiful D3 wordcloud.","tags":["article","code","tutorial","javascript","machine-learning","natural-language-processing"]},{"id":883,"created_on":"2020-05-16 13:37:44","title":"Reinforcement Learning Tic Tac Toe with Value Function","description":"A reinforcement learning algorithm for agents to learn the tic-tac-toe, using the value function\r\n\r\n","tags":["article","code","tutorial","javascript","machine-learning","reinforcement-learning"]},{"id":884,"created_on":"2020-05-16 13:40:07","title":"Build a Textual Similarity Web App with TensorFlow.js","description":"Have you wondered how search engines understand your queries and retrieve relevant results? How chatbots extract your intent from your questions and provide the","tags":["article","code","tutorial","tensorflow","tensorflow-js","natural-language-processing","text-similarity"]},{"id":885,"created_on":"2020-05-16 14:30:43","title":"Visualizing Optimization Trajectory of Neural Nets","description":"This is a project making animated plots for optimization paths inspired by the paper \"Visualizing the Loss Landscape of Neural Nets\". ","tags":["article","tutorial","deep-learning","library","multilayer-perceptrons"]},{"id":886,"created_on":"2020-05-16 15:19:38","title":"Diabetes Detection Web app StreamLit","description":"Pima Indian Diabetes Detection with Machine Learning Deep Learning and a web application with Streamlit.io and deployed in Heroku.","tags":["code","tutorial","keras","python","tensorflow","deep-learning","logistic-regression","machine-learning","naive-bayes","regression","support-vector-machines","healthcare","streamlit","data-science"]},{"id":887,"created_on":"2020-05-16 17:05:48","title":"Recommendation Systems Datasets","description":"This tool allows you download, unpack and read recommender systems datasets into pandas.DataFrame as easy as data = Dataset().","tags":["code","python","machine-learning","library","recommendation-systems","datasets","data-science","recommender-systems","research-tool","research-data-management"]},{"id":888,"created_on":"2020-05-16 17:43:22","title":"Hypothesis : T-test","description":"In this there is some introduction of Hypothesis and Testing. And also implemented the T-test also. (install from scipy  import stats)","tags":["code","tutorial","machine-learning"]},{"id":890,"created_on":"2020-05-16 19:51:33","title":"cyBERT: Applying BERT to Windows event logs","description":"This blog shows how interpreting cybersecurity logs as a natural language, improving upon the standard regex-based parsing of log data.","tags":["article","attention","bert","transformers","cyber-security","natural-language-processing","rapidsai","rapids","logs","cybert"]},{"id":891,"created_on":"2020-05-16 21:51:32","title":"Keras Debugging Tips","description":"Four simple tips to help you debug your Keras code.","tags":["article","tutorial","keras","tensorflow","debugging"]},{"id":892,"created_on":"2020-05-17 02:08:12","title":"DPOD: Pose Estimator","description":"PyTorch recreation of a SOTA 6D Pose estimation research paper. ","tags":["code","paper","research","computer-vision","pose-estimation","arxiv:1902.11020"]},{"id":893,"created_on":"2020-05-17 04:44:04","title":"ESTorch","description":"ESTorch is an Evolution Strategy Library build around PyTorch.","tags":["article","code","pytorch","library","reinforcement-learning","evolution-strategies","evolutionary-algorithms"]},{"id":894,"created_on":"2020-05-17 04:47:40","title":"A Large-Scale, Open-Domain, Mixed-Interface Dialogue-Based ITS ","description":"Korbit, a large-scale, open-domain, mixed-interface, dialogue-based intelligent tutoring system (ITS).","tags":["paper","research","natural-language-processing","teaching","tutoring","personalized-learning","intelligent-tutoring-systems","arxiv:2005.06616"]},{"id":895,"created_on":"2020-05-17 04:55:26","title":"Catalog of Variable Transformations To Make Your Models Work","description":"10+ Numeric Variable Transformations and 7 Categorical Variable Transformations","tags":["article","tutorial","encoding","box-cox","scaling","standardization","hashing","transformations"]},{"id":896,"created_on":"2020-05-17 05:00:19","title":"Optimizing the Design of Genetic Programs for Living Cells","description":"Talk by Joe Isaacson on designing genetic programs for cells at Asimov.","tags":["video","health","genetic-programming","genetics","asimov","scaledml"]},{"id":897,"created_on":"2020-05-17 05:04:25","title":"Prototypical Contrastive Learning (PCL) for Unsupervised Learning","description":"Prototypical Contrastive Learning (PCL), an unsupervised representation learning method that addresses the fundamental limitations of the popular instance-wise ","tags":["article","code","paper","research","representation-learning","self-supervised-learning","semi-supervised-learning","unsupervised-learning","contrastive-learning","arxiv:2005.04966"]},{"id":898,"created_on":"2020-05-17 05:11:22","title":"Single-Stage Semantic Segmentation from Image Labels","description":"We attain competitive results by training a single network model\r\nfor segmentation in a self-supervised fashion using only\r\nimage-level annotations","tags":["code","research","tutorial","conditional-random-fields","computer-vision","self-supervised-learning","semantic-segmentation","segmentation","single-stage","pascal-voc"]},{"id":899,"created_on":"2020-05-17 07:42:46","title":"Hands-On Python Deep Learning for the Web","description":"Use the power of deep learning with Python to build and deploy intelligent web applications.","tags":["article","code","tutorial","azure","aws","django","flask","keras","tensorflow","tensorflow-js","deep-learning","library","gcp","web-development","dialogflow"]},{"id":900,"created_on":"2020-05-17 08:14:24","title":"A Visual Survey of Data Augmentation in NLP","description":"An extensive overview of text data augmentation techniques for Natural Language Processing","tags":["article","tutorial","data-augmentation","natural-language-processing"]},{"id":901,"created_on":"2020-05-17 09:57:38","title":"DoYouEvenLearn","description":"Essential Guide to keep up with AI\/ML\/DL\/CV","tags":["code","deep-learning","machine-learning","computer-vision"]},{"id":902,"created_on":"2020-05-18 00:57:27","title":"Differentiable Adaptive Computation Time for Visual Reasoning ","description":"DACT, a new algorithm for achieving adaptive computation time that, unlike existing approaches, is fully differentiable. ","tags":["article","code","paper","research","tutorial","natural-language-processing","question-answering","visual-question-answering","cvpr-2020","modular-networks","arxiv:2004.12770"]},{"id":903,"created_on":"2020-05-18 11:15:12","title":"Semixup: In- and Out-of-Manifold Regularization","description":"Semixup is a semi-supervised learning method based on in\/out-of-manifold regularization.","tags":["code","paper","research","health","computer-vision","medical-imaging","semi-supervised-learning","regularization","kl-divergence","manifold-regularization","arxiv:2003.01944"]},{"id":904,"created_on":"2020-05-18 14:35:08","title":"Convoluted Stuff","description":"Optimising compilers, and how thousand-year-old math shaped deep learning.","tags":["article","tutorial","jax","convolutional-neural-networks","xla","matrix-multiplication","im2col","winograd"]},{"id":905,"created_on":"2020-05-18 14:40:51","title":"Deep Reinforcement Learning for Supply Chain & Price Optimization","description":"Explore how deep reinforcement learning methods can be applied in several basic supply chain and price management scenarios.","tags":["article","tutorial","pytorch","industrial-engineering","reinforcement-learning","supply-chain","price-optimization"]},{"id":906,"created_on":"2020-05-18 14:50:45","title":"NLPAug","description":"Data augmentation for NLP","tags":["article","code","notebook","pytorch","library","audio","data-augmentation","natural-language-processing","demo"]},{"id":907,"created_on":"2020-05-18 14:53:33","title":"TextAttack","description":"A Python framework for building adversarial attacks on NLP models.","tags":["code","paper","research","library","adversarial-text","data-augmentation","natural-language-processing","adversarial-learning","adversarial-attacks","arxiv:2005.05909"]},{"id":908,"created_on":"2020-05-18 16:44:26","title":"ML Visuals","description":"Introducing ML Visuals, a collaborative effort to help the ML community improve science communication by providing free professional & compelling visuals.","tags":["code","education","drawings","visuals"]},{"id":909,"created_on":"2020-05-18 17:41:22","title":"ML Drawings","description":"Rich repository of ML drawings exported to XML and PNG created using draw.io","tags":["code","machine-learning","visualizations","drawings"]},{"id":910,"created_on":"2020-05-18 19:36:26","title":"Short-Term Energy Demand Forecasting","description":"Building models to predict Energy demand in next 24 hours using:\r\nSARIMA\r\nProphet\r\nLSTM","tags":["code","tutorial","renewable-energy"]},{"id":911,"created_on":"2020-05-18 19:50:03","title":"Energy Demand Forecasting","description":"Medium Term  for Austin TX","tags":["code","notebook","research","tutorial","energy","forecasting"]},{"id":912,"created_on":"2020-05-18 21:11:27","title":"CNNs from Scratch with NumPy","description":"This is an attempt at implementing a Convolutional Neural Network using only Python and Numpy. ","tags":["code","tutorial","convolutional-neural-networks","numpy","from-scratch","lenet5"]},{"id":913,"created_on":"2020-05-19 03:19:59","title":"aitextgen","description":"A robust Python tool for text-based AI training and generation using GPT-2.","tags":["code","gpt2","transformers","library","natural-language-processing"]},{"id":914,"created_on":"2020-05-19 03:25:11","title":"How Hugging Face achieved a 2x performance boost for QA","description":"Question Answering with DistilBERT in Node.js","tags":["article","tutorial","huggingface","node-js","attention","bert","transformers","natural-language-processing","question-answering","distillbert"]},{"id":915,"created_on":"2020-05-19 03:28:26","title":"Image inpainting with OpenCV and Python","description":"How to perform image inpainting with OpenCV and Python.","tags":["article","tutorial","opencv","inpainting","pyimagesearch"]},{"id":916,"created_on":"2020-05-19 08:11:05","title":"Get Subreddit Suggestions for a Post","description":"Trained on 4M Reddit posts from 4k Subreddits. End-to-end ML pipeline built with fasttext and FastAPI, deployed to Valohai.","tags":["article","code","fastapi","fasttext","library","natural-language-processing","recommendation-systems","reddit","valohai"]},{"id":917,"created_on":"2020-05-19 13:45:03","title":"Transfer Learning In NLP","description":"A brief history of Transfer Learning In NLP","tags":["article","tutorial","deep-learning","machine-learning","natural-language-inference","natural-language-processing","text-classification","transfer-learning"]},{"id":918,"created_on":"2020-05-19 22:36:09","title":"Accelerate your NLP pipelines using Hugging Face and ONNX","description":"How the ONNX Runtime team and Hugging Face are working together to address challenges in training and deployment of Transformer models.","tags":["article","tutorial","huggingface","onnx","transformers","natural-language-processing"]},{"id":919,"created_on":"2020-05-20 02:29:48","title":"IntelliCode Compose: Code Generation Using Transformer","description":"Code completion tool which is capable of predicting sequences of code tokens of arbitrary types, generating up to entire lines of syntactically correct code.","tags":["paper","research","tutorial","transformers","code-generation","natural-language-processing","arxiv:2005.08025"]},{"id":920,"created_on":"2020-05-20 02:35:11","title":"Attentron","description":"Few-shot text-to-speech exploiting attention-based variable length embedding","tags":["article","code","paper","research","attention","embeddings","few-shot-learning","natural-language-processing","speech","text-to-speech","arxiv:2005.08484"]},{"id":921,"created_on":"2020-05-20 02:39:09","title":"Torch Points3D","description":"Pytorch framework for doing deep learning on point clouds.","tags":["article","code","pytorch","library","3d","computer-vision","point-cloud-generation","point-cloud"]},{"id":922,"created_on":"2020-05-20 07:23:50","title":"NLP Model Selection ","description":"NLP model selection guide to make it easier to select models. This is prescriptive in nature and has to be used with caution.","tags":["tutorial","deep-learning","neural-networks","transformers","natural-language-processing","transfer-learning"]},{"id":923,"created_on":"2020-05-20 08:11:21","title":"Image Supersizer","description":"Our project enlarges graphics 2x - 8x without losing quality. We built this service by merging upscaling techniques from multiple models.","tags":["generative-adversarial-networks","graphic-design","photography","video-games"]},{"id":924,"created_on":"2020-05-20 13:29:26","title":"Multi Class Classification - Amazon Planets","description":"Notebook for Kaggle Amazon Planets Competition F-Score: 0.67446 ","tags":["code","pytorch"]},{"id":925,"created_on":"2020-05-20 16:20:28","title":"Model-Agnostic Meta-Learning for Reinforcement Learning with TF2","description":"Reimplementation of Model-Agnostic Meta-Learning (MAML) applied on Reinforcement Learning problems in TensorFlow 2.","tags":["code","paper","research","tensorflow","meta-learning","reinforcement-learning","arxiv:1703.03400"]},{"id":926,"created_on":"2020-05-20 17:47:54","title":"Which statistical test should I use?","description":"A flow chart to help you select the right statistical tests for evaluating your experiments.","tags":["article","code","tutorial","regression","statistics","a\/b-testing","experiments"]},{"id":927,"created_on":"2020-05-21 03:16:17","title":"FashionBERT","description":"Text and image matching with adaptive loss for cross-modal retrieval.","tags":["paper","research","attention","bert","transformers","fashion","natural-language-processing","adaptive-loss","arxiv:2005.09801"]},{"id":928,"created_on":"2020-05-21 03:17:53","title":"Lucent","description":"Lucid library adapted for PyTorch.","tags":["code","pytorch","library","interpretability","lucid","lucent"]},{"id":929,"created_on":"2020-05-21 03:27:05","title":"Contextual Residual Aggregation for Image Ipainting","description":"A Contextual Residual Aggregation (CRA) mechanism that can produce high-frequency residuals for missing contents by weighted aggregating residuals from context.","tags":["paper","research","inpainting","contextual-residual-aggregation","arxiv:2005.09704"]},{"id":930,"created_on":"2020-05-21 03:32:29","title":"GrokNet","description":"Unified Computer Vision Model Trunk and Embeddings For Commerce.","tags":["article","paper","research","facebook","ecommerce","shopping","image-search","groknet"]},{"id":931,"created_on":"2020-05-21 03:36:17","title":"Bayesian Active Learning (BaaL)","description":"BaaL is an active learning library by ElementAI. This repository contains techniques and reusable components to make active learning accessible for all.","tags":["article","code","bayesian-deep-learning","library","active-learning","semi-supervised-learning","baal","elementai"]},{"id":932,"created_on":"2020-05-21 03:39:10","title":"SymJAX","description":"A symbolic CPU\/GPU\/TPU programming","tags":["code","jax","library","xla","autograd","symjax","symbolic-programming"]},{"id":933,"created_on":"2020-05-21 03:42:16","title":"d2l-pytorch","description":"Reproduces the book Dive Into Deep Learning (www.d2l.ai), adapting the code from MXNet into PyTorch.","tags":["code","tutorial","pytorch","book","d2l-ai"]},{"id":934,"created_on":"2020-05-21 03:45:38","title":"\ud83d\udcc8 Automated Time Series Forecasting","description":"This data app uses Facebook's open-source Prophet library to automatically forecast values into the future. ","tags":["code","tutorial","forecasting","time-series","time-series-forecasting","streamlit"]},{"id":935,"created_on":"2020-05-21 14:22:01","title":"Look inside the workings of \"Label Smoothing\"","description":"This blog post describes how and why does \"trick\" of label smoothing improves the model accuracy and when should we use it ","tags":["article","paper","research","tutorial","deep-learning","classification","computer-vision","image-classification","regularization","label-smoothing","arxiv:1906.02629","arxiv:1512.00567"]},{"id":936,"created_on":"2020-05-21 15:58:11","title":"Kaggle Datasets","description":"Find and use datasets or complete tasks.","tags":["library","datasets","kaggle"]},{"id":937,"created_on":"2020-05-21 22:22:02","title":"In Model Extraction, Don\u2019t Just Ask \u2018How?\u2019: Ask \u2018Why?\u2019","description":"Designing an effective extraction attack requires that one first settle on a few critical details\u2014the adversary\u2019s goal, capabilities, and knowledge.","tags":["article","paper","research","tutorial","adversarial-learning","adversarial-attacks","model-extraction","arxiv:2003.04884"]},{"id":938,"created_on":"2020-05-22 01:01:32","title":"Content and Style Disentanglement for Artistic Style Transfer","description":"Hi-Res style transfer and interpolation between styles","tags":["code","paper","research","video","deep-learning","computer-vision","style-transfer"]},{"id":939,"created_on":"2020-05-22 03:08:40","title":"Time Series Classification Using Deep Learning","description":"In this article, I will introduce you to a new package called timeseries for fastai2 that I lately developed. ","tags":["article","code","tutorial","fastai","library","time-series"]},{"id":940,"created_on":"2020-05-22 03:16:29","title":"TAO: A Large-Scale Benchmark for Tracking Any Object","description":"A diverse dataset for Tracking Any Object (TAO) consisting of 2,907 high resolution videos, captured in diverse environments, which are half a minute long on ","tags":["article","dataset","paper","research","video","computer-vision","object-tracking","benchmark","tao","video-tracking","arxiv:2005.10356"]},{"id":941,"created_on":"2020-05-22 03:21:10","title":"BiT: Exploring Large-Scale Pre-training for Compute","description":"We are excited to share the best BiT models pre-trained on public datasets, along with code in TF2, Jax, and PyTorch. ","tags":["article","code","tutorial","pytorch","tensorflow","computer-vision","object-detection","pretraining","models","tf-hub","bit"]},{"id":942,"created_on":"2020-05-22 03:25:38","title":"Keras: The Next Five Years by Fran\u0107ois Chollet","description":"Keras: the next five years. Model training from simple -- e.g. http:\/\/model.fit() for simple experiments -- to arbitrarily flexible, e.g. custom training loops.","tags":["presentation","tutorial","video","keras","tensorflow","francois-chollet","matroid"]},{"id":943,"created_on":"2020-05-22 06:27:43","title":"Transfer Learning in NLP with Tensorflow Hub and Keras","description":"Learn how to integrate and finetune tensorflow-hub modules in Tensorflow 2.0","tags":["article","tutorial","keras","tensorflow","natural-language-processing","transfer-learning","tf-hub"]},{"id":944,"created_on":"2020-05-22 06:30:02","title":"Math Symbols Explained with Python","description":"Learn the meaning behind mathematical symbols used in Machine Learning using your knowledge of Python.","tags":["article","tutorial","python"]},{"id":945,"created_on":"2020-05-22 06:34:05","title":"Migrating from OS.PATH to PATHLIB Module in Python","description":"Learn how to use the modern pathlib module to perform tasks you have been using os.path for.","tags":["article","tutorial","python","program-development"]},{"id":946,"created_on":"2020-05-22 07:57:14","title":"Replicating Airbnb's Amenity Detection (documentary series)","description":"Airbnb's engineering team shared an article on how they used computer vision to detection amenities in photos. It read like a recipe so I replicated it.","tags":["article","code","tutorial","video","business","project-management","computer-vision","detectron2"]},{"id":947,"created_on":"2020-05-22 13:34:30","title":"Self Driving Car","description":"This project is a demonstration of a working model of self driving car \ud83d\ude97\ud83d\ude97 identifying and following lanes using powerful computer vision \ud83d\udd76\ud83d\udd76 algorithms.","tags":["article","code","autonomous-vehicles","computer-vision"]},{"id":948,"created_on":"2020-05-22 13:39:15","title":"Plant Disease Detection","description":"This website help you to detect disease in your plant\ud83c\udf33 based to the plant's leaf\ud83c\udf43 image","tags":["article","code","machine-learning","environment","computer-vision","streamlit"]},{"id":949,"created_on":"2020-05-22 22:03:52","title":"Generative Adversarial Networks for Outlier Detection ","description":"PyTorch implementation of a GAN architecture for the problem of outlier detection.","tags":["article","code","paper","research","pytorch","generative-adversarial-networks","anomaly-detection","outlier-detection","arxiv:1809.10816"]},{"id":950,"created_on":"2020-05-22 22:47:49","title":"Sound Event Detection in Synthetic Domestic Environment","description":"We present a comparative analysis of the performance of state-of-the-art sound event detection system and study the robustness to noise and signal degradation. ","tags":["paper","research","audio","audio-classification","audio-tagging","sound"]},{"id":951,"created_on":"2020-05-23 03:19:00","title":"YoloV3 implementation in keras and tensorflow 2.2","description":"YoloV3 Real Time Object Detector in tensorflow 2.2.","tags":["code","tutorial","keras","tensorflow","computer-vision","object-detection","yolo","yolo-v3"]},{"id":952,"created_on":"2020-05-23 03:22:11","title":"Face Mask Detector","description":"A simple Streamlit frontend for face mask detection in images using a pre-trained Keras CNN model + OpenCV and model interpretability.","tags":["code","tutorial","keras","convolutional-neural-networks","computer-vision","interpretability","object-detection","opencv","streamlit","face-mask"]},{"id":953,"created_on":"2020-05-23 03:31:32","title":"Cross-entropy for Classification","description":"Usages of cross-entropy for binary classification, multi-class classification, and multi-label classification.","tags":["article","tutorial","classification","cross-entropy","multi-class","multi-label"]},{"id":954,"created_on":"2020-05-23 03:53:43","title":"How to Train Your Neural Net","description":"Deep learning for various tasks in the domains of Computer Vision, Natural Language Processing, Time Series Forecasting using PyTorch 1.0+.","tags":["article","code","research","tutorial","python","pytorch","deep-learning","classification","computer-vision","domain-adaptation","image-classification","model-compression","named-entity-recognition","natural-language-processing","pruning","text-classification","time-series"]},{"id":955,"created_on":"2020-05-23 06:03:42","title":"Open Geoscience Computing Repository","description":"Open geoscience computing of open geoscience datasets available in open databases from Google Drive, SEG Wiki, and US DoE Geothermal Data Repository OpenEi","tags":["code","research","machine-learning","energy","geology","oil"]},{"id":956,"created_on":"2020-05-23 08:27:56","title":"FIFA-19 analysis and prediction","description":"Data visualisation and prediction of the overall score of a player using various linear regression algorithms, ensembling algorithms, and a neural network.","tags":["code","tutorial","feed-forward-neural-networks","regression","feature-selection"]},{"id":957,"created_on":"2020-05-23 09:18:52","title":"Colbert AI","description":"Colbert AI is a Deep Learning Language Model that generates text in the style of Stephen Colbert's famous monologues.","tags":["article","code","huggingface","transformers","language-modeling","natural-language-processing"]},{"id":958,"created_on":"2020-05-23 10:13:46","title":"Machine Learning for Facies Classification of North Sea Well Logs","description":"The dataset is provided by GEOLINK in the Google Drive Public geoscience Data","tags":["code","machine-learning"]},{"id":959,"created_on":"2020-05-23 11:01:47","title":"An Introduction to Bayes' Theorem","description":"This blog post introduces the reader to one of the most important concept in probability theory -  Bayes' Theorem","tags":["article","tutorial","bayesian-deep-learning","probabaility-and-statistics"]},{"id":960,"created_on":"2020-05-23 15:32:26","title":"Neural ODE Explained","description":"Explains \"Neural Ordinary Differential Equations\", a very interesting idea came out in NIPS 2018.","tags":["article","code","tutorial","recurrent-neural-networks","differential-equation","neural-ode","ordinary-differential-equations"]},{"id":961,"created_on":"2020-05-23 16:01:21","title":"How to Build Robust Embeddings for Visual Similarity Tasks","description":"This repository I package a bunch of tips and tricks to efficiently train deep learning models in computer vision","tags":["article","code","pytorch","deep-learning","computer-vision","embeddings","metric-learning","triplet-loss"]},{"id":962,"created_on":"2020-05-24 00:09:28","title":"Basic ML Algorithms from scratch.","description":"Implement basic Machine Learning Algorithms from scratch in python.","tags":["article","code","tutorial","python","machine-learning","library","natural-language-processing"]},{"id":963,"created_on":"2020-05-24 03:13:28","title":"Build your first data warehouse with Airflow on GCP","description":"What are the steps in building a data warehouse? What cloud technology should you use? How to use Airflow to orchestrate your pipeline?","tags":["article","code","tutorial","production","airflow","google-cloud-platforms","data-warehouse"]},{"id":964,"created_on":"2020-05-24 03:17:08","title":"Neural Network Intelligence (NNI)","description":"NNI is a lightweight but powerful toolkit to help users automate Feature Engineering, Neural Architecture Search, Hyperparameter Tuning and Model Compression.","tags":["code","library","automl","feature-engineering","model-compression","hyperparameter-optimization","neural-architecture-search","auto-tuning"]},{"id":965,"created_on":"2020-05-24 08:14:30","title":"GANs in Computer Vision : An article review series ","description":"An article series where we review the most important research papers on GANs from 2015 to today.  6 articles,  20 papers, 20000 words","tags":["article","tutorial","deep-learning","generative-adversarial-networks","computer-vision","generation","unsupervised-learning"]},{"id":966,"created_on":"2020-05-24 10:24:03","title":"Building an Intelligent Twitter Bot","description":"The volume of information going through Twitter per day makes it one of the best platforms to get information on any subject of interest. ","tags":["article","code","notebook","paper","research","tutorial","natural-language-processing","text-classification"]},{"id":968,"created_on":"2020-05-24 16:40:46","title":"Self Supervised Representation Learning in NLP","description":"An overview of self-supervised pretext tasks in Natural Language Processing","tags":["article","tutorial","natural-language-processing","representation-learning","self-supervised-learning"]},{"id":970,"created_on":"2020-05-24 20:01:29","title":"Job Classification","description":"Job Classification done using Techniques of NLP and ML.\r\n\r\nDataset used from Kaggle of Indeeed job posting.","tags":["code","natural-language-processing","supervised-learning"]},{"id":972,"created_on":"2020-05-25 03:23:16","title":"Next Word Prediction","description":"Using transformers to predict next word and predict <mask> word.","tags":["code","tutorial","transformers","language-modeling","natural-language-processing"]},{"id":974,"created_on":"2020-05-25 03:28:32","title":"PixelLib","description":"Pixellib is a library for performing segmentation of images. ","tags":["code","library","computer-vision","semantic-segmentation","segmentation","instance-segmentation"]},{"id":975,"created_on":"2020-05-25 03:46:51","title":"Self-Supervised Learning -- UC Berkeley Spring 2020","description":"Lecture on self-supervised learning from CS294-158-SP20: Deep Unsupervised Learning.","tags":["code","course","notebook","video","self-supervised-learning","unsupervised-learning","berkeley"]},{"id":978,"created_on":"2020-05-25 05:53:46","title":"TensorFlow.js - Gesture Controlled 2048","description":"Gesture Controlled 2048 built with TensorFlow.js","tags":["code","tutorial","tensorflow","tensorflow-js","video-games","computer-vision","gesture-recognition"]},{"id":979,"created_on":"2020-05-25 11:04:50","title":"Taxi Demand Prediction NewYorkCity","description":"Predict the number of pickups as accurately as possible for each region in a 10 -min interval.","tags":["article","code","notebook","tutorial","python","time-series","time-series-forecasting"]},{"id":980,"created_on":"2020-05-25 14:52:17","title":"Super-BPD for Fast Image Segmentation","description":"We propose direction-based super-BPD, an alternative to superpixel, for fast generic image segmentation, achieving state-of-the-art real-time result.","tags":["code","paper","research","tutorial","computer-vision","segmentation","cvpr-2020","super-pixel","super-pizel"]},{"id":981,"created_on":"2020-05-25 18:13:33","title":"Applications of MCMC for Cryptography and Optimization","description":"This post is about understanding MCMC Methods with the help of some Computer Science problems.","tags":["article","code","tutorial","stochastic-optimization","datascience","mcmc"]},{"id":982,"created_on":"2020-05-25 18:17:38","title":"How to write Web apps using simple Python for Data Scientists?","description":"So, are we doomed to learn web frameworks? Or to call our developer friend for silly doubts in the middle of the night?\r\nThis is where StreamLit comes in and del","tags":["article","code","tutorial","flask","web-design","streamlit","data-science"]},{"id":983,"created_on":"2020-05-25 21:01:18","title":"Telecom delinquency model","description":"Created 6 deliquency models based on logistic regression, SVM, KNN, Naive bayes,Decision tree and Random forest models and reported the results.","tags":["code","python","scikit-learn","machine-learning","classification","model-selection","hyperparameter-optimization"]},{"id":984,"created_on":"2020-05-26 02:34:40","title":"Tree-hugger","description":"Tree-hugger is a Python library to automate code mining. It is meant to be language-agnostic, extendable and high-level.","tags":["article","code","library","ml-on-code","code-mining","machine-learning-on-code"]},{"id":985,"created_on":"2020-05-26 03:07:18","title":"Translate RegEx in Natural Language Using Deep Learning","description":"A complete tutorial and code on how to build a model able to translate RegEx into natural language.","tags":["article","code","notebook","tutorial","deep-learning","library","regex","ml-on-code","machine-learning-on-code","regular-expression"]},{"id":986,"created_on":"2020-05-26 03:47:15","title":"Neural Topological SLAM for Visual Navigation","description":"Topological representations for space that effectively leverage semantics and afford approximate geometric reasoning.","tags":["article","paper","research","video","computer-vision","robotics","visual-navigation","cvpr-2020","slam","topology"]},{"id":987,"created_on":"2020-05-26 13:16:48","title":"Zero To One For NLP","description":"A collection of all resources for learning NLP","tags":["article","tutorial","deep-learning","natural-language-processing","natural-language-understanding"]},{"id":989,"created_on":"2020-05-26 17:17:14","title":"NLP for Developers: Shrinking Transformers | Rasa","description":"In this video, Rasa Senior Developer Advocate Rachael will talk about different approaches to make transformer models smaller.","tags":["tutorial","video","transformers","model-compression","natural-language-processing","pruning","quantization","distillation"]},{"id":990,"created_on":"2020-05-27 05:05:00","title":"Solving Optimization Problems with JAX","description":"JAX can be used to solve a range of simple to complex optimization problems with matrix methods.","tags":["article","notebook","paper","research","tutorial","jax","xla","autograd","optimization"]},{"id":991,"created_on":"2020-05-27 05:09:20","title":"NLP Viewer \ud83e\udd17","description":"A simple website for browsing popular NLP datasets.","tags":["huggingface","library","natural-language-processing","streamlit","datasets"]},{"id":992,"created_on":"2020-05-27 05:13:02","title":"Identifying the Number of Open Ion Channels with HMMs","description":"A write-up on how we almost won the \u201cUniversity of Liverpool \u2014 Ion Switching\u201d Kaggle competition using Hidden Markov Models.","tags":["article","tutorial","hidden-markov-models","biology","kaggle","ion-channels"]},{"id":993,"created_on":"2020-05-27 05:26:33","title":"DETR: End-to-End Object Detection with Transformers","description":"A new method that views object detection as a direct set prediction problem. ","tags":["article","code","notebook","paper","research","tutorial","transformers","computer-vision","object-detection","segmentation","panoptic-segmentation","arxiv:2005.12872"]},{"id":994,"created_on":"2020-05-27 10:41:00","title":"Large SVDs - Dask + CuPy + Zarr + Genomics","description":"Using Dask to perform Singular Value Decomposition on large datasets","tags":["article","code","video","genomics","cupy","dask","singular-value-decomposition","zarr"]},{"id":997,"created_on":"2020-05-28 03:20:06","title":"AutoSweep: Recovering 3D Editable Objects from a Single Photo","description":"Fully automatic framework for extracting editable 3D objects directly from a single photograph.","tags":["article","paper","research","3d","computer-vision","autosweep","object-generation","arxiv:2005.13312"]},{"id":998,"created_on":"2020-05-28 03:28:11","title":"ML Cheatsheets","description":"Set of illustrated Deep Learning cheatsheets covering the content of the CS 230 class","tags":["tutorial","machine-learning","guides","cheatsheets"]},{"id":999,"created_on":"2020-05-28 03:32:05","title":"MediaPipe","description":"Simplest way for researchers and developers to build world-class ML solutions and applications for mobile, edge, cloud and the web. ","tags":["code","library","3d","computer-vision","face-detection","object-detection","segmentation","hand-tracking","mediapipe"]},{"id":1000,"created_on":"2020-05-28 03:33:52","title":"CMU LTI Low Resource NLP Bootcamp 2020","description":"A low-resource natural language and speech processing bootcamp held by the Carnegie Mellon University Language Technologies Institute in May 2020.","tags":["code","course","tutorial","video","natural-language-processing","low-resource"]},{"id":1001,"created_on":"2020-05-28 03:37:02","title":"TabNet : Attentive Interpretable Tabular Learning","description":"PyTorch implementation of TabNet paper.","tags":["article","code","paper","research","pytorch","attention","library","interpretability","tabular-data","tabnet","arxiv:1908.07442"]},{"id":1002,"created_on":"2020-05-28 06:14:12","title":"yolov5,yolov3,yolov4 -> tensorRT","description":"The project is the encapsulation of nvidia official yolo-tensorrt implementation. And you must have the trained yolo model(.weights) and .cfg file from the dark","tags":["code","library","tensorrt","yolov4","jetson-nano","yolo-v3","darknet","ubuntu","yolov4-tiny","yolov3-tiny","win10","l4t","jetson-nx","yolov5"]},{"id":1003,"created_on":"2020-05-28 15:51:48","title":"Exploratory Data Analysis using stack overflow data","description":"Data Visualization and simple EDA to produce insights for business insights using powerful graphing libraries like plotly.","tags":["article","code","research","data-science","exploratory-data-analysis"]},{"id":1004,"created_on":"2020-05-28 16:20:52","title":"Why initialization is important? ","description":"A small blog post explaining the importance of weight initialization in Neural Networks ","tags":["article","tutorial","deep-learning","machine-learning","weight-initialization","eigen-value","eigen-vectors"]},{"id":1005,"created_on":"2020-05-28 17:32:43","title":"Traffic Sign Detection","description":"Detecting traffic sign images using GSTRB dataset.","tags":["code","tutorial","python","scikit-learn","open-cv","template-matching"]},{"id":1007,"created_on":"2020-05-28 21:30:37","title":"Humour.ai : Language Model that can crack Jokes","description":"A Language model that can make you laugh. Humour.ai model tries to\r\ncomplete a sentence in a humourous way given some input words. ","tags":["code","huggingface","gpt2","transformers","language-modeling","natural-language-processing"]},{"id":1008,"created_on":"2020-05-29 02:28:53","title":"face mask detection ","description":"detects whether a person wearing a mask or not","tags":["code","research","tutorial","video","css","flask","html","python","tensorflow","deep-learning","library","computer-vision","transfer-learning"]},{"id":1009,"created_on":"2020-05-29 02:47:06","title":"Train ALBERT for NLP with TensorFlow on Amazon SageMaker","description":"To train BERT in 1 hour, we efficiently scaled out to 2,048 NVIDIA V100 GPUs by improving the underlying infrastructure, network, and ML framework. ","tags":["article","code","tutorial","aws","tensorflow","attention","bert","transformers","training","natural-language-processing","sagemaker","albert"]},{"id":1010,"created_on":"2020-05-29 02:51:39","title":"GPT-3: Language Models are Few-Shot Learners","description":"We show that scaling up language models greatly improves task-agnostic, few-shot performance, sometimes even reaching competitiveness with prior SOTA.","tags":["article","code","research","tutorial","gpt","transformers","language-modeling","natural-language-processing","gpt-3"]},{"id":1011,"created_on":"2020-05-29 02:57:44","title":"ML in Production - Deployment Series","description":"A multi-part blog series on deploying machine learning models in an automated, reproducible, and auditable manner.","tags":["article","tutorial","production","guide"]},{"id":1012,"created_on":"2020-05-29 03:03:25","title":"How We Scaled Bert To Serve 1+ Billion Daily Requests on CPUs","description":"The nitty-gritty optimizations needed to get our Bert PyTorch models from our labs to productio.","tags":["article","tutorial","pytorch","attention","bert","transformers","natural-language-processing","production","cpu","efficiency","roblox"]},{"id":1013,"created_on":"2020-05-29 03:06:41","title":"Guided Uncertainty-Aware Policy Optimization","description":"Combining learning and model-based strategies for sample-efficient policy learning.","tags":["paper","research","video","reinforcement-learning","robotics","uncertainty","policy-optimization","arxiv:2005.10872 "]},{"id":1018,"created_on":"2020-05-29 08:09:04","title":"GOTURN-PyTorch","description":"PyTorch implementation of \"Learning to Track at 100 FPS with Deep Regression Networks\"","tags":["code","computer-vision","object-tracking"]},{"id":1019,"created_on":"2020-05-29 08:14:05","title":"Visual Object Tracking using Adaptive Correlation Filters","description":"This article gives step by step tutorial with code on understanding MOSSE tracking algorithm","tags":["article","tutorial","computer-vision","object-tracking"]},{"id":1020,"created_on":"2020-05-29 09:54:04","title":"Applying Modern Best Practices to Autoencoders","description":"This project applies best modern practices found in other areas of image research to autoencoders. Comparing models from other areas of image research.","tags":["article","code","research","autoencoders","computer-vision","dimensionality-reduction","image-classification","image-clustering","image-compression"]},{"id":1021,"created_on":"2020-05-29 10:33:26","title":"Sentiment analysis ","description":"Sentiment analysis by combining three dataset amazon,yelp, IMDb reviews to train our,model to classify if a comment is negative or positive denoted by 0 and 1.","tags":["code","tutorial","natural-language-processing"]},{"id":1022,"created_on":"2020-05-29 13:27:20","title":"The designer - gpt2 bot that talks about UX Design","description":"This twitter profile spits out thoughts on design and development. Trained with hundreds of Books on UX design and Front end development, it has opinions.","tags":["article","gpt2","transformers","natural-language-processing","npl"]},{"id":1023,"created_on":"2020-05-29 13:57:22","title":"Gradient Descent  Algorithm","description":"This is a linear regression Machine Learning model based on the \"chirps dataset\" which has 'X' variable as number of chirps by a cricket and 'Y' as temperature.","tags":["article","code","linear-regression","regression","gradient-boosting"]},{"id":1024,"created_on":"2020-05-29 14:15:30","title":"Sentiment Classification for UtaPass & KKBOX Reviews","description":"Text classification for reviews of UtaPass & KKBOX using different deep learning models.","tags":["code","tutorial","deep-learning","machine-learning","natural-language-processing","text-classification"]},{"id":1025,"created_on":"2020-05-29 14:18:59","title":"Forex Prediction","description":"Using neural networks to predict movement of forex direction.","tags":["code","tutorial","deep-learning","machine-learning","finance","natural-language-processing","forex"]},{"id":1026,"created_on":"2020-05-29 14:24:07","title":"Lyrics-Based Music Genre Classifier","description":"Classify the genre (Rock, Pop, Hip-Hop, Not Available, Metal, Other, Country, Jazz, Electronic, R&B, Indie, Folk) of the song by its lyrics.","tags":["code","tutorial","deep-learning","machine-learning","natural-language-processing","text-classification"]},{"id":1027,"created_on":"2020-05-29 14:30:17","title":"Don't Touch Your Face!","description":"Using machine learning to detect when you touch your face, to keep yourself and your surroundings safe of coronavirus.","tags":["code","tutorial","tensorflow-js","transfer-learning","covid19"]},{"id":1028,"created_on":"2020-05-29 14:39:16","title":"ARBML","description":"Implementation of many Arabic NLP and ML projects. Providing real time experience using many interfaces like web, command line and notebooks.","tags":["code","tutorial","library","natural-language-processing"]},{"id":1029,"created_on":"2020-05-29 14:44:27","title":"Notebooks","description":"Machine learning notebooks in different subjects optimized to run in google collaboratory","tags":["code","machine-learning"]},{"id":1030,"created_on":"2020-05-29 14:46:23","title":"AttentioNN","description":"All about attention in neural networks. Soft attention, attention maps, local and global attention and multi-head attention.","tags":["code","tensorflow","attention","multi-head-attention","attention-maps"]},{"id":1031,"created_on":"2020-05-29 14:48:02","title":"Swift4TF","description":"A set of notebooks explaining swift for tensorflow optimized to run in Google Collaboratory.","tags":["code","tutorial","swift","tensorflow"]},{"id":1032,"created_on":"2020-05-29 14:50:28","title":"Pix2Pix with Tf-js","description":"Implementation of web friendly ML models using TensorFlow.js. pix2pix, face segmentation, fast style transfer and many more ...","tags":["tutorial","tensorflow","tensorflow-js","generative-adversarial-networks","computer-vision","segmentation","pix2pix"]},{"id":1035,"created_on":"2020-05-29 16:11:11","title":"Zero Shot Topic Classification","description":"Bart with a classification head trained on MNLI.","tags":["article","code","notebook","paper","research","tutorial","natural-language-processing","topic-modeling","zero-shot-learning","bart","text-processing","topic-classification","mnli","arxiv:1909.00161"]},{"id":1036,"created_on":"2020-05-29 18:22:08","title":"KeraStroke","description":"Experimental generalization-improvement techniques for Keras","tags":["article","code","keras","python"]},{"id":1037,"created_on":"2020-05-29 18:24:23","title":"Satyrn","description":"A command-line based alternative to Jupyter notebooks. Built around backend multithreading and will eventually have GUI implemented.","tags":["code","notebook","python","library","jupyter","command-line","cli"]},{"id":1040,"created_on":"2020-05-29 20:03:45","title":"Empirical study of Face Hallucination using limited data","description":"Deep Generative models that leverage cycle consistent adversarial networks to perform super-resolution on limited set of unaligned face images.","tags":["code","generative-adversarial-networks","cycle-consistent-adversarial-networks","image-superresolution","face-hallucination"]},{"id":1043,"created_on":"2020-05-30 01:29:01","title":"NBoost","description":"\u26a1 NBoost is a scalable, search-engine-boosting platform for developing and deploying state-of-the-art models to improve the relevance of search results.","tags":["code","library","search","elastic-search","nboost"]},{"id":1044,"created_on":"2020-05-30 01:33:10","title":"Stop Installing Tensorflow using pip for performance sake!","description":"Stop installing Tensorflow using pip! Use conda instead.","tags":["article","tutorial","tensorflow","performance","pip","conda"]},{"id":1045,"created_on":"2020-05-30 01:35:24","title":"Illustrated Guide to Transformers: Step by Step Explanation","description":"In this post, we\u2019ll focus on the one paper that started it all, \u201cAttention is all you need\u201d.","tags":["article","tutorial","video","attention","transformers","natural-language-processing","illustrated"]},{"id":1046,"created_on":"2020-05-30 01:39:25","title":"Illustrated Guide to Transformers","description":"A component by component breakdown analysis.","tags":["article","code","tutorial","transformers","natural-language-processing","illustrated"]},{"id":1047,"created_on":"2020-05-30 01:47:46","title":"Sparse Neural Networks (2\/N): Understanding GPU Performance","description":"NVIDIA Ampere A100 introduces fine-grained structured sparsity.","tags":["article","tutorial","convolutional-neural-networks","gpu","sparsity","sparse-neural-networks"]},{"id":1049,"created_on":"2020-05-30 03:51:25","title":"Prediction of Eye State Using KNN algorithm","description":"Prediction of Eye State Using KNN algorithm with Walk-forward validation.","tags":["code","tutorial","scikit-learn","machine-learning","k-nearest-neighbors","data-science","walk-forward-validation"]},{"id":1052,"created_on":"2020-05-30 06:10:34","title":"Simple Python API for ML project","description":"A simple script to create machine learning API in python.","tags":["api","code","flask","python","machine-learning","library"]},{"id":1053,"created_on":"2020-05-30 06:56:58","title":"Kick Assist","description":"An Interactive Dashboard enabling users to make data-driven decisions about their Kickstarter campaign to maximize the probability  for successful funding","tags":["code","flask","machine-learning","random-forests","library","web-services","feature-engineering","feature-importance","interpretability","decision-tree","xgboost","scraping","data-science","hypothesis-testing","dahboard"]},{"id":1054,"created_on":"2020-05-30 07:48:21","title":"Setup datascience project with Google Colab and Vscode-server","description":"Connect Google Colab and Vscode-server","tags":["article","tutorial","data-science"]},{"id":1055,"created_on":"2020-05-30 09:02:27","title":"Automatic-Face-Detection-Annotation-and-Preprocessing","description":"Automatically detect , annotate , collect the coordinates , convert to csv and to tfrecord","tags":["code","tutorial","tensorflow","computer-vision","face-detection"]},{"id":1056,"created_on":"2020-05-30 09:08:31","title":"Font Recognition Using Deep Learning - DeepFont ( Adobe )","description":"DeepFont Paper is a technique created by Adobe.Inc to detect font from images using deep learning . They published their work as a paper for the public .","tags":["article","code","paper","research","tutorial","library","computer-vision","optical-character-recognition","adobe","arxiv:1507.03196"]},{"id":1058,"created_on":"2020-05-30 09:43:39","title":"SmartFeed.ai","description":"NLP Based Article Recommendation System ","tags":["code","flask","python","scikit-learn","latent-dirichlet-allocation","library","natural-language-processing","recommendation-systems"]},{"id":1059,"created_on":"2020-05-30 10:50:55","title":"Wheat Detection \ud83c\udf3e","description":"This is a project for detecting and creating bounding box of wheat heads \ud83c\udf3e.","tags":["article","code","deep-learning","machine-learning","computer-vision","object-detection"]},{"id":1064,"created_on":"2020-05-30 16:10:23","title":"One Shot Art","description":"Implemented one shot learning approach to classify paintings according to artists.","tags":["code","tutorial","art","few-shot-learning","one-shot-learning"]},{"id":1067,"created_on":"2020-05-30 18:12:51","title":"COVID-19 EDA","description":"Performed exploratory analysis on COVID-19 data made\r\navailable by John Hopkins University. Wrote a notebook to explain SIR model and based the pandemic on same.","tags":["code","covid-19","eda"]},{"id":1068,"created_on":"2020-05-30 18:20:40","title":"Effects of News Sentiments on Stock Predictions","description":"Project is based on the Natural Language Processing technique called Sentiment Analysis. Stock market and news related to it as the subject of analysis.","tags":["code","tutorial","lstm","natural-language-processing","time-series","time-series-forecasting","stocks"]},{"id":1069,"created_on":"2020-05-30 20:04:49","title":"NLP News Category","description":"The objective of this repository is to create a NLP bot for when you give the robot the headline of the news and a short description it will return the genre.","tags":["code","tutorial","machine-learning","natural-language-processing"]},{"id":1070,"created_on":"2020-05-30 20:06:48","title":"AI Debate Master","description":"Created and deployed a bot made to debate with a human on any\r\ngiven topic. Employed a Doc2Vec model using Gensim library in Python","tags":["code","tutorial","natural-language-processing","sentiment-analysis","conversational-ai","doc2vec"]},{"id":1071,"created_on":"2020-05-30 21:58:36","title":"Music Source Separation in the Waveform Domain","description":"We provide an implementation of Demucs and Conv-Tasnet for music source separation on the MusDB dataset. They can separate drums, bass and vocals from the rest ","tags":["code","paper","research","music"]},{"id":1072,"created_on":"2020-05-30 22:20:26","title":"Novice-AI Music Co-Creation via AI-Steering Tools","description":"Collaborative Convolutional Counterpoint","tags":["code","paper","research","library","music","audio","music-generation"]},{"id":1075,"created_on":"2020-05-31 04:44:27","title":"Zero-Shot Learning for Text Classification","description":"A visual summary of \u201cTrain Once, Test Anywhere\u201d paper for zero-shot text classification","tags":["article","tutorial","natural-language-processing","zero-shot-learning"]},{"id":1076,"created_on":"2020-05-31 04:49:04","title":"Adversial Auto Encoder (PyTorch)","description":"Adversial autoencoder, to generate mnist digit.","tags":["code","tutorial","pytorch","autoencoders","adversarial-learning","mnist"]},{"id":1078,"created_on":"2020-05-31 05:04:44","title":"Building Footprint Extraction","description":"The project retrieves satellite imagery from Google and performs building footprint extraction using a U-Net. ","tags":["code","tutorial","keras","tensorflow","deep-learning","computer-vision","gis","remote-sensing"]},{"id":1079,"created_on":"2020-05-31 05:20:29","title":"Book on Optimization Models and Applications","description":"Freely available book on optimisation methods mainly about constrained optimisation problems","tags":["article","tutorial","optimization","constrained-optimization"]},{"id":1080,"created_on":"2020-05-31 05:23:23","title":"Dash DETR Detection App","description":"A User Interface for DETR built with Dash. 100% Python.","tags":["code","tutorial","computer-vision","object-detection","segmentation","interactive","plotly","dash","panoptic-segmentation","detr","end-to-end"]},{"id":1081,"created_on":"2020-05-31 05:28:53","title":"AI Basketball Analysis","description":"\ud83c\udfc0   AI web app and API to analyze basketball shots and shooting pose. ","tags":["api","code","tutorial","convolutional-neural-networks","sports","computer-vision","pose-estimation","application","r-cnn","coco","basketball","shot-analysis","pose-analysis","open-pose","faster-r-cnn"]},{"id":1082,"created_on":"2020-05-31 07:49:31","title":"Ideal Restaurant Spot Finder","description":"To find ideal spots in the city where food retail stores can be put up, aiming at the demographic, thereby helping the owners of the outlets to earn profits.","tags":["code","notebook","paper","research","matplotlib","machine-learning","clustering","geospatial","data-science","geopy","chloropleth","folium","one-hot-encoding"]},{"id":1083,"created_on":"2020-05-31 08:20:06","title":"Reverse Image Search","description":"Have you ever wondered how google image search works or How amazon can retrieve products similar to the image that we upload in the app\/site? To achieve this ta","tags":["article","code","deep-learning","machine-learning","computer-vision","image-categorization"]},{"id":1084,"created_on":"2020-05-31 08:22:45","title":"Beginner\u2019s guide to Machine Learning Model Deployment","description":"Are you a beginner in the field of machine learning and wondering how to bring your project to live. I'm was in the same situation when I started learning ML. M","tags":["api","article","code","tutorial","flask","machine-learning","production","deployment","beginner"]},{"id":1085,"created_on":"2020-05-31 09:56:32","title":"Book on Convex Optimization | Cambridge University Press ","description":"This book by Boyd and Vandenberghe. Copyright in this book is held by Cambridge University Press, who have kindly agreed to keep the book available on web.","tags":["article","research","convex-optimization","cambridge"]},{"id":1086,"created_on":"2020-05-31 10:05:24","title":"House Prices: Advanced Regression Techniques","description":"This project aims to predict the House Prices in Boston, given various features describing the house.","tags":["code","decision-trees","multinomial-regression","random-forests","regression","support-vector-machines","decision-tree","ada-boost"]},{"id":1093,"created_on":"2020-05-31 17:39:22","title":"MedicalZoo PyTorch","description":"A pytorch-based deep learning framework for multi-modal 2D\/3D medical image segmentation","tags":["article","code","notebook","research","tutorial","pytorch","deep-learning","machine-learning","library","computer-vision","segmentation","medical-image-segmentation","volumetric-segmentation","medical-image-proccessing","reproducible-medical-imaging"]},{"id":1094,"created_on":"2020-05-31 19:11:28","title":"Paraphrase Any Question with T5  (Text-To-Text  Transformer)","description":"Given a question, generate paraphrased versions of the question with T5 transformer. Pretrained model and training script provided.","tags":["article","code","research","tutorial","huggingface","pytorch","transformers","natural-language-processing","question-generation","text-generation","t5","paraphrasing"]},{"id":1095,"created_on":"2020-05-31 19:12:26","title":"Bitcoin Prediction","description":"Predict bitcoin values using Seq2Seq","tags":["code","research","bitcoin-prediction"]},{"id":1099,"created_on":"2020-06-01 02:53:50","title":"Supervised Contrastive Learning","description":"Implements the ideas presented in Supervised Contrastive Learning (https:\/\/arxiv.org\/pdf\/2004.11362v1.pdf) by Khosla et al. ","tags":["article","code","paper","research","tutorial","tensorflow","deep-learning","representation-learning","contrastive-learning","supervised-contrastive-learning","arxiv:2004.11362"]},{"id":1100,"created_on":"2020-06-01 05:56:43","title":"Movie Recommendation System","description":"This is a web app which recommends movies based on their plots found on IMDb.","tags":["code","tutorial","flask","python","natural-language-processing","recommendation-systems","heroku"]},{"id":1104,"created_on":"2020-06-01 10:02:09","title":"Convnet Galaxy Morphology Classifier","description":"Classify galaxies from Hubble Tuning Fork using Convnet. ","tags":["code","research","tutorial","tensorflow","convolutional-neural-networks","deep-learning","astronomy","computer-vision","image-classification"]},{"id":1105,"created_on":"2020-06-01 10:43:22","title":"torchdata","description":"Equip PyTorch's Dataset with map, cache etc. (like tf.data)","tags":["code","dataset","pytorch","tensorflow","library","data","cache","map","filter","tensorflow-data"]},{"id":1107,"created_on":"2020-06-01 14:52:29","title":"2nd Place Solution to Ship Identification Hackathon ","description":"The problem statement was to identify the type of ship from photos taken from the survey boats. The hackathon was organized by Analytics Vidhya.","tags":["code","research","fastai","pytorch","computer-vision","image-classification"]},{"id":1110,"created_on":"2020-06-01 16:44:55","title":"Deep learning Architecture: AlexNet","description":"Explaining network architecture for AlexNet","tags":["article","code","tutorial","tensorflow","deep-learning","computer-vision"]},{"id":1111,"created_on":"2020-06-01 18:13:26","title":"Movement Pruning: Adaptive Sparsity by Fine-Tuning","description":"We propose the use of movement pruning, a simple, deterministic first-order weight pruning method that is more adaptive to pretrained model fine-tuning.","tags":["code","paper","research","tutorial","huggingface","attention","bert","transformers","fine-tuning","model-compression","natural-language-processing","pruning","sparsity","movement-pruning","adaptive-sparsity","arxiv:2005.07683"]},{"id":1112,"created_on":"2020-06-01 18:57:31","title":"Document search engine","description":"NLP based search engine for single page pdf files.","tags":["code","tutorial","tensorflow","natural-language-processing","search","document-search"]},{"id":1113,"created_on":"2020-06-01 19:47:17","title":"VAE Explorer","description":"A tool that can be used to explore pre-trained tensorflow VAE models and interpolate between data points. Trained on MNIST and Fashion-MNIST.","tags":["code","tensorflow","tensorflow-js","autoencoders","variational-autoencoders","interactive"]},{"id":1114,"created_on":"2020-06-01 21:00:24","title":"Reinforcement Learning in JAX","description":"Implementation of interesting Deep Reinforcement Learning Algorithms using JAX based libraries (flax, haiku and rlax) As of now tasks come from OpenAI gym","tags":["code","tutorial","jax","reinforcement-learning"]},{"id":1115,"created_on":"2020-06-01 21:07:53","title":"Softbot design with WANNS","description":"Soft robots are robots built from highly compliant materials, similar to those found in living organisms. This project explored CPPNs and WANNs to design them","tags":["article","code","research","python","reinforcement-learning","numpy","neuroevolution","alife"]},{"id":1117,"created_on":"2020-06-02 02:49:29","title":"Knowledge Distillation with Keras","description":"Discusses the basics of Knowledge Distillation for Neural Nets. ","tags":["article","code","tutorial","deep-learning","knowledge-distillation","model-compression"]},{"id":1118,"created_on":"2020-06-02 03:03:07","title":"Knowledge Distillation","description":"Distilling dark knowledge of neural networks into smaller student networks. ","tags":["article","tutorial","deep-learning","knowledge-distillation","model-compression"]},{"id":1119,"created_on":"2020-06-02 04:54:48","title":"Creating Professional Data Visualzations","description":"Learn how to make professional looking charts, the likes of New York Times, using Python and Altair.","tags":["article","tutorial","visualization","altair"]},{"id":1121,"created_on":"2020-06-02 05:07:17","title":"Motion2Vec","description":"Semi-Supervised Representation Learning from Surgical Videos","tags":["paper","research","tutorial","video","health","computer-vision","motion-estimation","representation-learning","semi-supervised-learning","surgery"]},{"id":1122,"created_on":"2020-06-02 05:10:18","title":"Machine Learning: Tests and Production","description":"Best practices for testing ML-based systems.","tags":["article","tutorial","e2e-tests","production","unit-tests","testing","systems-design","checklist","tests"]},{"id":1124,"created_on":"2020-06-02 07:57:11","title":"Spark Fortress Discrimination","description":"Testing whether a company \"Spark Fortress\" is discriminating against some of its employees on ethnicity or gender basis.","tags":["code","data-science","hypothesis-testing","explanatory-data-analysis"]},{"id":1125,"created_on":"2020-06-02 08:18:13","title":"Money Ball","description":"Applying data wrangling and exploratory data analysis to baseball data. Finding if Moneyball worked for Oakland A's or not.","tags":["code","python","exploratory-data-analysis","data-wrangling"]},{"id":1126,"created_on":"2020-06-02 08:23:45","title":"Face Recognition","description":"Face Recognition using face_recognition library which used dlib models to identify faces and generate encoding for each face, then using ML model to classify f ","tags":["code","dlib","python","machine-learning"]},{"id":1127,"created_on":"2020-06-02 08:31:03","title":"Spam Mail Classifier","description":"Spam Mail Classifier based on Apache Spam Assassin dataset and part of Enron dataset Using ML and DL\r\n","tags":["code","fastai","deep-learning","machine-learning"]},{"id":1128,"created_on":"2020-06-02 08:33:36","title":"Arabic Movie Genres Multi-Label Classifier","description":"Using CNNs to predict the genres of Arabic movies based on their posters.","tags":["code","convolutional-neural-networks","deep-learning","multi-label"]},{"id":1130,"created_on":"2020-06-02 11:51:38","title":"Generate True or False questions from any content","description":"Automatically generate \u201cTrue or False\u201d questions like the ones you see in school textbooks using  OpenAI GPT2, Sentence BERT, and Berkley parser","tags":["article","code","research","tutorial","attention","bert","gpt2","transformers","constituency-parsing","natural-language-processing","question-generation","text-generation"]},{"id":1131,"created_on":"2020-06-02 13:41:32","title":"Sized Fill-in-the-blank or Multi Mask filling with RoBERTa","description":"Sized fill-in-the-blank or conditional text filling is the idea of filling missing words of a sentence with the most probable choice of words.","tags":["article","code","tutorial","huggingface","attention","bert","transformers","language-modeling","natural-language-processing","slot-filling","roberta","mask-filling","multi-mask-filling"]},{"id":1132,"created_on":"2020-06-02 14:56:10","title":"T5 for Sentiment Span Extraction","description":"Exploring how T5 works and applying it for sentiment span extraction.","tags":["code","notebook","tutorial","video","transformers","natural-language-processing","sentiment-analysis","t5"]},{"id":1133,"created_on":"2020-06-02 14:58:58","title":"Getting Started with Time Series analysis using Pandas","description":"An introductory guide to get started with the Time Series datasets in Python","tags":["article","code","tutorial","time-series","pandas","kaggle"]},{"id":1134,"created_on":"2020-06-02 15:01:17","title":"Artificial Neural Networks Back Then","description":"Development of neural networks over history.","tags":["article","code","notebook","tutorial","neural-networks","multilayer-perceptrons","history","perceptron"]},{"id":1135,"created_on":"2020-06-02 15:06:34","title":"Melanoma Detection with Pytorch","description":"In this video, I show you how you can build a deep learning model to detect melanoma with a very high accuracy.","tags":["code","tutorial","video","pytorch","health","computer-vision","resnet","melanoma"]},{"id":1136,"created_on":"2020-06-02 17:12:36","title":"Integrated Gradients for Interpretability","description":"Integrated Gradients is a technique for attributing a classification model's prediction to its input features. ","tags":["paper","research","tutorial","convolutional-neural-networks","deep-learning","interpretability","gradients","arxiv:1703.01365"]},{"id":1139,"created_on":"2020-06-02 19:53:37","title":"RoBERTa \u2192 Longformer: Build a \"Long\" Version of Pretrained Models","description":"This notebook replicates the procedure descriped in the Longformer paper to train a Longformer model starting from the RoBERTa checkpoint. ","tags":["code","notebook","paper","research","huggingface","attention","bert","transformers","natural-language-processing","pretraining","roberta","longformer","arxiv:2004.05150"]},{"id":1145,"created_on":"2020-06-03 01:51:14","title":"Learning Dexterity End-to-End","description":"We trained a human-like robot hand to manipulate physical objects with unprecedented dexterity.","tags":["article","tutorial","reinforcement-learning","robotics","wandb","openai","dexterity"]},{"id":1146,"created_on":"2020-06-03 01:54:43","title":"Physics \u2229 ML","description":"A a virtual hub at the interface of theoretical physics and deep learning.","tags":["research","machine-learning","physics","journal"]},{"id":1148,"created_on":"2020-06-03 02:28:20","title":"A Practical guide to building a conversational chatbot","description":"Building a Chatbot from scratch using Keras and NLTK library for a customer service company","tags":["article","code","tutorial","keras","tensorflow","library","natural-language-processing","conversational-ai"]},{"id":1150,"created_on":"2020-06-03 07:17:30","title":"Practical Sampling Distribution and Central limit theorem ","description":"Whenever it comes to Statistical Data Analysis or Exploratory Data Analysis, we have to go through the distribution of the data. So while working on the very big datasets mostly we apply our analysis on a sample, not the whole population which may lead to certain variations between the sample analysis and population analysis. This approximation introduces us with the Sampling Distribution","tags":["article","code","notebook","tutorial","library","data-analysis","data-science","sampling-distribution","central-limit-theorem","data-engineers"]},{"id":1151,"created_on":"2020-06-03 07:25:27","title":"Web Mining and Information theory","description":"Mining the Web and playing with Natural Language processing. Implementing Information retrieval System tasks. Going towards the NLP and Performing Machine Learning algorithms. Through these codes and problems, I have understood the information retrieval process of any search engine. These are very useful problems towards sentiment analysis.","tags":["code","information-extraction","information-retrieval","natural-language-inference","natural-language-processing","natural-language-understanding","web-mining"]},{"id":1152,"created_on":"2020-06-03 10:43:34","title":"Cardiovascular Disease EDA ( Detailed )","description":"To predict the presence or absence of cardiovascular disease (CVD) using the patient examination results.","tags":["code","research","tutorial","python","health","data-science","exploratory-data-analysis","eda","cardiovascular"]},{"id":1154,"created_on":"2020-06-03 14:55:04","title":"Data Scientist: The Dirtiest Job of the 21st Century","description":"I am a data scientist\u2026 \r\nI don\u2019t find my job sexy. \r\nI am 40% a vacuum, another 40% a janitor. \r\nAnd the last 20%\u2026 A fortune-teller. ","tags":["article","tutorial","careers","jobs"]},{"id":1155,"created_on":"2020-06-03 15:22:11","title":"GaborNet","description":"Modified network architecture that focuses on improving convergence and reducing training complexity.","tags":["code","paper","research","python","pytorch","convolutional-neural-networks","library","computer-vision","arxiv:1904.13204"]},{"id":1159,"created_on":"2020-06-03 18:17:01","title":"Learning To Classify Images Without Labels","description":"A two-step approach where feature learning and clustering are decoupled.","tags":["code","paper","research","tutorial","clustering","computer-vision","image-classification","self-supervised-learning","unsupervised-learning","arxiv:2005.12320"]},{"id":1162,"created_on":"2020-06-03 22:05:30","title":"Deep Q-Network on Space Invaders. ","description":"This is a PyTorch implementation of a Deep Q-Network agent trained to play the Atari 2600 game of Space Invaders.","tags":["article","code","paper","research","tutorial","pytorch","deep-q-networks","q-learning","reinforcement-learning","arxiv:1312.5602"]},{"id":1165,"created_on":"2020-06-04 03:53:43","title":"YOLOv4","description":"A TensorFlow 2.0 implementation of YOLOv4: Optimal Speed and Accuracy of Object Detection.","tags":["code","tutorial","tensorflow","computer-vision","object-detection","yolo","yolo-v4"]},{"id":1166,"created_on":"2020-06-04 03:55:53","title":"Acme: A Research Framework for Reinforcement Learning","description":"A library of reinforcement learning components and agents.","tags":["code","paper","research","library","reinforcement-learning","acme","deepmind","arxiv:2006.00979"]},{"id":1167,"created_on":"2020-06-04 03:58:21","title":"From Pre-trained Word Embeddings to Pre-trained Language Models","description":"from Static Word Embedding to Dynamic (Contextualized) Word Embedding.","tags":["article","tutorial","attention","bert","transformers","contextualized-embeddings","embeddings","language-modeling","natural-language-processing","word-embeddings","pretraining"]},{"id":1168,"created_on":"2020-06-04 04:02:16","title":"Integrated Gradients","description":"This tutorial walks you through an implementation of Integrated Gradients, an ML interpretabilit technique described in Axiomatic Attribution for Deep Networks.","tags":["article","code","notebook","paper","research","interpretability","gradients","integrated-gradients","arxiv:1703.01365"]},{"id":1169,"created_on":"2020-06-04 04:58:10","title":"Regression Testing","description":"This project leverages machine learning techniques to clean, analyze, and make predictions on any inputted csv dataset.","tags":["code","flask","library","plotly","regression-tests"]},{"id":1171,"created_on":"2020-06-04 06:27:58","title":"New York Yellow Cab Fares","description":"Created a predictor using classification algorithms to predict the fare of a new york taxi cab.","tags":["code","research","transportation"]},{"id":1172,"created_on":"2020-06-04 07:01:13","title":"Converting images to TF Records","description":"A Colab Notebook showing how to convert an image dataset (for classification) to TF Records and more.","tags":["code","notebook","tutorial","tensorflow","computer-vision","images","tf-records"]},{"id":1173,"created_on":"2020-06-04 07:21:12","title":"Rocopicker","description":"Practice for Classifying  the game character by using CNN\r\n","tags":["article","code","notebook","tutorial","tensorflow","tensorflow-js","convolutional-neural-networks","transfer-learning"]},{"id":1176,"created_on":"2020-06-04 09:10:07","title":"doc2vec Paragraph Embeddings for Text Classification","description":"Text classification model which uses gensim's Doc2Vec for generating paragraph embeddings and scikit-learn Logistic Regression for classification. ","tags":["code","scikit-learn","document-embeddings","embeddings","natural-language-processing","sentiment-analysis","text-classification","gensim","doc2vec"]},{"id":1178,"created_on":"2020-06-04 12:19:52","title":"Machine Learning with Fastai","description":"The fastai library is based on research into deep learning best practices undertaken at fast.ai, and includes support for Vision, Text, tabular and Collab","tags":["code","tutorial","python","pytorch","deep-learning","computer-vision"]},{"id":1180,"created_on":"2020-06-04 14:58:19","title":"The Transformer \u2026 \u201cExplained\u201d?","description":"An intuitive explanation of the Transformer by motivating it through the lens of CNNs, RNNs, etc.","tags":["article","tutorial","convolutional-neural-networks","recurrent-neural-networks","transformers","natural-language-processing"]},{"id":1181,"created_on":"2020-06-04 16:28:24","title":"TensorflowTTS: Real-Time SOTA Speech Synthesis for Tensorflow 2.0","description":"TensorflowTTS provides real-time state-of-the-art speech synthesis architectures such as Tacotron2, Melgan, FastSpeech.","tags":["code","tensorflow","natural-language-processing","speech","speech-synthesis","text-to-speech"]},{"id":1182,"created_on":"2020-06-04 17:40:27","title":"A beginner\u2019s guide to understanding the AI buzz words ","description":"A beginner\u2019s guide to understanding the buzz words -AI, ML, NLP, Deep Learning, Computer Vision, and Data Science","tags":["article","tutorial","machine-learning","starter-guide"]},{"id":1184,"created_on":"2020-06-04 21:19:30","title":"Bank Marketing Campaign","description":"Predict if the client will subscribe to a term deposit based on the analysis of the marketing campaigns the bank performed.","tags":["code","tutorial","library","#marketing#campaign#bank"]},{"id":1185,"created_on":"2020-06-04 22:36:31","title":"PyTorch Transformers Tutorials","description":"A set of annotated Jupyter notebooks, that give user a template to fine-tune transformers model to downstream NLP tasks such as classification, NER etc. ","tags":["code","tutorial","huggingface","pytorch","transformers","named-entity-recognition","natural-language-processing","question-answering","text-classification","text-summarization","wandb","multi-class","multi-label"]},{"id":1189,"created_on":"2020-06-05 03:22:21","title":"DogandCatBreed Classifier","description":"Model can to learn to differentiate between these 37 distinct categories","tags":["article","code","fastai","pytorch"]},{"id":1190,"created_on":"2020-06-05 04:19:45","title":"Image Augmentations for GAN Training","description":"We systematically study the effectiveness of various existing augmentation techniques for GAN training in a variety of settings. ","tags":["paper","research","generative-adversarial-networks","data-augmentation","image-augmentation","arxiv:2006.02595"]},{"id":1191,"created_on":"2020-06-05 04:23:23","title":"Syntactic Search by Example","description":"We present a system that allows a user to search a large linguistically annotated corpus using syntactic patterns over dependency graphs. ","tags":["paper","research","search","allenai","syntactic-patterns","spike","arxiv:2006.03010"]},{"id":1192,"created_on":"2020-06-05 04:28:52","title":"BERT Summarization","description":"This folder contains colab notebooks that guide you through the summarization by BERT and GPT-2 to play with your data.","tags":["code","tutorial","attention","bert","transformers","natural-language-processing","summarization"]},{"id":1193,"created_on":"2020-06-05 04:32:06","title":"DeepMind x UCL |  Intro to Machine Learning & AI","description":"In this lecture series, research scientists from leading AI research lab, DeepMind, deliver 12 lectures on an exciting selection of topics in Deep Learning.","tags":["course","tutorial","video","machine-learning","deepmind","ucl"]},{"id":1194,"created_on":"2020-06-05 04:35:14","title":"Divide Hugging Face Transformers Training Time By 2","description":"Reducing training time helps to iterate more in a fixed budget time and thus achieve better results.","tags":["article","code","tutorial","huggingface","transformers","natural-language-processing","optimization","mixed-precision","batch-sizing"]},{"id":1197,"created_on":"2020-06-05 14:16:47","title":"Scale Invariant Feature Transform For Cirebon Mask Classification","description":"This is about my project in Image Classification focus to Pattern Recognition about Cirebon Mask Classification in MATLAB. ","tags":["code","machine-learning","random-forests","support-vector-machines","pattern-recognition","k-nearest-neighbors","decision-tree","matlab","cirebon-mask"]},{"id":1198,"created_on":"2020-06-05 14:41:45","title":"Differential Machine Learning","description":"Extends supervised learning, with models trained on examples of not only inputs and labels, but also differentials of labels to inputs. ","tags":["code","notebook","paper","research","tutorial","finance","differential-machine-learning","risk-management","arxiv:2005.02347"]},{"id":1199,"created_on":"2020-06-05 15:39:56","title":"How NLP has evolved for Financial Sentiment Analysis","description":"Do we still need humans to read boring financial statements?","tags":["article","code","tutorial","finance","natural-language-processing"]},{"id":1202,"created_on":"2020-06-05 17:51:33","title":"The NLP Pandect - All NLP resources in one place","description":"The NLP Pandect was created to help you find almost anything related to Natural Language Processing that is available online.","tags":["code","tutorial","natural-language-processing"]},{"id":1203,"created_on":"2020-06-05 18:18:18","title":"Summary of \ud83e\udd17 Transformers Models","description":"A high-level summary of the differences between each model in HuggingFace's Transformer library.","tags":["article","tutorial","huggingface","transformers","natural-language-processing","summary"]},{"id":1204,"created_on":"2020-06-05 22:56:38","title":"Snaked: Classifying Snake Species using Images","description":"Proof of concept that it is possible to identify snake species and whether poisonous from photographs (PyTorch code\/model with Android app)","tags":["article","code","python","pytorch","convolutional-neural-networks","computer-vision"]},{"id":1205,"created_on":"2020-06-06 03:27:36","title":"Paper Explanation: Going deeper with Convolutions","description":"Blog post about 'Going Deeper with Convolutions' with its implementation in Tensorflow.","tags":["article","code","paper","research","tutorial","tensorflow","deep-learning","arxiv:1409.4842"]},{"id":1206,"created_on":"2020-06-06 04:45:00","title":"Data Understanding","description":"Identify relationship between the features in a dataset using Hypothesis testing - Chi-square, ANOVA, PearsonR","tags":["code","feature-importance","hypothesis-testing","anova","bi-variate-analysis","univariate-analysis","chi-square-test","pearsonr","inferential-statistics"]},{"id":1210,"created_on":"2020-06-06 15:00:04","title":"Cat vs Dog Classifier using Fast.ai ","description":"Cat vs Dog Classifier using Fast.ai for beginners","tags":["code","notebook","fastai","deep-learning"]},{"id":1211,"created_on":"2020-06-06 15:13:13","title":"Literate Lamp: Answering Question with Common Sense","description":"We study the problem of answering questions that require common sense to be answered using Transformer-based models and the ConceptNet knowledge base.","tags":["code","transformers","common-sense-reasoning","knowledge-base-question-answering","natural-language-processing","question-answering","qa"]},{"id":1215,"created_on":"2020-06-06 19:00:39","title":"Pytorch Faster RCNN","description":"Fine Tune Faster RCNN in pytorch for your task.","tags":["code","pytorch","convolutional-neural-networks","computer-vision","object-detection"]},{"id":1222,"created_on":"2020-06-07 04:34:58","title":"Paragraph Summarizer","description":"Uses the extractive way of summarizing the text by finding the score and ranking it.","tags":["code","flask","python","machine-learning","natural-language-processing"]},{"id":1223,"created_on":"2020-06-07 04:39:32","title":"Leafy: Plant Leaf Classifier","description":"The sequential model trained on images from the leafsnap.com","tags":["scikit-learn","tensorflow","tensorflow-js","computer-vision","image-classification"]},{"id":1225,"created_on":"2020-06-07 07:02:24","title":"Network Traffic Classification Using Time Related Features","description":"Classification of different types of network traffic according to their types.","tags":["code","python","machine-learning","cyber-security"]},{"id":1229,"created_on":"2020-06-07 12:00:33","title":"Pytorch-Tensor Operations","description":"Tensor-operations you can apply with PyTorch.","tags":["article","code","notebook","tutorial","pytorch","tensor-networks","operations"]},{"id":1230,"created_on":"2020-06-07 12:27:20","title":"Basic Tensorflow Serving Example","description":"Basic example of serving a Tensorflow CNN model for Hand Detection using Tensorflow Serving.","tags":["code","tutorial","tensorflow","computer-vision","object-detection","production","serving"]},{"id":1231,"created_on":"2020-06-07 14:25:40","title":"NYC property price predictor","description":"Web app that predicts the price of a NYC property based on a tuned regression model.","tags":["code","flask","scikit-learn","regression","library","real-estate"]},{"id":1235,"created_on":"2020-06-07 20:00:11","title":"NBA k-means","description":"Extraction of NBA statistics from \"basketball-reference.com\" to visualise them and detect trends and patterns. Clustering of the top players using KMeans.","tags":["code","tutorial","scikit-learn","k-means"]},{"id":1236,"created_on":"2020-06-07 21:03:31","title":"COVID-Q: A Dataset of 1,690 Questions about COVID-19","description":"This dataset consists of COVID-19 questions which have been annotated into a broad category (e.g. Transmission, Prevention) and a more specific class such that ","tags":["code","dataset","paper","research","attention","bert","transformers","library","few-shot-learning","natural-language-processing","question-answering","covid-19","triplet-loss","covid-q","knn-classification"]},{"id":1237,"created_on":"2020-06-08 03:43:45","title":"Keras notifications on Slack!","description":"Get slack notifications of your model's training progress when training with Keras (or tf.keras)","tags":["code","tutorial","keras","python","tensorflow","deep-learning","machine-learning","training","computer-vision","logging"]},{"id":1239,"created_on":"2020-06-08 07:05:15","title":"Zero-shot Text Classification With Generative Language Models","description":"An overview of a text generation approach to zero-shot text classification with GPT-2","tags":["article","tutorial","natural-language-processing","text-classification","text-generation","zero-shot-learning"]},{"id":1240,"created_on":"2020-06-08 08:21:02","title":"An Illustrated Proof of the No Free Lunch Theorem","description":"There is no universal learning algorithm that outperforms every other algorithm on every learning task.","tags":["article","tutorial","illustrated","no-free-lunch"]},{"id":1241,"created_on":"2020-06-08 08:25:01","title":"Funnel-Transformer: Filtering out Sequential Redundancy","description":"Funnel-Transformer is a self-attention model that gradually compresses the sequence of hidden states to a shorter one and hence reduces the computation cost.","tags":["code","paper","research","tutorial","pytorch","tensorflow","attention","self-attention","transformers","natural-language-processing","funnel-transformer","arxiv:2006.03236"]},{"id":1242,"created_on":"2020-06-08 08:31:17","title":"A Comprehensive Survey of Neural Architecture Search","description":"An overview of the characteristics of the earliest NAS algorithms, summarizing the problems in these early NAS algorithms, and then giving solutions.","tags":["paper","research","optimization","survey","neural-architecture-search","arxiv:2006.02903"]},{"id":1243,"created_on":"2020-06-08 08:39:34","title":"Timeseries Anomaly Detection using an Autoencoder","description":"Detect anomalies in a timeseries using an Autoencoder.","tags":["article","code","notebook","tutorial","keras","tensorflow","autoencoders","anomaly-detection","time-series"]},{"id":1246,"created_on":"2020-06-08 09:47:02","title":"Fairseq-tagging","description":"a Fairseq fork for sequence tagging\/labeling tasks\r\n","tags":["code","machine-learning","library","named-entity-recognition","natural-language-processing","part-of-speech-tagging","sequence-labeling"]},{"id":1247,"created_on":"2020-06-08 11:05:38","title":"Tensor functions for Pytorch's Autograd","description":"A blog and notebook to understand the Pytorch's autograd.","tags":["article","code","notebook","tutorial","pytorch","autograd","tensors"]},{"id":1249,"created_on":"2020-06-08 16:59:01","title":"Know-Corona : Kaggle COVID-19 Open Research Dataset Challenge (CO","description":"NLP\/state-of-the-art language model (BERT) based Question & Answering pipeline to answer all task questions after analyzing articles abstract of COVID-19, SARS-","tags":["article","code","research","tutorial","react","transformers","library","language-modeling","natural-language-processing","question-answering","biobert"]},{"id":1251,"created_on":"2020-06-08 18:38:49","title":"Automatic Asset Classification","description":"This project aims to automate the task of labelling images of flood defence assets as well as clustering images to find possibly better groupings.","tags":["article","code","research","computer-vision","image-classification","image-clustering","transfer-learning","engineering","asset-management","water","flood-defence"]},{"id":1252,"created_on":"2020-06-08 19:03:08","title":"torchlambda","description":"Lightweight tool to deploy PyTorch models to AWS Lambda","tags":["code","aws","c++","pytorch","deep-learning","library","deployment","lambda","lightweight","yaml"]},{"id":1253,"created_on":"2020-06-09 01:41:13","title":"Perceptrons Explained","description":"Play with several perceptron variants in browser, including noise-tolerant variants.","tags":["article","code","tutorial","perceptrons","noise-tolerance","deep-dive","voted-perceptron"]},{"id":1254,"created_on":"2020-06-09 01:48:17","title":"Unsupervised Translation of Programming Languages","description":"We train our model on source code from open source GitHub projects, and show that it can translate functions between C++, Java, and Python with high accuracy.","tags":["code","paper","research","translation","code-generation","unsupervised-learning","code-translation","programming-languages","arxiv:2006.03511"]},{"id":1255,"created_on":"2020-06-09 01:50:33","title":"TransformerTTS","description":"\ud83e\udd16\ud83d\udcac Transformer TTS: Implementation of a non-autoregressive Transformer based neural network for text to speech.","tags":["code","tutorial","tensorflow","transformers","natural-language-processing","speech","speech-synthesis","text-to-speech","demo","wavernn","melgan"]},{"id":1256,"created_on":"2020-06-09 01:55:52","title":"AlphaZero using DeepMind OpenSpiel","description":"Implementation of AlphaZero for the DeepMind OpenSpiel repository.","tags":["article","code","paper","research","tutorial","rl","deepmind","alphazero","openspiel"]},{"id":1257,"created_on":"2020-06-09 01:58:48","title":"How Big Should My Language Model Be?","description":"Tool to explore language model training and optimize the compute costs.","tags":["huggingface","transformers","library","language-modeling","natural-language-processing","compute","calculator"]},{"id":1258,"created_on":"2020-06-09 02:04:49","title":"MSeg: A Composite Dataset for Multi-domain Semantic Segmentation","description":"A composite dataset that unifies semantic segmentation datasets from different domains.","tags":["api","code","dataset","paper","research","tutorial","video","library","computer-vision","labeling","segmentation","instance-segmentation","panoptic-segmentation","multi-domain","mechanical-turk"]},{"id":1259,"created_on":"2020-06-09 02:11:15","title":"Network Fusion for Content Creation With Conditional Inns","description":"We present a method to repurpose powerful, existing models for new tasks, even though they have never been designed for them.","tags":["article","paper","research","computer-vision","image-generation","conditioned-generation","network-fusion","content-creation","arxiv:2005.13580"]},{"id":1260,"created_on":"2020-06-09 02:14:59","title":"Advanced Deep Learning for Computer Vision (ADL4CV)","description":"The Visual Computing Group offers a variety of lectures and seminars on a regular basis, covering hot areas in computer graphics, vision, and machine learning.","tags":["course","tutorial","video","deep-learning","computer-vision"]},{"id":1265,"created_on":"2020-06-09 15:45:49","title":"Dota 2 International 10 Traveller's Guide","description":"Its a project that uses the data from Foursquare API to generate travel recommendations for the International Attendees using clustering algorithm(K-Means)","tags":["code","clustering","data-science","exploratory-data-analysis"]},{"id":1266,"created_on":"2020-06-09 16:09:08","title":"Text Classification using Bert from Tensorflow-Hub","description":"This Tutorial helps to learn about Bert Models for Classification  task on a #Tweet dataset.","tags":["article","tutorial","tensorflow","attention","bert","transformers","classification","natural-language-processing","text-classification"]},{"id":1269,"created_on":"2020-06-09 21:03:14","title":"Coursera Course Dataset","description":"The project aims to scrap through data from website of Coursera and generate a csv file for its analysis.\r\n\r\n","tags":["article","code","tutorial","scrapping","analysis","courser"]},{"id":1270,"created_on":"2020-06-09 21:24:59","title":"Movie Recommendation System","description":"Collaborative Based Filtering System Recommendation System using ratings given and genres liked by other users.","tags":["code","tutorial","recommendation-systems"]},{"id":1271,"created_on":"2020-06-10 04:58:41","title":"WExDA - Web-based Data Exploration Tool","description":"WExDA is a web-based data exploration tool made with streamlit. It can be used for Exploratory Data Analysis.","tags":["article","code","library","visualization","streamlit","data-science","exploratory-data-analysis"]},{"id":1272,"created_on":"2020-06-10 05:13:41","title":"Linformer: Self-Attention with Linear Complexity","description":"We demonstrate that the self-attention mechanism can be approximated by a low-rank matrix.","tags":["paper","research","attention","self-attention","transformers","natural-language-processing","linear-complexity","complexity","linformer","arxiv:2006.04768"]},{"id":1273,"created_on":"2020-06-10 05:17:33","title":"Hummingbird","description":"Hummingbird is a library for compiling trained traditional ML models into tensor computations.","tags":["code","pytorch","scikit-learn","machine-learning","neural-networks","library","tensor-computation","hummingbird","micorsoft"]},{"id":1274,"created_on":"2020-06-10 05:21:00","title":"Getting Machine Learning to Production","description":"Machine learning is hard and there are a lot, a lot of moving pieces.","tags":["article","tutorial","machine-learning","production"]},{"id":1275,"created_on":"2020-06-10 05:24:07","title":"Exploration Strategies in Deep Reinforcement Learning","description":"Exploitation versus exploration is a critical topic in reinforcement learning. This post introduces several common approaches for better exploration in Deep RL.","tags":["article","tutorial","reinforcement-learning","exploration-strategies"]},{"id":1278,"created_on":"2020-06-10 12:50:41","title":"Automatically Generate Multiple Choice Questions (MCQs) ","description":"Automatically Generate Multiple Choice Questions (MCQs) from any content with BERT Summarizer, Wordnet, and Conceptnet","tags":["article","code","tutorial","attention","bert","transformers","natural-language-processing","question-generation","wordnet","conceptnet"]},{"id":1279,"created_on":"2020-06-10 12:53:41","title":"Perceptron to Deep-Neural-Network: The Road Less Traveled","description":"A journey from Perceptron to Deep Neural Networks in a sequential fashion.","tags":["article","code","notebook","tutorial","neural-networks","multilayer-perceptrons","perceptron"]},{"id":1281,"created_on":"2020-06-10 13:16:41","title":"AI Automated dubbing","description":"Build an end-to-end Youtube audio translation platform using AWS serverless architecture","tags":["article","code","tutorial","aws","audio","dubbing"]},{"id":1283,"created_on":"2020-06-10 13:33:50","title":"https:\/\/artificialneural.expert\/","description":"In this website we will share and review with you the best AI Learning resources we have come across so far. We will keep updating it on an almost daily basis\r\n\r\n","tags":["article","tutorial","deep-learning","machine-learning"]},{"id":1285,"created_on":"2020-06-10 17:20:25","title":"Organize pandas notebook with a cool hack","description":"An article on a cool hack for making Pandas Jupyter notebooks readable, clean, organized, and almost production-ready, without any additional library.","tags":["article","python","pandas","data-analysis","data-science","jupyter-notebook","plotly","pipeline"]},{"id":1286,"created_on":"2020-06-10 17:24:19","title":"Exploring Knowledge Captured in Probability of Strings","description":"An exploration of simple knowledge captured by language models with code examples","tags":["article","gpt2","transformers","language-modeling","natural-language-processing","zero-shot-learning"]},{"id":1287,"created_on":"2020-06-10 18:27:24","title":"BERT Loses Patience: Fast and Robust Inference with Early Exit","description":"Patience-based Early Exit, a inference method that can be used as a plug-and-play technique to simultaneously improve the efficiency of a pretrained LM.","tags":["code","paper","research","attention","bert","transformers","language-modeling","natural-language-processing","optimization","inference","patience-based-early-exit","arxiv:2006.04152"]},{"id":1288,"created_on":"2020-06-10 18:36:53","title":"ENEM","description":"Predicting ENEM Grades","tags":["code","research","python","scikit-learn","linear-regression","regression","inference","data-science","enem","ensemble"]},{"id":1289,"created_on":"2020-06-10 18:45:08","title":"Artificial Intelligence Podcast","description":"Podcast hosts accessible, big-picture conversations at MIT and beyond about the nature of intelligence.","tags":["podcast","video","artificial-intelligence","lex-fridman"]},{"id":1290,"created_on":"2020-06-10 18:53:24","title":"Papers Explained - Yannic Kilcher","description":"Detailed paper explanations usually released the day after a popular paper is released. ","tags":["tutorial","video","videos","papers-explained","youtube"]},{"id":1291,"created_on":"2020-06-10 18:57:09","title":"Chai Time Data Science","description":"Interviews with popular data science individuals.","tags":["podcast","video","machine-learning","data-science","kaggle"]},{"id":1292,"created_on":"2020-06-10 19:05:04","title":"Talks - Abhishek Thakur","description":"Talks series with interseting ML experts. ","tags":["podcast","video","machine-learning","youtube","talks"]},{"id":1293,"created_on":"2020-06-10 19:09:47","title":"Henry AI Labs - Deep Learning Research Videos","description":"Overview of trending machine learning research topics.","tags":["tutorial","video","machine-learning","videos","papers","henry-ai"]},{"id":1294,"created_on":"2020-06-10 19:13:04","title":"TWIML AI Podcast","description":"Keep up with the most interesting & important stories from the world of machine learning, deep learning & artificial intelligence.","tags":["podcast","machine-learning","twiml-ai"]},{"id":1295,"created_on":"2020-06-10 19:21:13","title":"Two Minute Papers","description":"Awesome research for everyone - two new science videos every week.","tags":["podcast","research","tutorial","video","papers"]},{"id":1296,"created_on":"2020-06-10 19:28:47","title":"Deep Learning Research Papers","description":"An illustrative look at trending deep learning research papers.","tags":["video","deep-learning","youtube","papers"]},{"id":1297,"created_on":"2020-06-10 20:45:24","title":"Machine Learning Street Talk","description":"Machine Learning Street Talk with Tim Scarfe, Yannic Kilcher, and Connor Shorten! New Episodes every Week, Please Subscribe!","tags":["podcast","research","tutorial","video","machine-learning","youtube","talk"]},{"id":1298,"created_on":"2020-06-11 04:18:27","title":"PEGASUS: a SOTA model for Abstractive Text Summarization","description":"A State-of-the-Art Model for Abstractive Text Summarization.","tags":["article","research","transformers","natural-language-processing","text-summarization","pegasus"]},{"id":1299,"created_on":"2020-06-11 04:22:05","title":"RFEst ","description":"A Python 3 toolbox for neural receptive field estimation using splines and Gaussian priors.","tags":["code","library","matrix-factorization","gaussian-priors","splines","spline-based-methods","ridge-regression"]},{"id":1300,"created_on":"2020-06-11 04:25:51","title":"Structured Data Classification from Scratch","description":"Binary classification of structured data including numerical and categorical features.","tags":["code","notebook","tutorial","keras","tensorflow","classification","features"]},{"id":1301,"created_on":"2020-06-11 04:29:24","title":"Big GANs Are Watching You","description":" We demonstrate that object saliency masks for GAN-produced images can be obtained automatically with BigBiGAN.","tags":["code","paper","research","tutorial","generative-adversarial-networks","computer-vision","object-detection","segmentation","unet","object-saliency","big-gan","bigbigan","arxiv:2006.04988"]},{"id":1309,"created_on":"2020-06-11 19:04:31","title":"Sentiment Analysis on News Article","description":"Used Twitter API to extract news-related tweets. Did some preprocessing and then calculated the tweets' polarity.","tags":["code","natural-language-processing","sentiment-analysis"]},{"id":1310,"created_on":"2020-06-11 20:30:38","title":"GPT-3 Language Model: A Technical Overview","description":"Technical details of the GPT-3 model, training, inference and what to expect next. ","tags":["article","tutorial","language-modeling","natural-language-processing","gpt-3"]},{"id":1311,"created_on":"2020-06-11 20:33:29","title":"Artifacts - Weights and Biases","description":"Versioned data, models and results across your pipelines","tags":["article","tutorial","wandb","dvc","versioning","data-versioning","artifacts","model-versioning"]},{"id":1312,"created_on":"2020-06-11 20:37:47","title":"OpenAI API","description":"API for accessing new AI models developed by OpenAI.","tags":["api","article","library","language-modeling","natural-language-processing","openai"]},{"id":1314,"created_on":"2020-06-12 00:28:55","title":"Sparkify","description":"Use Spark to process user activity logs of a 2-month duration and build classification models to predict churned users with Spark\u2019s MLlib.","tags":["article","code","tutorial","spark","classification"]},{"id":1317,"created_on":"2020-06-12 04:05:26","title":"Peak Engines","description":"Build warped linear regression models in Python when your model has a non-normal error distribution.","tags":["article","code","linear-regression","regression","library","non-normal","warped-linear-regression","peak-engines","non-linear-regresssion","non-linear"]},{"id":1318,"created_on":"2020-06-12 04:10:40","title":"Audino","description":"Open source audio annotation tool for humans\u2122.","tags":["code","paper","research","library","annotation","audio","arxiv:2006.05236"]},{"id":1319,"created_on":"2020-06-12 04:13:18","title":"Diagram of Distribution Relationships","description":"Overview of relationships between distributions.","tags":["article","tutorial","probability-distributions"]},{"id":1320,"created_on":"2020-06-12 04:17:08","title":"Implementation of a Contextual Chatbot in PyTorch","description":"Simple chatbot implementation with PyTorch.","tags":["code","tutorial","video","pytorch","chatbot","natural-language-processing","conversational-ai","contextual-chatbot"]},{"id":1325,"created_on":"2020-06-12 11:06:34","title":"Author Identification using Doc2Vec","description":"Web app of an author identification model trained on PAN 2012 dataset and Kaggle's Spooky Authorship Dataset","tags":["code","tutorial","natural-language-processing","kaggle","doc2vec","author-identification"]},{"id":1327,"created_on":"2020-06-12 12:09:17","title":"Implementing Autoencoders in the Fastai Library","description":"Step by step guide to implementing an autoencoder in fastai.","tags":["article","code","fastai","pytorch","autoencoders"]},{"id":1329,"created_on":"2020-06-12 12:44:18","title":"Training game agents with supervised learning","description":"This is a continuing research project trying find ways to learn complex tasks such as games without using Reinforcement Learning.","tags":["article","research","pytorch","video-games","reinforcement-learning"]},{"id":1334,"created_on":"2020-06-12 17:37:55","title":"Training Generative Adversarial Networks with Limited Data","description":"An adaptive discriminator augmentation mechanism that significantly stabilizes training in limited data regimes.","tags":["article","paper","research","generative-adversarial-networks","data-augmentation","limited-data"]},{"id":1337,"created_on":"2020-06-12 20:56:35","title":"Sending Simple Email Using Python","description":"Introduction to creating email senders with Python with complete code examples and explanations.","tags":["article","tutorial","python","program-development"]},{"id":1341,"created_on":"2020-06-12 23:54:46","title":"Intro to Jupyter Notebooks & JupyterLab with Python","description":"Introduction to Jupyter Notebooks & JupyterLab: set-up, user-guide, and best practices with Python. This is a beginner level intro. ","tags":["article","code","notebook","tutorial","video","python","jupyter-notebook","ide"]},{"id":1342,"created_on":"2020-06-13 00:27:12","title":"library for LVQ-II neural algorithm","description":"aims to predict certain crime types using lvq-II neural nets","tags":["code","library","lvq","learning-vector-quantization"]},{"id":1353,"created_on":"2020-06-13 07:19:27","title":"Combining Sketch and Tone for Pencil Drawing Production","description":"This is the C++  implementation of the paper  \"Combining Sketch and Tone for Pencil Drawing Production\" ","tags":["code","paper","research","library","color-pencil-sketch"]},{"id":1363,"created_on":"2020-06-13 13:46:44","title":"Short Notes on Batch Constrained Deep Reinforcement Learning","description":"Blog article on Off-Policy Deep Reinforcement Learning without Exploration paper by Fujimoto et al. (ICML 2019)","tags":["article","code","paper","research","tutorial","q-learning","reinforcement-learning","batch-rl","arxiv:1812.02900"]},{"id":1368,"created_on":"2020-06-13 15:55:11","title":"Financial Risk Prediction","description":"Financial Risk Prediction","tags":["code","finance","financial-risk"]},{"id":1371,"created_on":"2020-06-13 17:16:07","title":"Baymax - ChatBot","description":"Baymax Chatbot is a part of my summer training program @AdHoc Networks, Jaipur.\r\n\r\nA chatbot that allows user to signup and login to maintain their record. When c","tags":["code","databases","html","python","machine-learning","natural-language-processing","sentiment-analysis","conversational-ai"]},{"id":1372,"created_on":"2020-06-13 17:21:43","title":"How to Evaluate Longformer on TriviaQA using NLP","description":"We will evaluate a pretrained LongformerForQuestionAnswering model on the validation dataset of TriviaQA.","tags":["code","notebook","tutorial","huggingface","transformers","natural-language-processing","question-answering","longformer","triviaqa"]},{"id":1373,"created_on":"2020-06-13 17:22:31","title":"COVID-19 Data analysis & visualization","description":"The aim of this project is to understand the impact of COVID-19 epidemic all over the world through the visualization techniques made possible by python program","tags":["article","code","paper","research","covid-19-data-analysis-&-visualization"]},{"id":1374,"created_on":"2020-06-13 17:28:13","title":"Extracting Structured Data from Templatic Documents","description":"Automatically extract data from structured documents\u2014invoices, receipts, etc.\u2014with the potential to streamline many business workflows.","tags":["article","paper","research","computer-vision","representation-learning","structured-data","tables","templatic-documents","ocr","documents"]},{"id":1376,"created_on":"2020-06-13 17:32:32","title":"VirTex: Learning Visual Representations from Textual Annotations","description":"We train CNN+Transformer from scratch from COCO, transfer the CNN to 6 downstream vision tasks, and exceed ImageNet features despite using 10x fewer images.","tags":["article","code","paper","research","tutorial","pytorch","convolutional-neural-networks","transformers","computer-vision","image-captioning","natural-language-processing","object-detection","transfer-learning","pretraining","coco","visual-representations","arxiv:2006.06666","virtex"]},{"id":1382,"created_on":"2020-06-13 17:57:29","title":"Detecting phishing website using Machine Learning","description":"The project is based on a dataset that has 30 labels and 1 target. The purpose of this project is to detect Phishing websites through Machine learning algorithm","tags":["code","research","scikit-learn","decision-trees","machine-learning","library","phishing"]},{"id":1392,"created_on":"2020-06-13 20:58:33","title":"StackOver Flow Data Analysis","description":"Analysing certain aspects of the stack overflow data and creating \"Tag Predictor\" which predicts tag based on the post posted. ","tags":["code","research","natural-language-processing","big-data","pyspark","hive","pig"]},{"id":1393,"created_on":"2020-06-13 21:02:23","title":"RESTAURANT RECOMMENDATION USING YELP DATASET","description":"Built a personalized recommender web app using Yelp dataset of restaurants using Hybrid Matrix factorization model. ","tags":["code","research","angular","flask","python","recommendation-systems"]},{"id":1398,"created_on":"2020-06-14 05:51:06","title":"Super-resolution Variational Auto-Encoders","description":"VAE with RealNVP prior and Super-Resolution VAE in PyTorch.","tags":["code","paper","research","tutorial","pytorch","autoencoders","variational-autoencoders","computer-vision","super-resolution","unsupervised-learning","respresentation-learning","generative-model","cifar10","arxiv:2006.05218"]},{"id":1399,"created_on":"2020-06-14 05:57:16","title":"Video object grounding","description":"Video object grounding using semantic roles in language description. ","tags":["code","paper","research","tutorial","video","pytorch","computer-vision","image-captioning","cvpr-2020","grounding","visual-grounding","video-object-grounding","object-grounding","arxiv:2003.10606"]},{"id":1400,"created_on":"2020-06-14 05:58:22","title":"Cancer Classification Model","description":"SVM model to classify breast cancer as benign or malignant based on it's size, radius and area.","tags":["code","scikit-learn","support-vector-machines","classification","cancer"]},{"id":1401,"created_on":"2020-06-14 06:14:53","title":"Linear-Regression From Scratch","description":"In this project i have implemented  the basic linear regression model without using the sci-kit library.","tags":["code","notebook","tutorial","linear-regression","machine-learning","regression"]},{"id":1402,"created_on":"2020-06-14 07:18:23","title":"My Guide","description":"It is a mobile application for school students. This will help them to make their career choices more efficiently.","tags":["code","tutorial","java","machine-learning","library"]},{"id":1404,"created_on":"2020-06-14 07:47:38","title":"Customer Churn Prediction Case Study","description":"Customer Churn Prediction done by using techniques of Machine Learning and Predictive Modelling .","tags":["code","paper","research","logistic-regression","machine-learning","regression","customer-churn","predictive-modelling"]},{"id":1407,"created_on":"2020-06-14 13:13:09","title":"Hand-Written Digit Recognition using Neural Networks","description":"Using MNIST dataset","tags":["tutorial","tensorflow","convolutional-neural-networks","mnist"]},{"id":1418,"created_on":"2020-06-14 17:43:34","title":"Short Notes on Behavior Regularized Offline RL","description":"Blog Article on Behavior Regularized Offline Reinforcement Learning by Yifan Wu et al. (2019)","tags":["article","code","paper","research","tutorial","q-learning","reinforcement-learning","actor-critic","arxiv:1911.11361"]},{"id":1423,"created_on":"2020-06-14 22:10:57","title":"Entity Embedding with LSTM for Time-Series","description":"Demonstration of using LSTM for forecasting with structured time-series data, containing categorical and numerical features.","tags":["code","tutorial","lstm","time-series","structured-data","entity-embedding"]},{"id":1424,"created_on":"2020-06-15 02:27:55","title":"Why We Switched from Flask to FastAPI for Production ML","description":"The most popular tool isn\u2019t always the best.","tags":["api","article","tutorial","fastapi","flask","machine-learning","production"]},{"id":1425,"created_on":"2020-06-15 02:31:48","title":"Building a Captcha OCR in TF2.0","description":"A Kaggle notebook showcasing the use of an Endpoint layer for CTC loss function used for building a Captcha Reader in TensorFlow.","tags":["code","tutorial","keras","tensorflow","computer-vision","optical-character-recognition","kaggle","captcha"]},{"id":1426,"created_on":"2020-06-15 02:34:27","title":"From GRU to Transformer","description":"How recurrent units and self-attention are related to each other.","tags":["article","tutorial","attention","gated-recurrent-units","recurrent-neural-networks","self-attention","transformers","natural-language-processing"]},{"id":1427,"created_on":"2020-06-15 02:40:48","title":"101 Ways to Solve Search - Dair AI ft. Pratik Bhavsar","description":"A comprehensive overview of explaining how NLP is used for search.","tags":["tutorial","video","attention","bert","transformers","natural-language-processing","search","semantic-search","elastic-search","hybrid-search","query-augmentation"]},{"id":1428,"created_on":"2020-06-15 02:45:19","title":"Learning Representations via Graph-structured Networks","description":"Introduce a series of effective graph-structured networks, including non-local neural networks, spatial generalized propagation networks, etc.","tags":["article","research","tutorial","3d","computer-vision","graph-neural-networks","graphs","representation-learning","graph-structured-networks","non-local-neural-networks","spatial-generalized-propagation-networks"]},{"id":1430,"created_on":"2020-06-15 04:24:12","title":"Melanoma Classification","description":"This was Shubhamai 3-week project for working a new kaggle competition and deploying a web application to predicting benign or malignant based on images.","tags":["article","code","machine-learning","computer-vision","image-classification"]},{"id":1431,"created_on":"2020-06-15 06:33:36","title":"RecommendMe","description":"RecommendMe\r\nDeveloped a recommendation engine for the posts\r\n\r\nTwo methods used:-\r\n1) content-based Filtering\r\n2) Collaberative-based Filtering","tags":["code","tutorial","recommendation-systems","k-nearest-neighbors"]},{"id":1434,"created_on":"2020-06-15 07:52:13","title":"Universal Sentence Encoder Visually Explained","description":"A deep-dive into how Universal Sentence Encoder learns to generate fixed-length sentence embeddings","tags":["article","tutorial","tensorflow","embeddings","natural-language-processing","sentence-embeddings"]},{"id":1437,"created_on":"2020-06-15 10:47:42","title":"COVID 19 Data Analysis","description":"Data Analysis based  on no. of COVID 19 cases in country , per day cases.","tags":["code","matplotlib","pandas"]},{"id":1438,"created_on":"2020-06-15 11:06:35","title":"Multimodal Meme Classification","description":"UNITER has given state of the art results in various image-text related problems. This project aims at finetuning UNITER to solve Hateful memes challenge","tags":["article","code","paper","research","attention","bert","transformers","computer-vision","image-classification","arxiv:2005.04790"]},{"id":1442,"created_on":"2020-06-15 16:54:14","title":"Exploratory Data Analysis of 2019 Top 50 Spotify Songs","description":"EDA on dataset that contains data about top 50 Spotify tracks: name, artist, genre, bpm, energy, danceability, loudness, liveness, length, popularity, etc. ","tags":["code","tutorial","data-science","exploratory-data-analysis"]},{"id":1445,"created_on":"2020-06-15 17:49:16","title":"Image Smoothing via L0 Gradient Minimization","description":"This is a edge-aware image smoothing algorithm. This algorithm tries to smoothen the image while preserving the global structural information of the image. ","tags":["article","code","paper","research","tutorial","library","computer-vision","computation-photography"]},{"id":1450,"created_on":"2020-06-15 21:00:47","title":"BERT NLP \u2014 How To Build a Question Answering Bot","description":"Understanding the intuition with hands-on PyTorch code for BERT fine-tuned on SQuAD.","tags":["article","code","huggingface","pytorch","attention","bert","transformers","fine-tuning","natural-language-processing","question-answering","squad"]},{"id":1451,"created_on":"2020-06-16 01:21:09","title":"EfficientDet (PyTorch)","description":"A PyTorch implementation of EfficientDet faithful to the original Google implementation with ported weights.","tags":["code","paper","research","pytorch","computer-vision","object-detection","efficientdet","coco","pyramid-network","arxiv:1911.09070"]},{"id":1452,"created_on":"2020-06-16 01:27:49","title":"Reassessed ImageNet: Are We Done with ImageNet","description":"Labels and other data for the paper \"Are we done with ImageNet?\"","tags":["code","dataset","paper","research","imagenet","arxiv:2006.07159"]},{"id":1453,"created_on":"2020-06-16 01:32:49","title":"Interpretable Machine Learning for Computer Vision","description":"Recent progress we made on visualization, interpretation, and explanation methodologies for analyzing both the data and the models in computer vision.","tags":["article","video","computer-vision","interpretability","cvpr-2020"]},{"id":1454,"created_on":"2020-06-16 01:37:34","title":"On Differentiable Optimization for Control and Vision","description":"Slides for Bamos' talk for for differentiable continuous control.","tags":["presentation","cvpr-2020","convex-optimization","differentiable-convex-optimization","differentiable-cross-entropy","slides"]},{"id":1455,"created_on":"2020-06-16 02:32:53","title":"Predicting Unintentional Action in Video","description":"We introduce a dataset of in-the-wild videos of unintentional action, as well as a suite of tasks for recognizing, localizing, and anticipating its onset. ","tags":["article","code","dataset","paper","research","computer-vision","action-recognition","cvpr-2020","video-analysis","arxiv:1911.11206"]},{"id":1456,"created_on":"2020-06-16 02:39:42","title":"Neural Rendering - CVPR 2020 Tutorial","description":"State of the art on neural rendering.","tags":["paper","research","video","cvpr-2020","neural-rendering"]},{"id":1457,"created_on":"2020-06-16 02:46:25","title":" Synthesizing High-Resolution Images with StyleGAN2","description":"Developed by NVIDIA Researchers, StyleGAN2 yields state-of-the-art results in data-driven unconditional generative image modeling.","tags":["code","video","generative-adversarial-networks","computer-vision","image-generation","stylegan","nvidia","cvpr-2020","stylegan2","high-resolution","high-resolution-images"]},{"id":1458,"created_on":"2020-06-16 02:51:13","title":"PIFuHD: High-Resolution 3D Human Digitization ","description":"This repository contains a pytorch implementation of \"Multi-Level Pixel-Aligned Implicit Function for High-Resolution 3D Human Digitization\".","tags":["article","code","notebook","paper","research","3d","computer-vision","cvpr-2020","human-digitization","pifudh","arxiv:2004.00452"]},{"id":1459,"created_on":"2020-06-16 03:06:10","title":"SuperGlue: Learning Feature Matching with Graph Neural Networks","description":"SuperGlue, a neural network that matches two sets of local features by jointly finding correspondences and rejecting non-matchable points.","tags":["article","code","paper","research","video","graph-neural-networks","graphs","interpretability","demo","superglue","visual-localization","image-matching","context-aggregation","arxiv:1911.11763"]},{"id":1460,"created_on":"2020-06-16 03:21:07","title":"Instance Shadow Detection","description":"Instance shadow detection aims to find shadow instances paired with object instances.","tags":["api","code","dataset","paper","research","computer-vision","object-detection","cvpr-2020","shadow-detection","instance-shadow-detection","arxiv:1911.07034"]},{"id":1461,"created_on":"2020-06-16 03:24:02","title":"Detectron2","description":"FAIR's next-generation platform for object detection and segmentation.","tags":["article","code","pytorch","library","computer-vision","object-detection","object-tracking","pose-estimation","semantic-segmentation","segmentation","detectron2","detectron"]},{"id":1462,"created_on":"2020-06-16 03:28:40","title":"Open Compound Domain Adaptation","description":"Pytorch implementation for \"Open Compound Domain Adaptation\"","tags":["article","code","paper","research","video","pytorch","computer-vision","domain-adaptation","cvpr-2020","open-compound-domain-adaptation","arxiv:1909.03403"]},{"id":1467,"created_on":"2020-06-16 06:27:12","title":"Human Activity Recognition using WiFi sensing","description":"Using changes in the Wifi signals , we want to predict the presence of  a human inside the room, we use \r\nml for prediction.","tags":["code","lstm","support-vector-machines","data-augmentation","data-science","csi"]},{"id":1470,"created_on":"2020-06-16 15:02:47","title":"Audio Tagging System","description":"Audio classification through deep learning","tags":["code","deep-learning","machine-learning","audio","audio-classification","audio-tagging"]},{"id":1472,"created_on":"2020-06-16 22:34:19","title":"Getting to the Bottom","description":"We focus on two deep networks with the same architecture but different synaptic weights.","tags":["article","neural-networks","weights","loss","distance"]},{"id":1473,"created_on":"2020-06-16 22:37:58","title":"tslearn","description":"A machine learning toolkit dedicated to time-series data.","tags":["code","library","time-series","time-series-classification","time-series-clustering","dynamic-time-warping"]},{"id":1474,"created_on":"2020-06-16 22:40:55","title":"OpenSelfSup: Self-Supervised Learning Toolbox and Benchmark","description":"An open source unsupervised representation learning toolbox based on PyTorch.","tags":["code","pytorch","library","representation-learning","self-supervised-learning","unsupervised-learning","simclr","imagenet","moco","deepcluster","pirl"]},{"id":1475,"created_on":"2020-06-16 22:45:15","title":"PyTorch3D","description":"FAIR's library of reusable components for deep learning with 3D data.","tags":["code","notebook","video","c++","pytorch","library","3d","computer-vision","cuda","heterogeneous-batching","batching","differentiable-rendering","pytorch-3d"]},{"id":1476,"created_on":"2020-06-16 22:48:45","title":"Course Review - Causal Inference","description":"Types of understanding that causal inference researchers value.","tags":["article","causal-inference","reinforcement-learning"]},{"id":1477,"created_on":"2020-06-16 22:50:45","title":"Deep Declarative Networks (CVPR 2020)","description":"Workshop and talks on deep declarative networks from CVPR 2020.","tags":["article","video","cvpr-2020","playlist","deep-declarative-networks"]},{"id":1478,"created_on":"2020-06-16 22:56:31","title":"Unsupervised Learning of Probably Symmetric Deformable 3D Objects","description":"A method to learn 3D deformable object categories from raw single-view images, without external supervision.","tags":["article","code","paper","research","video","pytorch","3d","computer-vision","unsupervised-learning","cvpr-2020","demo","3d-objects","3d-reconstruction","arxiv:1911.11130"]},{"id":1479,"created_on":"2020-06-16 23:03:59","title":"Neural Data Server (NDS): Find Best Data to Pre-Train Your Models","description":"A large-scale search engine for finding the most useful transfer learning data to the target domain.","tags":["paper","research","video","fine-tuning","search","transfer-learning","data","demo","neural-data-server","data-search","arxiv:2001.02799"]},{"id":1480,"created_on":"2020-06-16 23:06:13","title":"A Guide to Natural Language Processing With AllenNLP","description":"basics of using AllenNLP","tags":["course","natural-language-processing","allenai"]},{"id":1482,"created_on":"2020-06-17 12:12:03","title":"Real Time Object Detection using CNN YOLO","description":"This project is done on real time object detection using a deep learning object detection algorithm i.e., YOLO.","tags":["code","convolutional-neural-networks","deep-learning","computer-vision","object-detection","yolov3"]},{"id":1483,"created_on":"2020-06-17 14:38:33","title":"Short Notes on Model-Based Offline Reinforcement Learning (MOReL)","description":"Blog article on Model-Based Offline Reinforcement Learning (MOReL) paper by Rahul Kidambi & Aravind Rajeswaran et al.","tags":["article","code","paper","research","tutorial","reinforcement-learning","model-based","offline-rl","arxiv:2005.05951"]},{"id":1485,"created_on":"2020-06-17 16:33:50","title":"Sudoku-Game-Solver","description":"This is a Computer Vision Application that solves a 9x9 sudoku board game using Deep Learning and Backtracking algorithm.","tags":["code","tutorial","convolutional-neural-networks","deep-learning","computer-vision"]},{"id":1486,"created_on":"2020-06-17 18:27:51","title":"Bootstrap Your Own Latent: Approach to Self-Supervised Learning","description":"A new approach to self-supervised image representation learning.","tags":["code","paper","research","representation-learning","self-supervised-learning","simclr","byol","arxiv:2006.07733"]},{"id":1488,"created_on":"2020-06-17 19:27:36","title":"Smart Picture Editor","description":"Tool to automatically remove unwanted objects from photos","tags":["code","computer-vision","object-detection","face-recognitioni"]},{"id":1491,"created_on":"2020-06-18 00:04:34","title":"Image GPT: Generative Pretraining from Pixels","description":" Transformers trained on pixel sequences can generate coherent image completions and samples.","tags":["article","code","paper","research","tutorial","convolutional-neural-networks","transformers","computer-vision","unsupervised-learning","openai","image-completion","image-gpt"]},{"id":1492,"created_on":"2020-06-18 00:06:53","title":"Q*BERT","description":"Agents that build knowledge graphs and explore textual worlds by asking questions.","tags":["code","paper","research","attention","bert","transformers","graphs","knowledge-base-question-answering","knowledge-graphs","natural-language-processing","question-generation","qa","a2c","arxiv:2006.07409"]},{"id":1493,"created_on":"2020-06-18 00:11:45","title":"A U-Net Based Discriminator for Generative Adversarial Networks","description":"U-Net based architecture allows to provide detailed per-pixel feedback to the generator while maintaining the global coherence of synthesized images.","tags":["paper","research","generative-adversarial-networks","unet","cvpr-2020","discriminator","arxiv:2002.12655"]},{"id":1494,"created_on":"2020-06-18 00:14:40","title":"Object Goal Navigation using Goal-oriented Semantic Exploration","description":"Embodied interactive learning for object detection by using semantic curiosity to learn an exploration policy on set of the training environments.","tags":["article","paper","research","video","computer-vision","object-detection","object-goal-navigation","semantic-exploration","mapping","exploration-policy"]},{"id":1497,"created_on":"2020-06-18 10:35:47","title":"SQLZOO","description":"SQLZoo is a free, \"learn-by-doing\" SQL course that immediately starts you on practising  queries in different use cases","tags":["code","tutorial","sql"]},{"id":1498,"created_on":"2020-06-18 11:50:05","title":"Breast cancer detection","description":"By Using KNN algorithm the model achieved 98% accuracy on testing data.","tags":["code","notebook","tutorial","scikit-learn","machine-learning","k-nearest-neighbors","exploratory-data-analysis"]},{"id":1499,"created_on":"2020-06-18 13:41:39","title":"History of Language Models - Alec Radford","description":"A quick history of language models","tags":["tutorial","video","transformers","language-modeling","natural-language-processing","transfer-learning"]},{"id":1500,"created_on":"2020-06-18 14:46:54","title":"Bootstrap Your Own Latent (BYOL) in Pytorch","description":"Practical implementation of a new state of the art (surpassing SimCLR) without contrast learning and having to designate negative pairs.","tags":["code","paper","research","pytorch","library","self-supervised-learning","simclr","byol","arxiv:2006.07733"]},{"id":1501,"created_on":"2020-06-18 18:17:18","title":"Traffic-Sign-Recognition-Using-Deep-Learning","description":"The training dataset contains around 39,000 images while test dataset contains around 12,000 images containing 43 different classes. We will be using Convolutio","tags":["code","dataset","deep-learning","computer-vision"]},{"id":1502,"created_on":"2020-06-18 19:45:49","title":"Generate Boolean (Yes\/No) Questions From Any Content ","description":"Question generation algorithm trained on the BoolQ dataset using T5 text-to-text transformer model.","tags":["article","code","research","tutorial","huggingface","pytorch","transformers","natural-language-processing","question-generation","t5"]},{"id":1503,"created_on":"2020-06-19 03:48:48","title":"Fastbook: Deep learning basics with fastai","description":"These notebooks cover an introduction to deep learning, fastai, and PyTorch. fastai is a layered API for deep learning","tags":["code","fastai","deep-learning"]},{"id":1504,"created_on":"2020-06-19 06:19:25","title":"Fast Neural Style Transfer (feed-forward method) \u26a1\ud83d\udcbb + \ud83c\udfa8 = \u2764\ufe0f","description":"This repo contains a concise PyTorch implementation of the original feed-forward NST paper.","tags":["code","paper","research","tutorial","video","computer-vision","style-transfer","neural-style-transfer","arxiv:1603.08155"]},{"id":1505,"created_on":"2020-06-19 06:22:56","title":"Diverse Image Generation via Self-Conditioned GANs","description":"A simple but effective unsupervised method for generating realistic & diverse images using a class-conditional GAN model without using manually annotated class.","tags":["article","code","paper","research","generative-adversarial-networks","computer-vision","data-augmentation","image-generation","unsupervised-learning","cvpr-2020","self-conditioned-gans","arxiv:2006.10728"]},{"id":1506,"created_on":"2020-06-19 06:26:17","title":"Using GitHub Actions for MLOps & Data Science","description":"A collection of resources on how to facilitate Machine Learning Ops with GitHub.","tags":["article","code","github","tutorial","production","github-actions","ml-ops","ci-cd"]},{"id":1507,"created_on":"2020-06-19 06:41:56","title":"Amazon Fine Food Reviews(Review, Text Classification)","description":"Objective: Given a review, determine whether the review is positive (Rating of 4 or 5) or negative (rating of 1 or 2).","tags":["article","code","dataset","implemenation-of-all-supervised-learning-and-un-supervised-learning-algorithms-"]},{"id":1508,"created_on":"2020-06-19 06:43:47","title":"Long Form Question Answering with ELI5","description":"A model for open domain long form question answering.","tags":["article","tutorial","huggingface","transformers","natural-language-processing","question-answering","streamlit","eli5","demo","long-form-question-answering"]},{"id":1509,"created_on":"2020-06-19 06:46:58","title":"Visual Grounding in Video for Unsupervised Word Translation","description":"Use visual grounding to improve unsupervised word mapping between languages.","tags":["article","paper","research","video","unsupervised-learning","visual-grounding","language-mapping","arxiv:2003.05078"]},{"id":1510,"created_on":"2020-06-19 06:49:24","title":"Personalized Cancer Diagnosis(Gene\/Mutation)","description":"Problem statement :\r\nClassify the given genetic variations\/mutations based on evidence from text-based clinical literature.","tags":["code","dataset","there-are-nine-different-classes-a-genetic-mutation-can-be-classified-into-=>-multi-class-classification-problem"]},{"id":1511,"created_on":"2020-06-19 06:54:23","title":"RepNet - Class Agnostic Video Repetition Counting in the Wild","description":"Counting Out Time: Class Agnostic Video Repetition Counting in the Wild","tags":["code","paper","research","video","computer-vision","action-recognition","cvpr-2020","deepmind","repnet","repition-counting"]},{"id":1512,"created_on":"2020-06-19 06:59:42","title":"G5: A Universal GRAPH-BERT for Graph-to-Graph Transfer","description":"Further investigate the graph-to-graph transfer of a universal GRAPH-BERT for graph representation learning across different graph datasets","tags":["paper","research","attention","bert","transformers","graph-neural-networks","graphs","natural-language-processing","representation-learning","g5","graph-bert","arxiv:2006.06183"]},{"id":1515,"created_on":"2020-06-19 16:37:10","title":"Cut, Paste and Learn: Surprisingly Easy Synthesis for Detection","description":"Generate synthetic scenes and bounding box annotations for object detection.","tags":["code","paper","research","computer-vision","data-augmentation","object-detection","segmentation","instance-segmentation","arxiv:1708.01642"]},{"id":1517,"created_on":"2020-06-19 18:40:34","title":"NeuralPy: A Keras like DL libary that works on top of PyTorch","description":"NeuralPy is a High-Level Keras like deep learning library that works on top of PyTorch written in pure Python. ","tags":["article","code","keras","pytorch","deep-learning","machine-learning","library"]},{"id":1518,"created_on":"2020-06-19 21:12:30","title":"Introduction to Neural Network Models of Cognition - Online Book","description":"On-line interactive book introducing the history, theory, and math of Neural Network Models with Python, from a Cog Science perspective.","tags":["article","code","tutorial","convolutional-neural-networks","deep-learning","neural-networks","recurrent-neural-networks"]},{"id":1519,"created_on":"2020-06-20 05:40:46","title":"Image and Bounding Box Annotation Slicer","description":"This easy-to-use library slices (also resizes) images and its bounding box annotations into tiles of specific sizes or any arbitrary number of equal parts. \u2702\ufe0f","tags":["code","library","utilities","computer-vision","object-detection","preprocessing"]},{"id":1520,"created_on":"2020-06-20 06:49:06","title":"Generating cooking recipes using TensorFlow and LSTM RNN","description":"This article contains details of how the recipes generation LSTM model was trained on Python using TensorFlow 2 with Keras API.","tags":["article","code","tutorial","keras","python","tensorflow","recurrent-neural-networks","cooking","demo"]},{"id":1521,"created_on":"2020-06-20 09:40:29","title":"Scooping into Model Pruning in Deep Learning","description":"This report discusses pruning techniques in the context of deep learning.","tags":["article","code","notebook","tutorial","tensorflow","model-compression","pruning","wandb"]},{"id":1522,"created_on":"2020-06-20 09:43:35","title":"Plotting top loss images while training models","description":"The report shows why and how one should investigate the images that cause the top losses during training.","tags":["article","code","tutorial","tensorflow","deep-learning","wandb","model-debugging"]},{"id":1524,"created_on":"2020-06-20 10:42:25","title":"Machine Learning Projects ","description":"This Repo contains projects done by me while learning the basics. All the familiar types of regression, classification, and clustering methods have been used.","tags":["code","machine-learning","regression","classification","clustering","natural-language-processing"]},{"id":1525,"created_on":"2020-06-20 16:21:38","title":"Huggingtweets","description":"This is a streamlit app built around the huggingtweets project. I fine-tune a pre-trained gpt2 model to tweet like a user given twitter handle.  ","tags":["code","tutorial","transformers","natural-language-processing","streamlit"]},{"id":1527,"created_on":"2020-06-20 20:55:20","title":"Face detection","description":"https:\/\/github.com\/garimasingh128\/Face-detection","tags":["code","artificial-general-intelligence","machine-learning","support-vector-machines","done"]},{"id":1528,"created_on":"2020-06-20 22:06:48","title":"The Future of Computer Vision is Self-Supervised Learning","description":"Talk by Yann Lecun on the applications of self-supervised learning on computer vision during CVPR 2020.","tags":["tutorial","video","deep-learning","computer-vision","cvpr-2020"]},{"id":1529,"created_on":"2020-06-20 22:11:14","title":"Using Selective Attention in Reinforcement Learning Agents","description":"In this work, we establish that self-attention can be viewed as a form of indirect encoding, which enables us to construct highly parameter-efficient agents.","tags":["article","code","paper","research","attention","self-attention","interpretability","reinforcement-learning","neuroevolution","selective-attention","self-interpretable-agents","arxiv:2003.08165"]},{"id":1530,"created_on":"2020-06-20 22:13:26","title":"Neural Manifold Ordinary Differential Equations","description":"A manifold generalization of Neural ODEs, and construct Manifold Continuous Normalizing Flows (MCNFs)","tags":["code","paper","research","ordinary-differential-equations","manifold","ode","manifold-continuous-normalizing-flows","mcnf","arxiv:2006.10254"]},{"id":1531,"created_on":"2020-06-20 22:16:21","title":"Fourier Features Let Networks Learn High Frequency Functions","description":"We show that passing input points through a simple Fourier feature mapping enables an MLP to learn high-frequency functions in low-dimensional problem domains.","tags":["article","code","notebook","research","multilayer-perceptrons","fourier-features"]},{"id":1532,"created_on":"2020-06-20 22:20:49","title":"How Trigo Built a Scalable AI Pipeline for Frictionless Retail","description":"Using PyTorch development and deployment pipelines to create checkout-free systems.","tags":["article","pytorch","retail","deployment","trigo"]},{"id":1533,"created_on":"2020-06-20 22:23:39","title":"Caliban","description":"A CLI tool that transparently dockerizes your research workflows then helps you develop interactively in the container, locally or submit batch jobs to GCP.","tags":["code","research","docker","library","experiments","cloud","caliban","reproducibility"]},{"id":1534,"created_on":"2020-06-21 04:10:53","title":"SimCLR with PyTorch Lightning","description":"A lightweight implementation of SimCLR with PyTorch Lightning. Will be used as the start point for modifications on top of SimCLR to experiment.","tags":["code","paper","research","pytorch","self-supervised-learning","unsupervised-learning","pytorch-lightning","simclr","arxiv:2002.05709"]},{"id":1536,"created_on":"2020-06-21 07:25:33","title":"Simple Pytorch Implementation of BYOL in Google Colab","description":"BYOL: Bootstrap Your Own Latent: A New Approach to Self-Supervised Learning (https:\/\/arxiv.org\/abs\/2006.07733)","tags":["code","notebook","paper","research","tutorial","pytorch","self-supervised-learning","demo","byol","latent-representations","arxiv:2006.07733"]},{"id":1539,"created_on":"2020-06-21 12:45:42","title":"A Visual Guide to FastText Word Embeddings","description":"A deep-dive into how FastText enriches word vectors with sub-word information  ","tags":["article","tutorial","fasttext","embeddings","natural-language-processing","word-embeddings"]},{"id":1540,"created_on":"2020-06-21 13:03:19","title":"codeBERT - Masked Language Model for source code ","description":"Tutorial to use codeBERT a MLM for Python code. Model trained from scratch using roBERTa","tags":["code","notebook","tutorial","huggingface","attention","bert","machine-learning","transformers","language-modeling","natural-language-processing","ml-on-code","machine-learning-on-code"]},{"id":1541,"created_on":"2020-06-21 13:26:30","title":"Data Science FAQ Search Engine","description":"A search engine to help budding data scientists find resources","tags":["similarity-search","streamlit","semantic-search","demo"]},{"id":1542,"created_on":"2020-06-21 20:46:12","title":"Autocoder - Finetuning GPT-2 for Auto Code Completion","description":"A basic and simple tool for code auto completion, built upon GPT-2","tags":["article","code","gpt2","transformers","code-generation","natural-language-processing"]},{"id":1544,"created_on":"2020-06-22 00:40:07","title":"Implicit Neural Representations with Periodic Activation Function","description":"Leverage periodic activation functions for implicit neural representations & demonstrate that these networks, dubbed sinusoidal representation networks or SIREN","tags":["article","code","notebook","paper","research","video","relu","siren","activation-functions","tanh","softplus","arxiv:2006.09661"]},{"id":1545,"created_on":"2020-06-22 00:43:38","title":"Tensorflow Fourier Feature Mapping Networks","description":"Tensorflow 2.0 implementation of fourier feature mapping networks.","tags":["code","paper","research","tensorflow","fourier-transformations","arxiv:2006.10739"]},{"id":1546,"created_on":"2020-06-22 00:46:32","title":"DeepSNAP","description":"Python library assists deep learning on graphs.","tags":["code","pytorch","library","graph-neural-networks","graphs","deepsnap"]},{"id":1547,"created_on":"2020-06-22 00:50:30","title":"RoBERTa meets TPUs","description":"Understanding and applying the RoBERTa model to the current challenge.","tags":["code","tutorial","huggingface","pytorch","attention","bert","transformers","natural-language-processing","tpu","pytorch-lightning","roberta"]},{"id":1548,"created_on":"2020-06-22 00:56:17","title":"A Tutorial on VAEs: From Bayes' Rule to Lossless Compression","description":"an overview of the VAE and a tour through various derivations and interpretations of the VAE objective.","tags":["code","notebook","paper","research","tutorial","autoencoders","variational-autoencoders","bayes-rule","loseless-compression","arxiv:2006.10273"]},{"id":1549,"created_on":"2020-06-22 01:00:45","title":"Deep Model-Based RL for Real-World Robotic Control","description":"Short talk about model-based RL by Sergey Levine.","tags":["video","meta-learning","reinforcement-learning","meta-reinforcement-learning","model-based-reinforcement-learning"]},{"id":1550,"created_on":"2020-06-22 01:02:59","title":"Transformer Reinforcement Learning","description":"Leandro von Werra tells us about his new library which enables you to fine-tune GPT-2 towards a higher-level objective (sentiment of the generated text).","tags":["video","transformers","natural-language-processing","reinforcement-learning"]},{"id":1551,"created_on":"2020-06-22 03:17:48","title":"Pokemon Classifier","description":"I want to build a classifier that can classify 150 types of Pokemon.","tags":["code","tutorial","tensorflow","convolutional-neural-networks","computer-vision","pokemon"]},{"id":1552,"created_on":"2020-06-22 03:45:01","title":"Workshop on Scalability in Autonomous Driving - Andrej Karpathy","description":"An overview of autonomous driving and computer vision at Tesla.","tags":["video","autonomous-vehicles","computer-vision","cvpr-2020","tesla"]},{"id":1554,"created_on":"2020-06-22 12:06:57","title":"Diabetes Classifier","description":"The machine learning model uses DecisionTree classifier to predict whether a person is diabetic or not","tags":["code","notebook","tutorial","python","decision-trees","machine-learning","classification","data-science","exploratory-data-analysis"]},{"id":1555,"created_on":"2020-06-22 13:02:15","title":"Advertisement Classifier","description":"This project is about predicting whether a user will click on advertisement or not on a particular website and the model scores 95% accuracy on test data","tags":["code","tutorial","machine-learning","random-forests","classification","decision-tree","data-science","exploratory-data-analysis"]},{"id":1556,"created_on":"2020-06-22 15:36:03","title":"Guide to mixed precision training with PyTorch","description":"The mixed-precision training module forthcoming in PyTorch 1.6 provides speed-ups of up to 50-60% for large ML model training jobs.","tags":["article","tutorial","pytorch","training"]},{"id":1557,"created_on":"2020-06-22 15:40:30","title":"Reduce cloud GPU model training costs using spot instances","description":"Though tricky to use, spot instances are essential to cost savings on large model training jobs.","tags":["article","aws","project-management","training","gcp"]},{"id":1558,"created_on":"2020-06-22 15:43:26","title":"An introduction to hyperparameter search with CIFAR-10","description":"A primer on one of the most common and useful techniques in machine learning.","tags":["article","hyperparameter-optimization"]},{"id":1559,"created_on":"2020-06-22 15:47:14","title":"Boost your CNN performance with progressive resizing in Keras","description":"Progressive resizing is a technique for building CNNs that can be very helpful during the training and optimization phases of a machine learning project.","tags":["article","code","tutorial","keras","convolutional-neural-networks","project-management"]},{"id":1560,"created_on":"2020-06-22 15:56:00","title":"Battle-Tested Techniques for Scoping Machine Learning Projects","description":"One of the challenges of managing an ML project is project scoping. Even small changes in data or architecture can create huge differences in model outputs.","tags":["code","video","project-management","production","systems-design"]},{"id":1561,"created_on":"2020-06-22 15:59:04","title":"Fran\u00e7ois Chollet wants you to care about developer experience","description":"Chollet cites three principles as the key to a great developer experience.","tags":["article","keras","project-management"]},{"id":1562,"created_on":"2020-06-22 16:02:04","title":"Evaluating Keras neural network performance using Yellowbrick","description":"Yellowbrick is a dataviz toolkit that provides many advanced data and model evaluation plots.","tags":["article","tutorial","keras","library","visualization","yellobrick"]},{"id":1563,"created_on":"2020-06-22 16:04:10","title":"Classify photos in 600 classes using nine million Open Images","description":"If you\u2019re looking build an image classifier but need training data, look no further than Google Open Images.","tags":["article","code","dataset","tutorial","convolutional-neural-networks","computer-vision","data-augmentation","image-classification","data"]},{"id":1564,"created_on":"2020-06-22 16:08:25","title":"Building fully custom machine learning models on AWS SageMaker","description":"AWS SageMaker is a cloud machine learning SDK designed for speed of iteration, and it\u2019s one of the fastest-growing toys in the Amazon AWS ecosystem.","tags":["article","code","tutorial","aws","product-management"]},{"id":1565,"created_on":"2020-06-22 16:10:44","title":"Designing data visualization APIs in Python","description":"In this post we'll examine some data visualization API design ideas.","tags":["article","d3","matplotlib","python","visualization","altair","exploratory-data-analysis"]},{"id":1566,"created_on":"2020-06-22 16:14:12","title":"Aleksey's Machine Learning Repository","description":"Organized notes on machine learning.","tags":["article","code","notebook","scikit-learn","machine-learning","feature-engineering"]},{"id":1567,"created_on":"2020-06-22 16:29:03","title":"fahr: a POC CLI for building machine learning models on the cloud","description":"fahr is a command-line tool for building machine learning models on cloud hardware with as little overhead as possible.","tags":["api","code","aws","training","kaggle"]},{"id":1568,"created_on":"2020-06-22 16:32:33","title":"missingno:  Missing data visualization module for Python. ","description":"missingno provides a small toolset of flexible and easy-to-use missing data visualizations.","tags":["code","notebook","python","library","visualization","exploratory-data-analysis"]},{"id":1569,"created_on":"2020-06-22 16:52:01","title":"Trackable","description":"The project deals with tracking humans in a narrow hallway under different lighting conditions.","tags":["code","research","pytorch","computer-vision","object-tracking","hallway-tracking"]},{"id":1571,"created_on":"2020-06-23 02:04:12","title":"Stochastic Segmentation Networks","description":"An efficient probabilistic method for modelling aleatoric uncertainty with any image segmentation network architecture.","tags":["code","notebook","paper","research","health","computer-vision","medical-imaging","segmentation","mri","demo","arxiv:2006.06015"]},{"id":1572,"created_on":"2020-06-23 02:08:31","title":"Python Data Science \u2013 A Free 12-Hour Course for Beginners","description":"Learn Pandas, NumPy, Matplotlib, and more.","tags":["code","course","tutorial","video","python"]},{"id":1573,"created_on":"2020-06-23 02:15:21","title":"Fun Python","description":"Notes from a class held online between April - May 2020 with students\r\nage 10-12.","tags":["article","tutorial","python"]},{"id":1574,"created_on":"2020-06-23 02:24:59","title":"MIT Embodied Intelligence Seminars","description":"Collection of very interesting talks around embodied intelligence.","tags":["video","embodied-intelligence","general-intelligence","emergent-intelligence","mit"]},{"id":1575,"created_on":"2020-06-23 02:30:20","title":"Deep Learning for Computer Vision ","description":"Special topics class on deep learning for computer vision from the University of Michigan taught by Justin Johnson.","tags":["article","course","video","deep-learning","computer-vision","slides"]},{"id":1576,"created_on":"2020-06-23 02:37:15","title":"VPSNet for Video Panoptic Segmentation","description":"Video panoptic segmentation by generating consistent panoptic segmentation as well as an association of instance ids across video frames.","tags":["code","dataset","paper","research","pytorch","computer-vision","video-semantic-segmentation","segmentation","cvpr-2020","panoptic-segmentation","slides","video-segmentation","video-processing","video-panoptic-segmentation","vpsnet","arxiv:2006.11339"]},{"id":1577,"created_on":"2020-06-23 02:40:31","title":"Data Version Control (DVC) v1.0","description":"\ud83e\udd89Data Version Control | Git for Data & Models","tags":["article","code","video","library","dvc","version-control"]},{"id":1578,"created_on":"2020-06-23 08:23:46","title":"PyBoxCar","description":"A BoxCar2D implementation in Python.","tags":["code","research","artificial-intelligence","genetic-algorithms","evolutionary-algorithms","simulation"]},{"id":1579,"created_on":"2020-06-23 14:04:30","title":"Self-Supervised Prototypical Transfer Learning","description":"Advancing state-of-the-art unsupervised few-shot learning up to supervised performance.","tags":["code","paper","research","few-shot-learning","self-supervised-learning","transfer-learning","arxiv:2006.11325"]},{"id":1580,"created_on":"2020-06-24 03:00:16","title":"What I Learned From Looking at 200 Machine Learning Tools","description":"To better understand the landscape of available tools for machine learning production, I decided to look up every AI\/ML tool I could find.","tags":["article","machine-learning","production","survey","mlops"]},{"id":1581,"created_on":"2020-06-24 03:04:31","title":"Discovering Symbolic Models from Deep Learning w\/ Inductive Bias","description":"A general approach to distill symbolic representations of a learned deep model by introducing strong inductive biases.","tags":["article","code","notebook","paper","research","video","graph-neural-networks","graphs","representation-learning","demo","symbolic-models","inductive-bias","arxiv:2006.11287"]},{"id":1582,"created_on":"2020-06-24 03:07:18","title":"spacy-streamlit: spaCy building blocks for Streamlit apps","description":"Utilities for visualizing spaCy models and building interactive spaCy-powered apps with Streamlit.","tags":["code","spacy","library","streamlit"]},{"id":1583,"created_on":"2020-06-24 03:13:11","title":"Adversarial Latent Autoencoders","description":"Harnessing the latent power of autoencoders, one disentanglement at a time.","tags":["article","paper","research","tutorial","autoencoders","generative-adversarial-networks","wandb","arxiv:2004.04467","adversarial-latent-autoencoders"]},{"id":1584,"created_on":"2020-06-24 03:15:34","title":"Locally Masked Convolution for Autoregressive Models","description":"Locally Masked PixelCNN generates natural images in customizable orders like zig-zags and Hilbert Curves.","tags":["article","code","paper","research","pytorch","convolutional-neural-networks","cifar10","autoregression","masked-convolutions","pixelcnn","arxiv:2006.12486"]},{"id":1585,"created_on":"2020-06-24 03:18:20","title":"Breaking the cycle\u2014Colleagues are all you need","description":"A novel approach to performing image-to-image translation between unpaired domains.","tags":["article","code","paper","research","generative-adversarial-networks","computer-vision","image-to-image-translation","arxiv:1911.10538"]},{"id":1586,"created_on":"2020-06-24 03:20:51","title":"Generalized Zero & Few-Shot Transfer for Facial Forgery Detection","description":"Deep Distribution Transfer (DDT), a new transfer learning approach to address the problem of zero and few-shot transfer in the context of facial forgery.","tags":["article","paper","research","anomaly-detection","few-shot-learning","fraud-detection","zero-shot-learning","facial-forgery-detection","deep-distribution-transfer","wasserstein-distance","faceforensics++","dessa","arxiv:2006.11863"]},{"id":1587,"created_on":"2020-06-24 03:25:25","title":"Deep Learning Based Text Classification: A Comprehensive Review","description":"An overview of deep learning approaches to text classification.","tags":["paper","research","tutorial","natural-language-processing","text-classification","survey","arxiv:2004.03705"]},{"id":1588,"created_on":"2020-06-24 03:29:51","title":"Multi-task Training with Hugging Face Transformers and NLP","description":" A recipe for multi-task training with Transformers' Trainer and NLP datasets.","tags":["article","code","notebook","tutorial","huggingface","transformers","natural-language-processing","guide","multi-task-learning","recipe"]},{"id":1589,"created_on":"2020-06-24 03:33:09","title":"jiant","description":"A software toolkit for research on general-purpose text understanding models.","tags":["code","huggingface","pytorch","library","natural-language-processing","multi-task-learning","jiant"]},{"id":1590,"created_on":"2020-06-24 03:36:03","title":"Brain parcellation with TorchIO and HighRes3DNet","description":"A full brain parcellation of a 3D T1-weighted MRI using TorchIO and a pre-trained PyTorch deep learning model.","tags":["code","notebook","tutorial","pytorch","health","mri","torchio","highres3dnet","brain-parcellation"]},{"id":1591,"created_on":"2020-06-24 03:42:50","title":"Basic GUI Calculator in Python","description":"This article will take you through the entire process of developing a basic GUI calculator in Python using tkinter.","tags":["article","code","tutorial","python","program-development"]},{"id":1592,"created_on":"2020-06-24 04:27:58","title":"Text Classification","description":"Re-implemented an article (link is given below) which was on Text classification with CNN, beside this I tried out some ML classification algorithm.","tags":["article","code","convolutional-neural-networks","logistic-regression","random-forests","regression","natural-language-processing","text-classification","decision-tree","xgboost"]},{"id":1595,"created_on":"2020-06-24 15:42:20","title":"multi-task-NLP","description":"A utility toolkit enabling NLP developers to easily train and infer a single model for multiple tasks.","tags":["code","attention","bert","transformers","xlnet","library","natural-language-processing","albert","roberta","multi-task-learning","distil-bert","multi-task-nlp"]},{"id":1596,"created_on":"2020-06-25 00:13:55","title":"Lessons from the PULSE Model and Discussion","description":"Elements of the recent discussion that happened among AI researchers as a result of bias found in the model associated with the PULSE paper.","tags":["article","paper","research","fairness","bias","ethics","arxiv:2003.03808"]},{"id":1597,"created_on":"2020-06-25 00:17:39","title":"Maximizing Business Impact with Machine Learning","description":"how to effectively leverage machine learning to build intelligent products as efficiently as possible.","tags":["article","product-management","metrics","production","monitoring","model-validation"]},{"id":1598,"created_on":"2020-06-25 00:29:18","title":"Automatic Data Augmentation for  Generalization in Deep RL","description":"We compare three approaches for automatically finding an appropriate augmentation combined with two novel regularization terms for the policy and value function","tags":["code","paper","research","pytorch","data-augmentation","reinforcement-learning","kornia","arxiv:2006.12862"]},{"id":1599,"created_on":"2020-06-25 00:42:36","title":"High-Fidelity Generative Image Compression","description":"How to combine Generative Adversarial Networks and learned compression to obtain a state-of-the-art generative lossy compression system.","tags":["article","paper","research","generative-adversarial-networks","computer-vision","image-compression","generative-lossy-compression","bitrates","arxiv:2006.09965"]},{"id":1600,"created_on":"2020-06-25 00:45:26","title":"BERT Distillation with Catalyst","description":"How to distill BERT with Catalyst.","tags":["article","code","tutorial","pytorch","attention","bert","transformers","library","knowledge-distillation","model-compression","natural-language-processing","catalyst"]},{"id":1601,"created_on":"2020-06-25 01:26:17","title":"Distilling Inductive Biases","description":"The power of knowledge distillation for transferring the effect of inductive biases from one model to another.","tags":["article","code","paper","research","knowledge-distillation","model-compression","inductive-bias","arxiv:2006.00555"]},{"id":1602,"created_on":"2020-06-25 04:03:38","title":"Unet Model for Image Segmentation With EfficientNet Encoder","description":"Implemented using tensorflow 2.2.0 with custom train and test step.","tags":["code","notebook","tensorflow","computer-vision","segmentation","unet","efficientnet"]},{"id":1603,"created_on":"2020-06-25 10:40:56","title":"A Million of ML Predictions at the Tip of Your Fingers","description":"Announcement - SashiDo is breaking the barrier to Machine Learning by introducing a fully open-sourced Content Moderation Service.","tags":["article","tutorial","node-js","react","tensorflow","machine-learning","adversarial-image-detection","computer-vision","image-classification","image-recognition","open-source","adversarial-learning","nsfw","content-moderation","nsfw-detection","nsfw-classifier","parse-server","machine-learning-pipilines"]},{"id":1604,"created_on":"2020-06-25 16:30:59","title":"Essence of privacy techniques","description":"Tried to give an overview of privacy techniques which can be used in ML\r\nTechniques -Federated learning, Differential privacy and Secure Multi-party computation.","tags":["article","tutorial","privacy","differential-privacy","federated-learning"]},{"id":1605,"created_on":"2020-06-26 02:19:39","title":"NetHack Learning Environment (NLE)","description":"A procedurally-generated grid-world dungeon-crawl game that strikes a great balance between complexity and speed for single-agent RL research.","tags":["article","code","research","library","reinforcement-learning","game","nethack","gym"]},{"id":1606,"created_on":"2020-06-26 02:24:53","title":"Paraphrase Generation Using T5 model","description":"Simple application using T5 base model fine tuned in Quora Question Pairs to generate paraphrased questions.","tags":["code","transformers","natural-language-processing","question-generation","t5","paraphrase-generation"]},{"id":1607,"created_on":"2020-06-26 02:28:15","title":"Message Passing Query Embedding","description":"MPQE is a model for answering complex queries over knowledge graphs, that learns embeddings of entities in the knowledge graph, & embeddings for variable types.","tags":["code","paper","research","graph-convolutional-networks","embeddings","graph-neural-networks","graphs","knowledge-graphs","mpqe","arxiv:2002.02406"]},{"id":1608,"created_on":"2020-06-26 02:31:17","title":"Quantifying Attention Flow in Transformers","description":"I explain two simple but effective methods, called Attention Rollout and Attention Flow","tags":["article","tutorial","attention","self-attention","transformers","natural-language-processing","attention-flow","attention-rollout"]},{"id":1609,"created_on":"2020-06-26 13:28:50","title":"Google Colab Tips for Power Users","description":"Learn about lesser-known features in Google Colab to improve your productivity.","tags":["article","notebook","colab"]},{"id":1610,"created_on":"2020-06-26 13:43:42","title":"Visualizing Model Comparison","description":"How we can compare the solutions learned by multiple different models.","tags":["article","tutorial","visualization","model-comparison"]},{"id":1612,"created_on":"2020-06-26 21:29:45","title":"C++ for Pythonistas and Data Scientists","description":"An introduction to Cling to help learn C++.","tags":["article","code","c++","python","learning"]},{"id":1613,"created_on":"2020-06-26 22:20:13","title":"Distributed model training in PyTorch","description":"Distributing training jobs allows you to push past the single-GPU bottleneck, developing larger and more powerful models leveraging many GPUs simultaneously.","tags":["article","pytorch","deep-learning","distributed-training"]},{"id":1614,"created_on":"2020-06-27 04:15:51","title":"Natural Language Processing Roadmap","description":"Roadmap for learning NLP topics.","tags":["code","tutorial","natural-language-processing","guide","roadmap"]},{"id":1615,"created_on":"2020-06-27 04:29:04","title":"Weight Poisoning Attacks on Pre-trained Models","description":"How Bert can be infused with nefarious behavior, even after fine-tuning.","tags":["code","notebook","paper","research","attention","bert","transformers","natural-language-processing","adversarial-learning","adversarial-attacks","arxiv:2004.06660"]},{"id":1616,"created_on":"2020-06-27 04:37:16","title":"Leveraging Temporal Context for Object Detection","description":"Object detection architecture leveraging contextual clues across time for each camera deployment in a network, improving recognition of objects","tags":["article","paper","research","tensorflow","ecology","computer-vision","object-detection","faster-rcnn","arxiv:1912.03538"]},{"id":1617,"created_on":"2020-06-27 04:42:47","title":"Expressive Power of Graph Neural Networks","description":"Graph isomorphism problem, the Weisfeiler-Lehman heuristic for graph isomorphism testing, and how it can be used to analyse the expressive power of GNNs.","tags":["article","graph-neural-networks","graphs","graph-isomorphism","weisfeiler-lehman"]},{"id":1620,"created_on":"2020-06-27 10:27:43","title":"rlx: A modular Deep RL library for research","description":"\"rlx\" is a Deep RL library written on top of PyTorch & built for educational and research purpose.","tags":["article","code","pytorch","deep-learning","library","reinforcement-learning"]},{"id":1621,"created_on":"2020-06-27 14:14:23","title":"The Lottery Ticket Hypothesis: A Survey","description":"Dive deeper into the lottery ticket hypothesis and review the literature after the original ICLR best paper award by Frankle & Carbin (2019).","tags":["article","paper","research","tutorial","deep-learning","model-compression","pruning","survey","lottery-ticket-hypothesis"]},{"id":1622,"created_on":"2020-06-27 14:18:13","title":"Building AI Trading Systems","description":"Lessons learned building a profitable algorithmic trading system using Reinforcement Learning techniques.","tags":["article","machine-learning","finance","reinforcement-learning","trading","algorithmic-trading"]},{"id":1623,"created_on":"2020-06-27 14:20:49","title":"Introduction to NLP using Fastai","description":"Implementing and decoding the revolutionary ULMFiT approach to train a language model on any downstream NLP task.","tags":["article","notebook","tutorial","fastai","natural-language-processing","sentiment-analysis","ulmfit"]},{"id":1624,"created_on":"2020-06-27 14:26:43","title":"Avatarify - Create Your Own Photorealistic Avatars","description":"Photorealistic avatars for video-conferencing apps. Democratized.","tags":["code","notebook","paper","research","generative-adversarial-networks","stylegan","avatars","avatar0fy","arxiv:2003.00196"]},{"id":1625,"created_on":"2020-06-27 18:13:24","title":"Beginner's Guide to Altair Visualization","description":"Getting started with Visualization using Altair on Kaggle with this simple tutorial.","tags":["code","notebook","tutorial","visualization","altair","exploratory-data-analysis"]},{"id":1626,"created_on":"2020-06-28 05:58:02","title":"5 Genetic Algorithm Applications Using PyGAD","description":"This tutorial introduces PyGAD, an open-source Python library for implementing the genetic algorithm and training machine learning algorithms.","tags":["article","code","library","genetic-algorithms","pygad"]},{"id":1627,"created_on":"2020-06-28 06:08:37","title":"Timecraft: Synthesizing Time Lapse Videos of Paintings","description":"A learning-based method for synthesizing time lapse videos of paintings.","tags":["article","code","paper","research","video","keras","tensorflow","cvpr-2020","paintings","time-lapse","arxiv:2001.01026"]},{"id":1628,"created_on":"2020-06-28 06:12:20","title":"Deep Reinforcement Learning Amidst Lifelong Non-Stationarity","description":"How can robots learn in changing, open-world environments? We introduce dynamic-parameter MDPs, to capture environments with persistent, unobserved changes. ","tags":["article","paper","research","reinforcement-learning","non-stationarity","off-policy","markov-decision-process","arxiv:2006.10701"]},{"id":1629,"created_on":"2020-06-28 07:37:00","title":"TF Lite Semantic Segmentation Models","description":"Faster and lighter TF Lite models can perform semantic segmentation. ","tags":["article","code","tutorial","deep-learning","library","computer-vision","tf-lite"]},{"id":1630,"created_on":"2020-06-28 07:40:40","title":"Semantic Segmentation + Background Removal + Style Transfer","description":"Running multiple TF Lite models to perform semantic segmentation, remove background, and apply style transfer. ","tags":["code","notebook","tutorial","computer-vision","tf-lite"]},{"id":1633,"created_on":"2020-06-28 14:27:42","title":"FACEAPP Gender Swap Fake detection","description":"In this project we used Deep Learning to detect fake images generated by FaceApp app gender swap feature.","tags":["code","fastai","deep-learning"]},{"id":1634,"created_on":"2020-06-28 16:54:22","title":"Introduction to Probabilistic Programming","description":"A brief intoduction to Probabilistic Programming, a tool for modelling tasks with uncertainty.","tags":["article","code","tutorial","deep-learning","machine-learning","uncertainty","probability"]},{"id":1635,"created_on":"2020-06-28 18:33:43","title":"A Weighted Mutual k-Nearest Neighbour for Classification Mining","description":"kNN revisited","tags":["code","paper","research","k-nearest-neighbors","arxiv:2005.08640"]},{"id":1636,"created_on":"2020-06-29 00:00:47","title":"Automatic translation of the SQUAD dataset to spanish","description":"Machine translation is used on the SQuAD dataset to produce an equivalent dataset in Spanish. Word alignment is applied to produce a synthetic spanisQA corpus.\r\n","tags":["code","paper","research","natural-language-processing","natural-language-understanding","question-answering","spanish","arxiv:1912.05200"]},{"id":1637,"created_on":"2020-06-29 01:14:48","title":"AquVitae: The Easiest Knowledge Distillation Library","description":"AquVitae is a Python library that is the easiest to perform Knowledge Distillation through a very simple API. This library supports TensorFlow and PyTorch. Know","tags":["code","pytorch","tensorflow","deep-learning","machine-learning","library","knowledge-distillation","model-compression","light-weight"]},{"id":1638,"created_on":"2020-06-29 02:56:43","title":"Dakshina Dataset","description":"A collection of text in both Latin and native scripts for 12 South Asian languages.","tags":["code","dataset","paper","research","natural-language-processing","languages","dakshina"]},{"id":1639,"created_on":"2020-06-29 02:58:52","title":"Computer Vision Recipes","description":"This repository provides examples and best practice guidelines for building computer vision systems.","tags":["article","code","tutorial","pytorch","computer-vision","crowd-counting","image-classification","object-detection","segmentation","action-recognition","recipe","keypoints-detection"]},{"id":1640,"created_on":"2020-06-29 03:03:11","title":"Smooth Adversarial Training","description":"ReLU activation function significantly weakens adversarial training due to its non-smooth nature. Hence we propose smooth adversarial training (SAT).","tags":["paper","research","relu","adversarial-learning","adversarial-training","sat","arxiv:2006.14536"]},{"id":1641,"created_on":"2020-06-29 03:06:53","title":"Hugging Captions","description":"Generate realistic instagram worthy captions using transformers given a hasthtag and a small text snippet.","tags":["article","code","huggingface","transformers","computer-vision","image-captioning","language-modeling","natural-language-processing","text-generation","instagram"]},{"id":1642,"created_on":"2020-06-29 05:45:23","title":"Sending Email with .docx Attachment using Python","description":"This article will explore how to send email with attachment in Python and how it can be integrated in your existing data science projects.","tags":["article","tutorial","python","program-development"]},{"id":1643,"created_on":"2020-06-29 07:39:15","title":"FastAPI for Flask Users","description":"A comprehensive guide to FastAPI with a side-by-side code comparison with Flask ","tags":["api","article","tutorial","fastapi","flask"]},{"id":1644,"created_on":"2020-06-29 12:42:44","title":"A research guide for data scientists","description":"Tips on research from top data scientists","tags":["article","research","deep-learning","natural-language-processing"]},{"id":1645,"created_on":"2020-06-29 17:16:17","title":"Using Data Science Pipelines for Disaster Response","description":"Uses ETL and ML pipeline to build an NLP system for classification of messages into appropriate disaster categories","tags":["article","code","flask","machine-learning","natural-language-processing","data-science","natural-disasters","etl"]},{"id":1646,"created_on":"2020-06-29 19:47:58","title":"Twitter Turing Test","description":"Can you guess whether this tweet is written by a human or generated by a neural network?","tags":["code","dataset","tutorial","huggingface","python","gpt2","transformers","natural-language-processing","text-generation","demo","twitter","modelzoo"]},{"id":1647,"created_on":"2020-06-29 21:13:57","title":"Mixed Precision Training ","description":"Mixed precision  Investigation  in using  16-bit and 32-bit floating-point types in a model during training","tags":["article","tutorial","machine-learning","training","mixed-precision"]},{"id":1648,"created_on":"2020-06-30 02:34:54","title":"STUMPY: A Powerful and Scalable Python Library for Time Series","description":"STUMPY is a powerful and scalable Python library for computing a Matrix Profile, which can be used for a variety of time series data mining tasks.","tags":["article","code","video","library","anomaly-detection","time-series","numba","dask","pattern-matching","matrix-profile","pydata"]},{"id":1649,"created_on":"2020-06-30 02:39:32","title":"Model Serving using FastAPI and streamlit","description":"Simple example of usage of streamlit and FastAPI for ML model serving.","tags":["article","code","tutorial","video","fastapi","computer-vision","semantic-segmentation","streamlit","segmentation","deeplabv3"]},{"id":1650,"created_on":"2020-06-30 02:49:57","title":"The Reformer - Pushing the Limits of Language Modeling","description":"An in-depth understanding of each of the key features of the Reformer.","tags":["article","code","notebook","paper","research","tutorial","huggingface","transformers","language-modeling","natural-language-processing","reformer","arxiv:2001.04451"]},{"id":1651,"created_on":"2020-06-30 02:52:41","title":"High-Resolution Image Inpainting","description":"High-Resolution Image Inpainting with Iterative Confidence Feedback and Guided Upsampling.\r\n","tags":["article","paper","research","computer-vision","inpainting","demo","high-resolution","image-inpainting","arxiv:2005.11742"]},{"id":1652,"created_on":"2020-06-30 02:58:12","title":"Julia for Pythonistas","description":"Julia looks and feels a lot like Python, only much faster. It's dynamic, expressive, extensible, with batteries included, in particular for Data Science.","tags":["code","notebook","tutorial","julia","python"]},{"id":1653,"created_on":"2020-06-30 03:01:50","title":"MARGE: Pre-training via Paraphrasing","description":"A retrieval model maps a document to a set of related documents, which a reconstruction model paraphrases to maximize the likelihood of the original. ","tags":["paper","research","natural-language-processing","pretraining","paraphrasing","marge","arxiv:2006.15020"]},{"id":1654,"created_on":"2020-06-30 03:58:46","title":"3D Detection and Domain Adaptation","description":"1st Place Solution for Waymo Open Dataset Challenge","tags":["dataset","paper","research","automobile","3d","autonomous-vehicles","computer-vision","domain-adaptation","object-detection","waymo","arxiv:2006.15505"]},{"id":1655,"created_on":"2020-06-30 06:05:41","title":"Rethinking pre-training and self-training","description":"This new paper from Google Brain investigates self-training and how it compares to pre-training and self-supervised learning for the the same set of tasks.","tags":["article","paper","research","deep-learning","machine-learning","self-supervised-learning","pretraining","arxiv:2006.06882","self-training"]},{"id":1656,"created_on":"2020-06-30 13:03:25","title":"Insights from Stackoverflow Dataset","description":"Analysis of Stackoverflow Developers Dataset to answer some business questions","tags":["article","code","python","machine-learning","data-science","exploratory-data-analysis"]},{"id":1657,"created_on":"2020-06-30 18:00:11","title":"Fast Api with Dockerization of your ML Models","description":"In this GitHub repo you can able to know and learn how to build a fast API for testing your ML model and can test your ML model with UI and to Dockerize your ML","tags":["article","code","docker","fastapi","flask","production"]},{"id":1658,"created_on":"2020-07-01 02:22:10","title":"SimCLR - Contrastive Learning of Visual Representations","description":"How to load pretrained\/finetuned SimCLR models from hub modules for fine-tuning.","tags":["article","code","notebook","paper","research","library","computer-vision","fine-tuning","representation-learning","self-supervised-learning","unsupervised-learning","simclr","contrastive-learning","pretraining","arxiv:2002.05709"]},{"id":1659,"created_on":"2020-07-01 02:26:20","title":"Evaluation of Text Generation: A Survey","description":"Evaluation methods of natural language generation (NLG) and language modeling.","tags":["paper","research","language-modeling","natural-language-processing","text-generation","survey","natural-language-generation","arxiv:2006.14799"]},{"id":1660,"created_on":"2020-07-01 02:50:55","title":"Distributed model training using Horovod","description":"Distributing training jobs allows you to push past the single-GPU bottleneck, developing larger and more powerful models leveraging many GPUs simultaneously.","tags":["article","tutorial","pytorch","distributed-training","horovod"]},{"id":1661,"created_on":"2020-07-01 06:42:59","title":"SpineNet: A Novel Architecture for Object Detection","description":"A meta architecture called a scale-permuted model that enables two major improvements on backbone architecture design,iscovered with neural architecture search.","tags":["article","code","paper","research","convolutional-neural-networks","computer-vision","object-detection","neural-architecture-search","cvpr-2020","spinenet","arxiv:1912.05027"]},{"id":1662,"created_on":"2020-07-01 07:00:50","title":"Image synthesis at CVPR 2020","description":"An overview of the different approaches to image synthesis at CVPR 2020.","tags":["article","research","computer-vision","image-generation","image-synthesis","survey","cvpr-2020"]},{"id":1663,"created_on":"2020-07-01 07:08:45","title":"Sktime","description":"A python toolbox for machine learning with time series.","tags":["article","code","library","forecasting","time-series","time-series-forecasting","time-series-regression"]},{"id":1664,"created_on":"2020-07-01 07:14:00","title":"Sentiment Analysis: Key Milestones, Challenges and New Directions","description":"An overview of sentiment analysis, it's progress and what's ahead.","tags":["paper","research","tutorial","video","natural-language-processing","sentiment-analysis","survey","arxiv:2005.00357"]},{"id":1665,"created_on":"2020-07-01 07:17:48","title":"BERTology Meets Biology","description":"Interpreting Attention in Protein Language Models.","tags":["article","code","paper","research","attention","bert","transformers","health","healthcare","interpretability","language-modeling","natural-language-processing","biology","bertology","proteins","language-models","arxiv:2006.15222"]},{"id":1666,"created_on":"2020-07-01 07:20:52","title":"Serverless BERT with HuggingFace and AWS Lambda","description":"Build a serverless question-answering API with BERT, HuggingFace, the Serverless Framework, and AWS Lambda.","tags":["api","article","tutorial","aws","huggingface","attention","bert","transformers","natural-language-processing","question-answering","serverless","aws-lambda"]},{"id":1667,"created_on":"2020-07-01 13:18:08","title":"Using TensorRT for accelerated deep learning inference","description":"Accelerating inference of TensorFlow models using TensorRT.","tags":["article","code","notebook","tutorial","tensorflow","tensorrt"]},{"id":1668,"created_on":"2020-07-01 13:33:49","title":"Model-based Reinforcement Learning: A Survey","description":"A survey of the integration of both fields, better known as model-based reinforcement learning.","tags":["paper","research","reinforcement-learning","survey","model-based-reinforcement-learning","markov-decision-process","arxiv:2006.16712"]},{"id":1669,"created_on":"2020-07-01 16:57:22","title":"Personal Data Science Learning Plan","description":"This is my personal learning plan that I followed to transition from a software-engineer role to an Machine Learning Engineer role.","tags":["code","tutorial","machine-learning","data-science"]},{"id":1670,"created_on":"2020-07-01 18:28:02","title":"Generate QR Code using Python","description":"This article will explore how to generate QR code in Python and some useful creation features from pyqrcode library.","tags":["article","tutorial","python","program-development"]},{"id":1671,"created_on":"2020-07-01 19:47:08","title":"Churn Prediction with PyCaret","description":"Customer Churn is when customers leave a service in a given period of time, which is bad for business.","tags":["article","code","dataset","notebook","tutorial","python","machine-learning","automl","classification","exploratory-data-analysis","churn","pycaret"]},{"id":1672,"created_on":"2020-07-01 19:49:59","title":"Clustering Spotify Songs","description":"Clustering songs from my Spotify playlist","tags":["article","code","python","machine-learning","clustering","data-science","exploratory-data-analysis"]},{"id":1673,"created_on":"2020-07-02 03:52:20","title":"Involutive MCMC: a Unifying Framework","description":"iMCMC provides a unified view of many known MCMC algorithms, which facilitates the derivation of powerful extensions.","tags":["paper","research","markov-chain-monte-carlo","mcmc","involutive","arxiv:2006.16653"]},{"id":1674,"created_on":"2020-07-02 03:55:18","title":"Fiber: Distributed Computing for AI Made Simple","description":"Fiber is a Python distributed computing library for modern computer clusters.","tags":["article","code","paper","research","library","distributed-training","uber","multiprocessing","clusters","fiber","arxiv:2003.11164"]},{"id":1675,"created_on":"2020-07-02 03:57:52","title":"Deterministic Uncertainty Quantification","description":"Method for training a deterministic deep model that can find and reject out of distribution data points at test time with a single forward pass.","tags":["code","paper","research","deep-q-networks","uncertainty","deterministic-uncertainty-quantification","arxiv:2003.02037"]},{"id":1676,"created_on":"2020-07-02 04:01:31","title":"CatBoostLSS","description":"An extension of CatBoost to probabilistic forecasting.","tags":["code","paper","research","forecasting","uncertainty","catboostlss","probabilistic-forecasts","catboost","gamlss","distributional-regression","arxiv:2001.02121"]},{"id":1677,"created_on":"2020-07-02 04:06:19","title":"Building Level 3 Conversational AI Assistants","description":"Presentations, panels, and fireside chats addressing all topics related to the creation of Level 3 AI assistants.","tags":["article","research","video","chatbot","natural-language-processing","rasa","conversational-ai","playlist","level-3"]},{"id":1678,"created_on":"2020-07-02 12:13:19","title":"NSFW Image Classification REST API built with TensorFlow.JS","description":"A ready-to-use & open-source NSFW Image Classification REST API built with TensorFlow.JS and NSFW.JS for effortless Content Moderation","tags":["api","article","code","tutorial","node-js","tensorflow","tensorflow-js","convolutional-neural-networks","library","adversarial-image-detection","computer-vision","image-classification","image-recognition","object-detection","pretraining","open-source","adversarial-learning","models","demo","nsfw","content-moderation","nsfw-detection","nsfw-classifier","parse-server","machine-learning-pipelines"]},{"id":1679,"created_on":"2020-07-02 16:42:50","title":"Avocado sales","description":"Exploratory analysis to answer the question: has the trend \u2018avocado toast\u2019 worshiped by millenials caused an increase on avocado sales?","tags":["article","code","dataset","notebook","exploratory-data-analysis"]},{"id":1680,"created_on":"2020-07-02 16:47:52","title":"Feature engineering for Logistic Regression","description":"A dataset to focus on data cleaning and feature prep. ","tags":["article","code","dataset","notebook","video","logistic-regression","regression","feature-engineering","feature-selection"]},{"id":1681,"created_on":"2020-07-03 04:02:52","title":"A Survey on Deep Learning for Localization and Mapping","description":"Towards the Age of Spatial Machine Intelligence","tags":["paper","research","computer-vision","object-localization","survey","mapping","spatial","odometry","smis","arxiv:2006.12567"]},{"id":1682,"created_on":"2020-07-03 04:05:14","title":"Debiased Contrastive Learning","description":"We develop a debiased contrastive objective that corrects for the sampling of same-label data points, even without knowledge of the true labels.","tags":["code","paper","research","simclr","contrastive-learning","bias","debiasing","stl10","arxiv:2007.00224"]},{"id":1683,"created_on":"2020-07-03 04:07:29","title":"Supermasks in Superposition","description":"SupSup leverages the expressive power of neural network connectivity. ","tags":["article","code","paper","research","superposition","supermasks","supsup","arxiv:2006.14769"]},{"id":1684,"created_on":"2020-07-03 04:09:18","title":"DrRepair: Learning to Repair Programs from Error Messages","description":"Graph-based, Self-Supervised Program Repair from Diagnostic Feedback","tags":["code","paper","research","michiyasunaga","arxiv:2005.10636"]},{"id":1685,"created_on":"2020-07-03 04:12:28","title":"Text Data Cleanup - Dynamic Embedding Visualisation","description":"Identify noisy text in a Machine Translation dataset through dynamic text embedding visualisation.","tags":["article","tutorial","clustering","embeddings","natural-language-processing","visualization","bokeh"]},{"id":1686,"created_on":"2020-07-03 04:16:11","title":"Causal Discovery in Physical Systems from Videos","description":"Discover the structural dependencies among environmental and object variables: inferring the type and strength of interactions that have a causal effect on the ","tags":["article","paper","research","unsupervised-learning","causal-discovery","keypoint-detection","unsupervised-keypoint-detection","multi-body-interaction","fabric-manipulation","arxiv:2007.00631"]},{"id":1687,"created_on":"2020-07-03 04:19:45","title":"Similarity Search for Efficient Active Learning","description":"We exploit this skew in large training datasets to reduce the number of unlabeled examples considered in each selection round with nearest nearest neighbors.","tags":["paper","research","active-learning","search","semi-supervised-learning","similarity-search","arxiv:2007.00077"]},{"id":1688,"created_on":"2020-07-03 04:23:58","title":"Python Implementation of Reinforcement Learning: An Introduction ","description":"Plot replications, exercise solutions and Anki flashcards for the entire book by chapters.","tags":["code","tutorial","reinforcement-learning","book"]},{"id":1689,"created_on":"2020-07-03 04:29:04","title":"Offline Reinforcement Learning","description":"Challenges, algorithms and benchmarks.","tags":["tutorial","video","reinforcement-learning","survey","offline-reinforcement-learning","overview"]},{"id":1690,"created_on":"2020-07-03 04:32:09","title":"Opening Up the Black Box: Model Understanding w\/ Captum & PyTorch","description":"A look at using Captum for model interpretability with PyTorch.","tags":["video","pytorch","interpretability","captum"]},{"id":1691,"created_on":"2020-07-03 04:40:05","title":"The Simplest Way to Serve your NLP Model in Production w\/ Python ","description":"From scikit-learn to Hugging Face Pipelines, learn the simplest way to deploy ML models using Ray Serve.","tags":["article","tutorial","huggingface","scikit-learn","production","ray"]},{"id":1692,"created_on":"2020-07-03 04:42:45","title":"Low-Dimensional Hyperbolic Knowledge Graph Embeddings","description":"Low-dimensional knowledge graph embeddings that simultaneously capture hierarchical relations and logical patterns.","tags":["code","paper","research","video","embeddings","graph-embedding","graph-neural-networks","graphs","knowledge-graphs","acl-2020","arxiv:2005.00545"]},{"id":1693,"created_on":"2020-07-03 04:46:39","title":"On the training dynamics of deep networks with L2 regularization","description":"Role of L2 regularization in deep learning, and uncover simple relations between the performance of the model, the L2 coefficient, the learning rate, etc.","tags":["paper","research","learning-rates","regularization","l2","l2-coefficient","arxiv:2006.08643"]},{"id":1694,"created_on":"2020-07-03 05:46:00","title":"Adversarial Training Improves Product Discovery","description":"Method automatically generates meaningful negative training examples for deep-learning model.","tags":["article","paper","research","adversarial-learning","adversarial-training","product-discovery"]},{"id":1695,"created_on":"2020-07-03 06:07:38","title":"AI-Art","description":"PyTorch implementation of Neural Style Transfer, Pix2Pix, CycleGAN, and Deep Dream!","tags":["article","code","dataset","paper","research","tutorial","pytorch","generative-adversarial-networks","cyclegan","generative-models","pix2pix","neural-style-transfer","arxiv:1508.06576","deep-dream"]},{"id":1697,"created_on":"2020-07-03 23:43:48","title":"NAG - Network for Adversary Generation [Pytorch]","description":"Generative approach to model the manifold of perturbations that can cause CNN based classifiers to behave absurdly. ","tags":["article","code","paper","research","video","pytorch","convolutional-neural-networks","generative-adversarial-networks","adversarial-learning","adversarial-attacks","arxiv:1712.03390"]},{"id":1698,"created_on":"2020-07-04 01:07:48","title":"Learning to Cartoonize Using White-box Cartoon Representations","description":"An approach for image cartoonization using GANs.","tags":["article","code","paper","research","generative-adversarial-networks","computer-vision","style-transfer","cvpr-2020","cartoonize","cartoongan"]},{"id":1699,"created_on":"2020-07-04 01:10:18","title":"Reinforcement Learning Tutorial","description":"Important reinforcement learning (RL) algorithms, including policy iteration, Q-Learning, and Neural Fitted Q.","tags":["code","notebook","tutorial","reinforcement-learning"]},{"id":1701,"created_on":"2020-07-04 03:46:43","title":"UFC predictor","description":"A UFC predictor","tags":["sports","demo","martial-arts","ufc"]},{"id":1702,"created_on":"2020-07-04 04:51:18","title":"Face Recognition Techniques","description":"Face Detection and Recognition techniques using traditional CV and also using new deep learning method.","tags":["code","tutorial","computer-vision","face-recognition"]},{"id":1703,"created_on":"2020-07-04 09:22:50","title":"Awesome Deep RL","description":"This project is built for people who are learning and researching on the latest deep reinforcement learning methods.","tags":["code","deep-learning","multi-agent-reinforcement-learning","reinforcement-learning","game-theory"]},{"id":1704,"created_on":"2020-07-04 10:42:53","title":"LSTM Forecast Model for Stock Price Prediction using Keras","description":" Easy to understand LSTM forecast model for Stock Price Prediction. The dataset contains daywise details of the GOOGL stock from May,2019-May 2018.","tags":["code","dataset","keras","tensorflow","lstm","time-series","time-series-prediction"]},{"id":1705,"created_on":"2020-07-04 11:05:27","title":"Handwritten Japanese Character Recognition by Transfer Learning","description":"A Transfer Learning based approach to recognizing the handwritten Hiragana characters of the Kusushiji-MNIST(KMNIST) dataset. ","tags":["code","dataset","paper","research","keras","residual-networks","transfer-learning","arxiv:1512.03385"]},{"id":1706,"created_on":"2020-07-04 11:05:28","title":"PokeZoo","description":"A deep learning based web-app developed using the MERN stack and Tensorflow.js. ","tags":["code","javascript","node-js","react","tensorflow","tensorflow-js","deep-learning","machine-learning","full-stack","computer-vision","image-classification","demo"]},{"id":1708,"created_on":"2020-07-04 18:38:23","title":"Multithreaded Machine Learning Training & Inference in Browser","description":"How to train and test a deep neural network model in browser by complying to browser standards","tags":["article","code","tensorflow-js","machine-learning"]},{"id":1709,"created_on":"2020-07-05 05:25:34","title":"Anti-Patterns in NLP (8 types of NLP idiots)","description":"A talk which discusses the recurring industrial problems in making NLP solutions. ","tags":["tutorial","video","python","attention","bert","deep-learning","transformers","natural-language-processing","search","transfer-learning"]},{"id":1710,"created_on":"2020-07-05 05:47:35","title":"NLP-task-visualizer-app","description":"This application designed with streamlit library will help in visualizing NLP tasks on text entered by you. ","tags":["article","code","tutorial","machine-learning","library","natural-language-processing","data-science"]},{"id":1711,"created_on":"2020-07-05 16:03:28","title":"Forecasting the weather with neural ODEs","description":"Interesting blog post applying neural ODEs to the problem of weather forecasting.","tags":["article","forecasting","neural-ode","weather"]},{"id":1713,"created_on":"2020-07-06 15:29:17","title":"Core Machine Learning Implementations","description":"This repo contains mathematical derivations and python implementations in numpy for key machine learning algorithms","tags":["article","code","tutorial","decision-trees","linear-regression","logistic-regression","neural-networks","random-forests","regression","gradient-boosting","k-nearest-neighbors","decision-tree"]},{"id":1714,"created_on":"2020-07-06 18:22:15","title":"Text Generator","description":"A Text Generator based on Markov Chain","tags":["article","code","hidden-markov-models","machine-learning"]},{"id":1715,"created_on":"2020-07-06 18:25:16","title":"Image Classifier","description":"Pure JavaScript Image Classifier","tags":["article","machine-learning","computer-vision","image-categorization"]},{"id":1716,"created_on":"2020-07-07 03:17:56","title":"Introduction to Anomaly Detection in Python","description":"Provides an introduction to anomaly detection in the context of machine learning.","tags":["article","code","tutorial","machine-learning"]},{"id":1717,"created_on":"2020-07-07 04:09:35","title":"TaBERT","description":"Pretraining for Joint Understanding of Textual and Tabular Data","tags":["article","code","paper","research","attention","bert","transformers","library","natural-language-processing","pretraining","tabular-data","acl-2020","tabert","arxiv:2005.08314"]},{"id":1718,"created_on":"2020-07-07 04:13:44","title":"Mathematics for Machine Learning - Linear Algebra","description":"Welcome to the \u201cMathematics for Machine Learning: Linear Algebra\u201d course, offered by Imperial College London. ","tags":["tutorial","video","linear-algebra"]},{"id":1719,"created_on":"2020-07-07 04:17:11","title":"Texthero","description":"Text preprocessing, representation and visualization from zero to hero.","tags":["article","code","library","clustering","natural-language-processing","preprocessing","data-cleaning","text-processing","texthero"]},{"id":1720,"created_on":"2020-07-07 04:19:13","title":"JAX: Accelerated Machine Learning Research","description":"This talk will introduce JAX and its core function transformations with a live demo. ","tags":["code","tutorial","video","jax","scipy-2020"]},{"id":1721,"created_on":"2020-07-07 04:21:20","title":"TensorflowTTS","description":"Real-Time State-of-the-art Speech Synthesis for Tensorflow 2.","tags":["code","tensorflow","library","natural-language-processing","speech","speech-synthesis","text-to-speech-synthesis"]},{"id":1722,"created_on":"2020-07-07 04:23:38","title":"spaczz: Fuzzy matching and more for spaCy","description":"Fuzzy matching and more functionality for spaCy.","tags":["code","spacy","library","natural-language-processing","regex","fuzzy-matching"]},{"id":1723,"created_on":"2020-07-07 04:26:45","title":"BioSyn","description":"Biomedical Entity Representations with Synonym Marginalization","tags":["code","paper","research","health","library","named-entity-recognition","natural-language-processing","biomedical","demo","entity-normalization","synonym","biosyn","arxiv:2005.00239"]},{"id":1724,"created_on":"2020-07-08 04:02:50","title":"Image Classifier: In the Browser","description":"Using Tensorflow.js to make the prediction directly in the browser.","tags":["article","code","tutorial","tensorflow","tensorflow-js","convolutional-neural-networks","computer-vision","image-classification","demo"]},{"id":1725,"created_on":"2020-07-08 04:05:32","title":"First Steps with TensorFlow.js","description":"How to create basic AI models and use more sophisticated models with TensorFlow.js.","tags":["article","tutorial","tensorflow","tensorflow-js"]},{"id":1726,"created_on":"2020-07-08 04:15:07","title":"Photon: A Robust Cross-Domain Text-to-SQL System","description":"A robust, modular, cross-domain NLIDB that can flag natural language input to which a SQL mapping cannot be immediately determined. ","tags":["code","paper","research","video","sql","natural-language-processing","demo","salesforce","acl-2020","photon"]},{"id":1727,"created_on":"2020-07-08 04:18:53","title":"Training GANs - From Theory to Practice","description":"Optimizing min-max loss functions that arise in training GANs.","tags":["article","code","paper","research","generative-adversarial-networks","training","loss","loss-functions","arxiv:2006.12376"]},{"id":1728,"created_on":"2020-07-08 04:24:07","title":"Bounding Box Prediction from Scratch using PyTorch","description":"Multi-Task learning \u2014 Bounding Box Regression + Image Classification","tags":["article","code","tutorial","pytorch","computer-vision","image-classification","multi-task-learning","bounding-box-regression"]},{"id":1729,"created_on":"2020-07-08 04:28:13","title":"Comment Classification Using BERT (multi-language) Fine-Tuning","description":"We are going to use BERT layer in a model applying Keras.","tags":["article","code","tutorial","keras","tensorflow","attention","bert","transformers","fine-tuning","natural-language-processing","multi-language","comment-classification"]},{"id":1730,"created_on":"2020-07-08 04:30:28","title":"TextBrewer","description":"a PyTorch-based model distillation toolkit for natural language processing.","tags":["code","paper","research","library","model-compression","natural-language-processing","distillation","model-distillation","arxiv:2002.12620"]},{"id":1731,"created_on":"2020-07-08 04:32:07","title":"Matplotlib Cheatsheets","description":"Official Matplotlib cheat sheets.","tags":["code","tutorial","matplotlib","cheatsheet"]},{"id":1732,"created_on":"2020-07-08 07:18:57","title":"Book Depository Dataset","description":"A large collection of books, scraped from bookdepository.com","tags":["article","code","dataset","demo"]},{"id":1734,"created_on":"2020-07-08 12:29:38","title":"Data ANZ Virtual Internship","description":"For the given data of 100 hypothetical customers of their transaction history of 3 months, draw some unique and interesting insights with the features. Build a ","tags":["code","notebook","decision-trees","linear-regression","machine-learning","regression","exploratory-data-analysis"]},{"id":1735,"created_on":"2020-07-08 15:57:14","title":"Criticker Dataset","description":"Yet another dataset about Movies, TV Shows and Games","tags":["article","code","dataset","demo"]},{"id":1736,"created_on":"2020-07-08 16:35:00","title":"Matplotlib Style Configurator","description":"Ever wondered what all those matplotlib rc parameters do? Here's a interactive plot style customizer, made with Streamlit.","tags":["code","matplotlib","streamlit","demo"]},{"id":1737,"created_on":"2020-07-08 18:22:40","title":"codeBERT - Automated code docstring review with transformers","description":"codeBERT provide a one command line to check if your code docstrings are up-to-date.\r\n","tags":["code","tutorial","video","huggingface","attention","bert","machine-learning","transformers","library","natural-language-processing","ml-on-code","machine-learning-on-code","documentation"]},{"id":1739,"created_on":"2020-07-08 21:34:44","title":"NumPy Fundamentals for Data Science and Machine Learning","description":"In-depth interactive tutorial of NumPy fundamentals for data science & machine learning. From the ndarray object to applied linear algebra. Project is 70% done.","tags":["article","code","tutorial","python","numpy"]},{"id":1740,"created_on":"2020-07-09 00:17:51","title":"Machine Learning Monthly June 2020","description":"A monthly compilation of some of the most exciting things in machine learning curated by Daniel Bourke.\r\n\r\nNow with a video version!","tags":["article","podcast","video","newsletter"]},{"id":1741,"created_on":"2020-07-09 01:34:13","title":"carefree-learn","description":"A minimal Automatic Machine Learning (AutoML) solution for tabular datasets based on PyTorch.","tags":["code","video","pytorch","library","automl","tabular-data","tabular"]},{"id":1742,"created_on":"2020-07-09 01:41:11","title":"PyTorch Implementation of Differentiable SDE Solvers","description":"Differentiable SDE solvers with GPU support and efficient sensitivity analysis.","tags":["code","pytorch","library","stochastic-differential-equation","sde"]},{"id":1743,"created_on":"2020-07-09 01:51:41","title":"How to Benchmark Models with Transformers","description":"HuggingFace's Transformer library allows users to benchmark models for both TensorFlow 2 and PyTorch using the PyTorchBenchmark and TensorFlowBenchmark classes.","tags":["code","notebook","tutorial","huggingface","pytorch","tensorflow","transformers","natural-language-processing","benchmarking"]},{"id":1744,"created_on":"2020-07-09 01:53:46","title":"AutoKeras","description":"AutoML library for deep learning.","tags":["code","keras","library","automl","autokeras"]},{"id":1745,"created_on":"2020-07-09 01:57:33","title":"Methods - Papers With Code","description":"Stay up-to-date with research papers on machine learning components.","tags":["machine-learning","methods","platform"]},{"id":1746,"created_on":"2020-07-09 02:00:40","title":"Torch-Struct: Structured Prediction Library","description":"A library of tested, GPU implementations of core structured prediction algorithms for deep learning applications.","tags":["code","notebook","paper","research","video","pytorch","conditional-random-fields","hidden-markov-models","library","acl-2020","torch-struct","arxiv:2002.00876"]},{"id":1747,"created_on":"2020-07-09 02:04:59","title":"Infinite-Width Neural Networks for Any Architecture","description":"What does an infinitely wide transformer look like?","tags":["code","notebook","paper","research","wide-networks","infinite-width","ntk4a","neural-tangent-kernel","arxiv:2006.14548"]},{"id":1748,"created_on":"2020-07-09 02:23:25","title":"Continuous Machine Learning (CML)","description":"CML helps to organize MLOps infrastructure on top of the traditional software engineering stack instead of creating separate AI platforms.","tags":["article","code","library","production","dvc","mlops","github-actions","cml","ci-cd"]},{"id":1749,"created_on":"2020-07-09 02:25:09","title":"tune-sklearn","description":"A scikit-learn API on RayTune.","tags":["article","code","scikit-learn","library","hyperparameter-tuning","hyperparameter-optimization"]},{"id":1750,"created_on":"2020-07-09 10:30:30","title":"picTranslate: Seamless live Image Text translator","description":"Given an image with text on it, this app can give you a new image with text modified into a different language.","tags":["article","code","tutorial","aws","autoencoders","convolutional-neural-networks","translation","computer-vision","optical-character-recognition"]},{"id":1752,"created_on":"2020-07-10 02:41:43","title":"PyTorch Pruning | How it's Made by Michela Paganini","description":"In this talk, you will learn about pruning, why it's important and how to get started using PyTorch's Pruning (torch.nn.utils.prune).","tags":["video","pytorch","model-compression","pruning"]},{"id":1753,"created_on":"2020-07-10 02:44:11","title":"TUDatasets","description":"A collection of benchmark datasets for graph classification and regression.","tags":["article","code","dataset","paper","research","regression","graph-classification","graph-neural-networks","graphs","graph-regression","tudatasets"]},{"id":1754,"created_on":"2020-07-10 02:46:07","title":"Full Stack Deep Learning","description":"Full Stack Deep Learning helps you bridge the gap from training machine learning models to deploying AI systems in the real world.","tags":["code","course","tutorial","deep-learning","full-stack","production","mlops"]},{"id":1755,"created_on":"2020-07-10 02:51:24","title":"Easy OCR","description":"Ready-to-use OCR with 40+ languages supported including Chinese, Japanese, Korean and Thai.\r\n\r\n","tags":["code","lstm","library","computer-vision","optical-character-recognition","resnet","demo"]},{"id":1756,"created_on":"2020-07-10 02:53:13","title":"Linear Attention Transformer","description":"A fully featured Transformer that mixes (QK\u1d40)V local attention with Q(K\u1d40V) global attention (scales linearly with respect to sequence length).","tags":["code","paper","research","attention","transformers","natural-language-processing","linear","linear-attention","linear-attention-transformer","arxiv:2006.16236"]},{"id":1757,"created_on":"2020-07-10 11:51:00","title":"Machine Learning Toolbox","description":"A curated list of 100+ libraries for all parts of the Machine Learning workflow","tags":["article","machine-learning","library","collection"]},{"id":1758,"created_on":"2020-07-10 18:15:37","title":"Age, Gender, Race Prediction","description":"Using Fastai Library (Pytorch) and Resnet Architecure I implemnted a CNN Model to identify the stage of the Blindness based on the given image of Retina. You ca","tags":["code","dataset","fastai","flask","keras","pytorch","convolutional-neural-networks","deep-learning","library"]},{"id":1759,"created_on":"2020-07-10 18:54:54","title":"Emotion Recognition from Tom and Jerry videos","description":"Developed an application that classifies the emotion depicted by Tom and Jerry in each frame into one of the following : happy, angry, sad or suprised.","tags":["code","video","deep-learning","computer-vision","emotion-recognition","demo"]},{"id":1760,"created_on":"2020-07-11 04:42:17","title":"Dataturks","description":"ML data annotations made super easy for teams, provides support for Image Annotation, Text and NER Annotation, Video Annotation.","tags":["library","annotation","computer-vision","named-entity-recognition","natural-language-processing","segmentation","bounding-box"]},{"id":1761,"created_on":"2020-07-11 04:46:09","title":"Prodigy","description":"Radically efficient machine teaching. An annotation tool powered by active learning.","tags":["code","video","library","active-learning","annotation","semi-supervised-learning"]},{"id":1762,"created_on":"2020-07-11 04:48:19","title":"Superintendent","description":"Practical active learning in python.","tags":["code","library","active-learning","annotation","labeling","semi-supervised-learning","widget","ipywidget"]},{"id":1763,"created_on":"2020-07-11 04:50:46","title":"Audio Annotator","description":"Javascript web interface for annotating audio data.","tags":["code","library","annotation","audio","audio-tagging"]},{"id":1764,"created_on":"2020-07-11 04:53:06","title":"EchoML","description":"\ud83d\udd09 A web app to play, visualize, and annotate your audio files for machine learning.","tags":["code","azure","library","annotation","audio","audio-tagging","audio-visualizer","echoml"]},{"id":1765,"created_on":"2020-07-11 04:58:53","title":"UCI ML Datasets","description":"We currently maintain 507 data sets as a service to the machine learning community.","tags":["library","datasets"]},{"id":1766,"created_on":"2020-07-11 05:01:41","title":"fast.ai Datasets","description":"Collections of original and reduced datasets for popular data sources.","tags":["library","computer-vision","natural-language-processing","coco","datasets","imagenet"]},{"id":1767,"created_on":"2020-07-11 05:05:31","title":"Imagenette","description":"Imagenette is a subset of 10 easily classified classes from Imagenet.","tags":["code","dataset","computer-vision","imagenet","imagenette"]},{"id":1768,"created_on":"2020-07-11 05:08:02","title":"TextAugment","description":"Improving Short Text Classification through Global Augmentation Methods","tags":["code","library","data-augmentation","natural-language-processing"]},{"id":1769,"created_on":"2020-07-11 05:10:10","title":"niacin","description":"A Python library for replacing the missing variation in your text data.\r\n\r\n","tags":["code","library","data-augmentation","natural-language-processing","enrichement","negative-sampling"]},{"id":1770,"created_on":"2020-07-11 05:12:49","title":"imgaug","description":"Image augmentation for machine learning experiments.\r\n\r\n","tags":["code","library","computer-vision","cropping","data-augmentation","affine-transformations","segmentation-maps"]},{"id":1771,"created_on":"2020-07-11 05:16:17","title":"Albumentations","description":"Fast image augmentation library and easy to use wrapper around other libraries.","tags":["article","code","notebook","library","computer-vision","data-augmentation","demo"]},{"id":1772,"created_on":"2020-07-11 05:19:05","title":"Augmentor","description":"Image augmentation library in Python for machine learning.","tags":["code","library","computer-vision","data-augmentation"]},{"id":1773,"created_on":"2020-07-11 05:23:43","title":"Audiomentations","description":"A Python library for audio data augmentation. Inspired by albumentations. ","tags":["code","library","audio","data-augmentation"]},{"id":1774,"created_on":"2020-07-11 05:25:50","title":"TRGD: Text Recognition Data Generator","description":"A synthetic data generator for text recognition.","tags":["code","library","computer-vision","data-augmentation","natural-language-processing","optical-character-recognition"]},{"id":1775,"created_on":"2020-07-11 05:28:14","title":"DeltaPy\u2060\u2060 ","description":"Tabular Data Augmentation & Feature Engineering.","tags":["code","notebook","paper","research","library","data-augmentation","tabular-data","tabular","table"]},{"id":1776,"created_on":"2020-07-11 05:32:17","title":"Imbalanced Learn","description":"A Python Package to Tackle the Curse of Imbalanced Datasets in Machine Learning.","tags":["code","library","class-imbalance","imbalanced-datasets"]},{"id":1777,"created_on":"2020-07-11 05:37:12","title":"tsfresh","description":"Automatic extraction of relevant features from time series.","tags":["code","library","feature-engineering","time-series"]},{"id":1778,"created_on":"2020-07-11 05:42:40","title":"FIt-SNE","description":"Fast Fourier Transform-accelerated Interpolation-based t-SNE (FIt-SNE).","tags":["code","library","dimensionality-reduction","tsne","fast-fourier-transform"]},{"id":1779,"created_on":"2020-07-11 05:48:03","title":"All Models and checkpoints - Hugging Face","description":"Massive (and growing) collection of NLP models are nearly any NLP tasks, especially those involving the use of transformers.","tags":["huggingface","transformers","library","fine-tuning","natural-language-processing","pretraining","models"]},{"id":1780,"created_on":"2020-07-11 05:50:40","title":"PyTorch Hub","description":"Discover and publish models to a pre-trained model repository designed for research exploration.","tags":["pytorch","library","fine-tuning","pretraining","models"]},{"id":1781,"created_on":"2020-07-11 05:51:49","title":"TensorFlow Model Garden","description":"Models and examples built with TensorFlow.","tags":["code","tensorflow","library","fine-tuning","pretraining","models","model-hub","model-store"]},{"id":1782,"created_on":"2020-07-11 06:01:08","title":"TPOT: Tree-based Pipeline Optimization Tool","description":"TPOT is a Python Automated Machine Learning tool that optimizes machine learning pipelines using genetic programming.","tags":["code","random-forests","library","automl","gradient-boosting","decision-tree","hyperparameter-optimization","genetic-programming","tpot"]},{"id":1783,"created_on":"2020-07-11 06:03:25","title":"auto-sklearn","description":"Automated Machine Learning with scikit-learn.","tags":["code","paper","research","scikit-learn","library","automl"]},{"id":1784,"created_on":"2020-07-11 06:08:46","title":"Lazy Predict","description":"Lazy Predict help build a lot of basic models without much code and helps understand which models works better without any parameter tuning.","tags":["code","regression","library","automl","classification","lazypredict"]},{"id":1785,"created_on":"2020-07-11 06:11:39","title":"modAL","description":"A modular active learning framework for Python.","tags":["code","library","active-learning","semi-supervised-learning"]},{"id":1786,"created_on":"2020-07-11 06:13:41","title":"gplearn","description":"Genetic Programming in Python, with a scikit-learn inspired API.","tags":["code","scikit-learn","regression","library","genetic-programming","symbolic-regression"]},{"id":1787,"created_on":"2020-07-11 06:15:25","title":"CatBoost","description":"A high-performance open source library for gradient boosting on decision trees","tags":["code","decision-trees","library","gradient-boosting","catboost"]},{"id":1788,"created_on":"2020-07-11 06:17:23","title":"LightGBM - Light Gradient Boosting Machine","description":"A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT, GBM or MART) framework based on decision tree algorithms.","tags":["code","decision-trees","library","gradient-boosting","lightgbm"]},{"id":1789,"created_on":"2020-07-11 06:19:47","title":"NGBoost","description":"Natural Gradient Boosting for Probabilistic Prediction\r\n\r\n","tags":["article","code","library","gradient-boosting","natural-gradients","uncertainty-estimation"]},{"id":1790,"created_on":"2020-07-11 06:22:21","title":"ThunderSVM: A Fast SVM Library on GPUs and CPUs","description":"Exploits GPUs and multi-core CPUs to achieve high efficiency with SVMs.","tags":["code","support-vector-machines","library","gpu"]},{"id":1791,"created_on":"2020-07-11 06:25:47","title":"scikit-fuzzy","description":"scikit-fuzzy is a fuzzy logic toolkit for SciPy.","tags":["code","scikit-learn","library","scipy","fuzzy-logic"]},{"id":1792,"created_on":"2020-07-11 06:28:58","title":"Anomaly Detection Toolkit (ADTK)","description":"A Python toolkit for rule-based\/unsupervised anomaly detection in time series\r\n\r\n","tags":["code","library","anomaly-detection","time-series","unsupervised-learning"]},{"id":1793,"created_on":"2020-07-11 06:31:05","title":"Keras-FewShotLearning","description":"Some State-of-the-Art few shot learning algorithms in tensorflow 2.","tags":["code","keras","tensorflow","library","few-shot-learning"]},{"id":1794,"created_on":"2020-07-11 06:33:07","title":"Contrastic Learner","description":"A simple to use pytorch wrapper for contrastive self-supervised learning on any neural network.\r\n\r\n","tags":["code","pytorch","contrastive-loss","library","self-supervised-learning"]},{"id":1795,"created_on":"2020-07-11 06:37:35","title":"Chakin ","description":"Simple downloader for pre-trained word vectors.","tags":["code","library","embeddings","natural-language-processing","word-embeddings"]},{"id":1796,"created_on":"2020-07-11 06:39:39","title":"Top2Vec","description":"Top2Vec learns jointly embedded topic, document and word vectors.\r\n\r\n","tags":["code","library","document-embeddings","embeddings","natural-language-processing","topic-modeling","word-embeddings"]},{"id":1797,"created_on":"2020-07-11 06:42:29","title":"Contextualized Topic Models","description":"A python package to run contextualized topic modeling.","tags":["code","paper","research","attention","bert","transformers","library","contextualized-embeddings","embeddings","natural-language-processing","topic-modeling","arxiv:2004.07737"]},{"id":1798,"created_on":"2020-07-11 06:46:18","title":"Star Clustering","description":"A clustering algorithm that automatically determines the number of clusters and works without hyperparameter fine-tuning.","tags":["code","library","automl","clustering"]},{"id":1799,"created_on":"2020-07-11 06:49:38","title":"FlashText","description":"Extract Keywords from sentence or Replace keywords in sentences.\r\n\r\n","tags":["article","code","paper","research","library","natural-language-processing","regex","text-extraction","arxiv:1711.00046"]},{"id":1800,"created_on":"2020-07-11 06:51:58","title":"jellyfish","description":"\ud83c\udf90 a python library for doing approximate and phonetic matching of strings.","tags":["code","library","natural-language-processing","text-matching","text-similarity","jellyfish","levenshtein","sounde","x-hamming","metaphon","e-jaro-winkler","fuzzy-search"]},{"id":1801,"created_on":"2020-07-11 06:54:10","title":"Faiss","description":"A library for efficient similarity search and clustering of dense vectors.\r\n","tags":["code","library","clustering","embeddings","similarity-search"]},{"id":1802,"created_on":"2020-07-11 06:57:28","title":"SentencePiece","description":"Unsupervised text tokenizer for Neural Network-based text generation.\r\n\r\n","tags":["code","paper","research","library","machine-translation","natural-language-processing","tokenization","word-segmentation"]},{"id":1803,"created_on":"2020-07-11 06:59:08","title":"A Deep Dive into the Wonderful World of Preprocessing in NLP","description":"A glimpse into the surprisingly deep and interesting world of preprocessing in NLP.","tags":["article","tutorial","natural-language-processing","preprocessing","tokenization"]},{"id":1804,"created_on":"2020-07-11 07:04:25","title":"Text Preprocessing in Python using spaCy library","description":"In this article, we have explored Text Preprocessing in Python using spaCy library in detail. This is the fundamental step to prepare data for applications.","tags":["article","tutorial","spacy","lemmatization","named-entity-recognition","natural-language-processing","part-of-speech-tagging","preprocessing","tokenization"]},{"id":1805,"created_on":"2020-07-11 07:12:32","title":"Segmentation Models","description":"Segmentation models with pretrained backbones. Keras and TensorFlow Keras.\r\n\r\n","tags":["code","keras","tensorflow","library","computer-vision","segmentation","unet","models","model-store"]},{"id":1806,"created_on":"2020-07-11 07:16:35","title":"Surprise","description":"Surprise is a Python scikit building and analyzing recommender systems that deal with explicit rating data.","tags":["code","library","recommendation-systems"]},{"id":1807,"created_on":"2020-07-11 07:18:45","title":"scikit-lego","description":"Extra blocks for sklearn pipelines.\r\n\r\n","tags":["code","scikit-learn","library"]},{"id":1808,"created_on":"2020-07-11 07:27:12","title":"whatlies","description":"Toolkit to help visualize - what lies in word embeddings.","tags":["code","video","library","embeddings","visualization","interactive"]},{"id":1809,"created_on":"2020-07-11 07:29:53","title":"Pandarallel","description":"A simple and efficient tool to parallelize Pandas operations on all available CPUs\r\n\r\n","tags":["code","library","pandas"]},{"id":1810,"created_on":"2020-07-11 07:32:48","title":"Flask-SQLAlchemy","description":"Adds SQLAlchemy support to Flask\r\n\r\n","tags":["code","databases","flask","sql","library","sqlalchemy"]},{"id":1811,"created_on":"2020-07-11 07:35:07","title":"Foolbox Native","description":"A Python toolbox to create adversarial examples that fool neural networks in PyTorch, TensorFlow, and JAX\r\n\r\n","tags":["code","jax","pytorch","tensorflow","library","adversarial-learning","adversarial-attacks"]},{"id":1812,"created_on":"2020-07-11 07:41:21","title":"PyTorch Lightning","description":"The lightweight PyTorch wrapper for ML researchers. Scale your models. Write less boilerplate.","tags":["code","video","pytorch","library","pytorch-lightning","template"]},{"id":1813,"created_on":"2020-07-11 07:45:01","title":"Pytest","description":"The pytest framework makes it easy to write small tests, yet scales to support complex functional testing\r\n\r\n","tags":["article","code","e2e-tests","library","unit-tests","testing"]},{"id":1814,"created_on":"2020-07-11 07:48:40","title":"Best Practices for Designing a Pragmatic RESTful API","description":"What formats should you accept? How should you authenticate? Should your API be versioned?","tags":["api","article","tutorial","naming-conventions","endpoints","endpoint-design"]},{"id":1815,"created_on":"2020-07-11 07:51:00","title":"Flask","description":"The Python micro framework for building web applications.","tags":["api","code","flask","library"]},{"id":1816,"created_on":"2020-07-11 07:52:23","title":"FastAPI","description":"FastAPI framework, high performance, easy to learn, fast to code, ready for production.","tags":["api","code","fastapi","library"]},{"id":1817,"created_on":"2020-07-11 07:55:23","title":"Artifacts - Weights & Biases","description":"Effortless pipeline tracking and production model management\r\n\r\n","tags":["article","code","notebook","library","production","wandb","data-versioning"]},{"id":1818,"created_on":"2020-07-11 08:07:35","title":"DeepkitAI","description":"The Open-Source Machine Learning Devtool and Training Suite.","tags":["code","model-management","library","experiment-tracking"]},{"id":1819,"created_on":"2020-07-11 08:14:03","title":"Neptune.ai","description":"The most lightweight experiment management tool that fits any workflow.","tags":["code","model-management","library","experiment-tracking"]},{"id":1820,"created_on":"2020-07-11 08:17:17","title":"Rasa","description":"An open source machine learning framework to automate text-and voice-based conversations. ","tags":["code","library","natural-language-processing","conversational-ai"]},{"id":1821,"created_on":"2020-07-11 08:31:37","title":"Vaex","description":"Out-of-Core DataFrames for Python, ML, visualize and explore big tabular data at a billion rows per second \ud83d\ude80","tags":["article","code","library","pandas","dataframes","out-of-core"]},{"id":1822,"created_on":"2020-07-11 08:34:39","title":"Label Studio","description":"Label Studio is a multi-type data labeling and annotation tool with standardized output format.","tags":["article","code","library","annotation","computer-vision","natural-language-processing","demo"]},{"id":1823,"created_on":"2020-07-11 08:36:39","title":"ivis","description":"Dimensionality reduction in very large datasets using Siamese Networks\r\n\r\n","tags":["code","paper","research","tensorflow","siamese-networks","library","dimensionality-reduction"]},{"id":1824,"created_on":"2020-07-11 08:38:42","title":"PyMC3","description":"Probabilistic Programming in Python: Bayesian Modeling and Probabilistic Machine Learning.","tags":["code","theano","library","demo","probabilistic=programming","bayesian-modeling"]},{"id":1825,"created_on":"2020-07-11 08:43:20","title":"MLflow: A Machine Learning Lifecycle Platform","description":"Open source platform for the machine learning lifecycle.","tags":["code","model-management","library","mlflow","experiment-tracking","apache-spark","data-versioning"]},{"id":1826,"created_on":"2020-07-11 08:48:22","title":"Continuous Integration on TPUs with PyTorch Lightning","description":"In preparation for our upcoming V1, we have taken a major step in our support for training on TPUs.","tags":["article","tpu","pytorch-lightning","ci-cd"]},{"id":1827,"created_on":"2020-07-11 08:56:02","title":"token2index","description":"A lightweight but powerful library to build token indices for NLP tasks, compatible with major Deep Learning frameworks like PyTorch and Tensorflow.","tags":["code","sequence-to-sequence","library","natural-language-processing","preprocessing","tokenization"]},{"id":1828,"created_on":"2020-07-11 11:26:55","title":"Dash","description":"Analytical Web Apps for Python, R, Julia, and Jupyter. No JavaScript Required.\r\n\r\n","tags":["code","library","visualization","plotly","demo","dash","dashboard"]},{"id":1829,"created_on":"2020-07-11 11:29:50","title":"Gaussian Process Regression on Molecules in GPflow","description":"Predict the experimentally-determined electronic transition wavelengths of molecular photoswitches.","tags":["article","code","notebook","tutorial","regression","library","chemistry","gaussian-processes","molecules","gpflow"]},{"id":1830,"created_on":"2020-07-11 11:31:02","title":"GPflow","description":"Gaussian processes in TensorFlow.","tags":["code","tensorflow","library","gaussian-processes"]},{"id":1831,"created_on":"2020-07-11 11:36:26","title":"TF Sprinkles","description":"Fast and efficient sprinkles augmentation implemented in TensorFlow.","tags":["article","code","tensorflow","library","computer-vision","data-augmentation"]},{"id":1832,"created_on":"2020-07-11 14:23:13","title":"Market Basket Analysis using Data Science with R Programming","description":"Domain: Inventory Management\r\n\r\nProblem Statement: As a new manager in the company, you are assigned the task of increasing cross selling","tags":["article","research","tutorial","video","r","library","data-science"]},{"id":1833,"created_on":"2020-07-11 15:49:52","title":"jax-unirep","description":"A reimplementation of the UniRep model in JAX.","tags":["code","paper","research","jax","lstm","recurrent-neural-networks","protein-engineering"]},{"id":1834,"created_on":"2020-07-11 17:19:43","title":"Laplacian Pyramid Reconstruction and Refinement for Semantic Seg.","description":" Pytorch implementation of multi-resolution reconstruction architecture based on a Laplacian pyramid that uses skip connections.","tags":["code","paper","research","pytorch","deep-learning","computer-vision","semantic-segmentation","segmentation","arxiv:1605.02264"]},{"id":1835,"created_on":"2020-07-11 17:27:54","title":"Multi Agent Diverse Generative Adversarial Network","description":"Easy to follow Pytorch tutorial Notebook for Multi-Agent Diverse Generative Adversarial Networks","tags":["code","paper","research","tutorial","video","pytorch","generative-adversarial-networks"]},{"id":1836,"created_on":"2020-07-11 18:15:19","title":"Training a pets detector model with TFOD API (TF 2)","description":"In this notebook, we will be training a custom object detection model using the latest TensorFlow Object Detection (TFOD) API which is based on TensorFlow 2.2. ","tags":["code","notebook","tutorial","tensorflow","deep-learning","computer-vision","object-detection"]},{"id":1837,"created_on":"2020-07-11 19:10:25","title":"Speaker Diarization (CNN, RNN, LSTM)","description":"Speaker Diarization is the problem of separating speakers in audio. ","tags":["code","paper","research","tensorflow","convolutional-neural-networks","lstm","recurrent-neural-networks","audio","speaker-diarization","speech","mlp","speaker-diarization-problem","speakerdiarization-rnn","cnn-model","separating-speakers","arxiv:2006.05596"]},{"id":1838,"created_on":"2020-07-11 19:34:25","title":"Audio Classification using CNN MLP","description":"The objective of this project is to build a multi-class classifier to identify the sound of a bee, cricket or noise.","tags":["code","dataset","paper","research","convolutional-neural-networks","audio","audio-classification","cnn","mlp","multilayer-perceptron-network","tflearn","noise","convolutional-layers","cricket","classifier","audio-processing","audio-analysis"]},{"id":1839,"created_on":"2020-07-12 00:22:44","title":"Gradio","description":"Interfaces for your ML Models.\r\n","tags":["code","library","dashboard","gradio"]},{"id":1840,"created_on":"2020-07-12 00:59:27","title":"TensorFlow 2 meets the Object Detection API","description":"TF Object Detection API (OD API) officially supports TensorFlow 2!","tags":["article","code","notebook","tensorflow","library","computer-vision","object-detection","demo"]},{"id":1841,"created_on":"2020-07-12 01:01:50","title":"Highlights of ACL 2020","description":"Notes and trends from ACL 2020.","tags":["article","research","acl2020"]},{"id":1842,"created_on":"2020-07-12 13:32:45","title":"PyCaret","description":"An open source, low-code machine learning library in Python.","tags":["article","code","video","library","automl","preprocessing","pycaret","low-code"]},{"id":1843,"created_on":"2020-07-12 13:35:20","title":"Cortex","description":"Build machine learning APIs.","tags":["code","library","production","serving","cortex"]},{"id":1844,"created_on":"2020-07-12 16:24:10","title":"Semi-Supervised Learning in Computer Vision","description":"A comprehensive overview of recent semi-supervised learning methods in Computer Vision","tags":["article","tutorial","computer-vision","data-augmentation","semi-supervised-learning"]},{"id":1845,"created_on":"2020-07-12 21:42:52","title":"Face Predicting Web App","description":"Interactive Deep Learning Model that utilizes your computer webcam to predict your age and gender in seconds! ","tags":["code","aws","docker","flask","html","javascript","python","tensorflow","convolutional-neural-networks","deep-learning","machine-learning","computer-vision","image-classification","demo"]},{"id":1846,"created_on":"2020-07-13 03:12:26","title":"scikit-multiflow","description":"A machine learning package for streaming data in Python.","tags":["code","video","scikit-learn","library","unsupervised-learning","concept-drift-detection","streaming-data","scikit-multiflow"]},{"id":1847,"created_on":"2020-07-13 03:46:32","title":"Driver Identification Based on Vehicle's telematics data","description":"In this paper, we proposed a deep learning model, which can identify drivers from their driving behaviors based on vehicle telematics data.","tags":["code","paper","research","deep-learning","lstm","machine-learning","cyber-security","autonomous-vehicles","computer-vision","telematics"]},{"id":1848,"created_on":"2020-07-13 05:00:40","title":"Comprehensive analysis of important metrics in ML","description":"In this work, the authors present a comprehensive analysis of important metrics in practical applications.","tags":["paper","research","deep-learning","computer-vision","image-classification","metrics","arxiv:1605.07678"]},{"id":1849,"created_on":"2020-07-13 15:14:12","title":"Faust","description":"Python Stream Processing.","tags":["code","library","streaming-data","faust","robinhood"]},{"id":1850,"created_on":"2020-07-13 15:18:35","title":"Wallaroo","description":"Distributed Stream Processing to Build and scale real-time applications.","tags":["article","code","library","streaming-data","stream-processing","wallaroo"]},{"id":1851,"created_on":"2020-07-13 15:21:13","title":"StreamAlert","description":"A serverless, realtime data analysis framework which empowers you to ingest, analyze, and alert on data from any environment, using datasources and alerts.","tags":["code","aws","library","security","monitoring","lambda","serverless","streaming-data","streamalert","airbnb","kinesis","terraform"]},{"id":1852,"created_on":"2020-07-13 19:41:22","title":"Madam Optimiser","description":"A multiplicative version of the Adam optimizer and shows that it can train state of the art neural network architectures without learning rate tuning.","tags":["code","paper","research","learning-rates","optimizer","madam","arxiv:2006.14560"]},{"id":1853,"created_on":"2020-07-13 20:23:32","title":"The Transformer Neural Network Architecture Explained","description":"\u2699\ufe0f It is time to explain how Transformers work. If you are looking for an easy explanation, you are exactly right!","tags":["tutorial","video","attention","self-attention","transformers","natural-language-processing","positional-encoding"]},{"id":1854,"created_on":"2020-07-14 00:13:47","title":"Janggu - Deep learning for Genomics","description":"Deep learning infrastructure for bioinformatics.","tags":["code","paper","research","keras","tensorflow","health","library","genomics","bioinformatics","janggu","epigenetics"]},{"id":1855,"created_on":"2020-07-14 03:17:25","title":"ULMFiT Airline Sentiment Analysis","description":"Transfer Learning using pretrained ULMFiT model","tags":["code","language-modeling","natural-language-processing","sentiment-analysis","transfer-learning","ulmfit"]},{"id":1856,"created_on":"2020-07-14 03:21:00","title":"DeepDream Video Style Transfer","description":"DeepDream on Video","tags":["code","convolutional-neural-networks","computer-vision","style-transfer"]},{"id":1858,"created_on":"2020-07-14 03:30:14","title":"QSVM","description":"Quantum SVM for sentiment analysis","tags":["code","notebook","support-vector-machines","natural-language-processing","quantum-machine-learning","sentiment-analysis"]},{"id":1859,"created_on":"2020-07-14 04:01:18","title":"You Trained a Machine Learning Model, Now What?","description":"Three often overlooked parts of this process occur after the model is actually built: model evaluation, deployment, and monitoring.","tags":["tutorial","video","production","monitoring","deployment"]},{"id":1860,"created_on":"2020-07-14 09:53:19","title":"NSFW Image Moderation Automation Engine built with TensorFlow.JS ","description":"An open-source NSFW Image Classifier including an Automation Engine for fast deletion & moderation built with Node.js, TensorFlow, and Parse Server","tags":["article","code","tutorial","node-js","tensorflow","tensorflow-js","convolutional-neural-networks","library","computer-vision","image-classification","image-recognition","object-detection","pretraining","open-source","models","demo","nsfw","content-moderation","nsfw-detection","nsfw-classifier","parse-server","machine-learning-pipelines","adversial-image-detection","adversial-learning","ready-to-use","automation-engine"]},{"id":1861,"created_on":"2020-07-14 21:20:04","title":"Determined: Deep Learning Training Platform","description":"Determined helps deep learning teams train models more quickly, easily share GPU resources, and effectively collaborate.","tags":["code","library","distributed-training","experiment-tracking","hyperparameter-optimization","neural-architecture-search","deeplearning","ml-infrastructure","model-registry"]},{"id":1862,"created_on":"2020-07-14 22:46:23","title":"NumExpr: Fast numerical expression evaluator for NumPy","description":"Fast numerical array expression evaluator for Python, NumPy, PyTables, pandas, bcolz and more.","tags":["article","code","tutorial","library","pandas","numpy","numexpr"]},{"id":1863,"created_on":"2020-07-14 22:49:07","title":"Variable Skipping for Autoregressive Range Density Estimation","description":"Naive marginalization to estimate range densities takes time exponential in the number of dimensions of the joint distribution.","tags":["article","code","paper","research","variable-skipping","autoregressive-range-density-estimation","arxiv:2007.05572"]},{"id":1864,"created_on":"2020-07-14 22:51:25","title":"Deep Dive on PyTorch Quantization","description":"Model quantization using the familiar eager mode Python API.","tags":["article","tutorial","video","pytorch","model-compression","quantization"]},{"id":1865,"created_on":"2020-07-14 22:55:08","title":"PDFTableExtract","description":"Build a parser to extract the table in PDF document with RetinaNet","tags":["article","code","library","computer-vision","optical-character-recognition","document-processing","table-extraction","retinanet","pdftableextract","table-detection"]},{"id":1866,"created_on":"2020-07-14 22:58:15","title":"PYthon Automated Term Extraction","description":"Term extraction algorithms such as C-Value, Basic, Combo Basic, Weirdness and Term Extractor using spaCy POS tagging.","tags":["article","code","spacy","library","named-entity-recognition","natural-language-processing","part-of-speech-tagging","terminology-extraction","terminology","pyate"]},{"id":1867,"created_on":"2020-07-14 23:03:02","title":"YOLOv4 With TensorFlow","description":"YOLOv4, YOLOv4-tiny, YOLOv3, YOLOv3-tiny Implemented in Tensorflow 2.0, Android. Convert YOLO v4 .weights tensorflow, tensorrt and tflite.","tags":["code","paper","research","tutorial","video","tensorflow","computer-vision","object-detection","yolo","tensorflow-lite","yolov4","arxiv:2004.10934","yolov4-tiny"]},{"id":1868,"created_on":"2020-07-15 03:52:31","title":"Selfie2Anime with TFLite","description":"An end-to-end tutorial with TensorFlow Lite for Selfie2Anime (U-GAT-IT). ","tags":["article","code","tutorial","tensorflow","deep-learning","generative-adversarial-networks","machine-learning","computer-vision","image-to-image-translation","tensorflow-lite","android"]},{"id":1869,"created_on":"2020-07-15 20:31:37","title":"Bridging PyTorch and TVM","description":"Taking Hugging Face transformer BERT from PyTorch and running it on \r\nApacheTVM for both inference (with reasonable timings) and training.","tags":["article","code","tutorial","huggingface","pytorch","attention","bert","transformers","library","natural-language-processing","apache-tvm","tvm"]},{"id":1870,"created_on":"2020-07-15 20:38:36","title":"Interpretability and Analysis of Models for NLP","description":"An in-depth look at interpretability and analysis of models for NLP (ACL 2020).","tags":["article","research","interpretability","natural-language-processing","acl-2020"]},{"id":1871,"created_on":"2020-07-16 03:58:21","title":"Summarize a webapge","description":"A Flask application that extracts and summarizes webpage using Natural Language Processing. Powered by nlp-akash.","tags":["api","article","code","tutorial","natural-language-processing","text-summarization"]},{"id":1872,"created_on":"2020-07-16 04:19:37","title":"An Icon Classifier with TensorFlow Lite Model Maker","description":"An Icon Classifier with TensorFlow Lite Model Maker","tags":["article","code","tutorial","deep-learning","computer-vision","tensorflow-lite"]},{"id":1873,"created_on":"2020-07-16 04:29:53","title":"Pythonizr - Generates boilerplate code for scikit-learn","description":"Pythonizr is a machine learning boilerplate code generator to help you start coding right away!","tags":["code","tool","scikit-learn","machine-learning","demo","boilerplate"]},{"id":1874,"created_on":"2020-07-16 04:30:16","title":"Awesome TFLite","description":"An awesome list of TFLite models with sample apps, model zoo, helpful tools and learning resources from the community.","tags":["code","tutorial","keras","tensorflow","deep-learning","library","computer-vision","natural-language-processing","tensorflow-lite"]},{"id":1876,"created_on":"2020-07-16 12:17:48","title":"Predict the hourly output power of a Combined Cycle Power Plant.","description":"In this project I have explored the data collected from a Combined Cycle Power Plant over 6 years. Searched for the best machine learning algorithm to predict t","tags":["code","dataset","flask","scikit-learn","energy"]},{"id":1877,"created_on":"2020-07-16 17:34:33","title":"An Overview of Distributed Training of Deep Learning Models","description":"Overview of the different techniques that are used by contemporary distributed DL systems and discuss their influence and implications on the training process.","tags":["paper","research","training","distributed-training","overview","arxiv:2007.03970"]},{"id":1878,"created_on":"2020-07-16 17:38:04","title":"PyPika - Python Query Builder","description":"A python SQL query builder that exposes the full richness of the SQL language using a syntax that reflects the resulting query.","tags":["code","sql","library","pypika"]},{"id":1879,"created_on":"2020-07-16 17:40:33","title":"Cross-lingual Transfer Learning - Sebastian Ruder","description":"An overview of approaches that transfer knowledge across languages and enable us to scale NLP models to more of the world's 7,000 languages.","tags":["article","tutorial","video","cross-lingual","natural-language-processing","transfer-learning"]},{"id":1880,"created_on":"2020-07-16 17:43:48","title":"AdapterHub: A Framework for Adapting Transformers","description":"Huggingface Transformers + Adapters","tags":["code","paper","research","huggingface","transformers","library","natural-language-processing","adapters","arxiv:2007.07779"]},{"id":1882,"created_on":"2020-07-16 17:51:48","title":"Object Detection with RetinaNet","description":"Implementing RetinaNet: Focal Loss for Dense Object Detection.","tags":["article","notebook","paper","research","tutorial","keras","tensorflow","computer-vision","object-detection","retinanet","arxiv:1708.02002"]},{"id":1883,"created_on":"2020-07-16 18:17:58","title":"Torchfunc","description":"PyTorch functions & utilities to make your deep learning life easier\r\n\r\n","tags":["code","pytorch","library","utilities","functions"]},{"id":1884,"created_on":"2020-07-17 01:41:33","title":"Deploying your ML Model with TorchServe","description":"In this talk, Brad Heintz walks through how to use TorchServe to deploy trained models at scale without writing custom code. ","tags":["tutorial","video","production","torchserve","serving"]},{"id":1885,"created_on":"2020-07-17 03:26:43","title":"The Thesis Review Podcast","description":"Each episode of The Thesis Review is a conversation centered around a researcher's PhD thesis.","tags":["podcast","machine-learning"]},{"id":1886,"created_on":"2020-07-17 08:27:56","title":"Medical Zoo - 3D Multi-modal Medical Image Segmentation","description":"My articles on deep learning in medical imaging","tags":["article","code","tutorial","pytorch","deep-learning","health","library","3d","computer-vision","medical-imaging","segmentation","medical-zoo"]},{"id":1887,"created_on":"2020-07-17 16:48:13","title":"Computer Vision Pretrained Models","description":"A collection of computer vision pre-trained models.","tags":["code","caffe","keras","mxnet","pytorch","tensorflow","library","computer-vision","object-detection","pretraining","model-hub","pretrained-models","model-zoo"]},{"id":1888,"created_on":"2020-07-17 16:53:37","title":"Monitoring Machine Learning Models in Production","description":"Once you have deployed your machine learning model to production it rapidly becomes apparent that the work is not over.","tags":["article","tutorial","production","monitoring"]},{"id":1889,"created_on":"2020-07-17 17:20:20","title":"NLP Pretrained Models","description":"A collection of Natural language processing pre-trained models.\r\n\r\n","tags":["code","caffe","keras","mxnet","pytorch","tensorflow","library","natural-language-processing","pretraining","model-hub","pretrained-models"]},{"id":1891,"created_on":"2020-07-17 19:32:30","title":"PyTorch Paper Implemenations","description":"Research Paper Implementations in PyTorch","tags":["code","research","pytorch","paper-implementations"]},{"id":1892,"created_on":"2020-07-18 04:17:17","title":"Introducing Streamlit Components","description":"A new way to add and share custom functionality for Streamlit apps","tags":["article","code","paper","tutorial","machine-learning","data-science","exploratory-data-analysis","demo","dashboard"]},{"id":1893,"created_on":"2020-07-18 05:35:07","title":"Universal Approximation of Neural Networks","description":"Neural Networks and their approximation capabilities.","tags":["article","code","artificial-general-intelligence","deep-learning","feed-forward-neural-networks","neural-networks"]},{"id":1894,"created_on":"2020-07-18 15:44:26","title":"Arabic Font Classification","description":"Tackling the visual font recognition problem for Arabic fonts by synthesizing data and addressing domain mismatch challenges.","tags":["article","code","dataset","domain-adaptation","demo","visual-font-recognition"]},{"id":1895,"created_on":"2020-07-18 19:44:18","title":"Deep Dream (PyTorch) \ud83d\udcbb + \ud83c\udf0a\ud83d\udca4 = \u2764\ufe0f","description":"Clean PyTorch implementation of the Deep Dream algorithm by Mordvintsev et al.","tags":["code","tutorial","python","pytorch","deep-learning","machine-learning","deep-dream"]},{"id":1896,"created_on":"2020-07-19 00:40:37","title":"Machine Learning Production Pipeline","description":"Project Flow and Landscape\r\n","tags":["tutorial","production","serving","pipelines"]},{"id":1897,"created_on":"2020-07-19 00:42:37","title":"VAE-SNE","description":"A deep generative model for dimensionality reduction and clustering.","tags":["code","paper","research","autoencoders","variational-autoencoders","clustering","dimensionality-reduction","vae-sne"]},{"id":1898,"created_on":"2020-07-19 00:47:53","title":"Tempering Expectations for GPT-3 and OpenAI\u2019s API","description":"A closer look at the \"magic\" behind GPT-3 and caveats to be aware of.","tags":["article","code","paper","research","tutorial","gpt","transformers","natural-language-processing","openai","gpt-3","arxiv:2005.14165"]},{"id":1899,"created_on":"2020-07-19 03:59:41","title":"StyleGAN Encoder","description":"Encodes real images into the latent space of a StyleGAN model.","tags":["code","generative-adversarial-networks","computer-vision","style-transfer","stylegan","latent-space"]},{"id":1900,"created_on":"2020-07-19 04:12:40","title":"WikiArt StyleGAN 2 Model","description":"A conditional StyleGAN 2 model trained on images from WikiArt","tags":["article","code","generative-adversarial-networks","computer-vision","style-transfer","stylegan","stylegan-2","wikiart"]},{"id":1901,"created_on":"2020-07-19 08:31:43","title":"Quora Question Pair Similarity","description":"Identify which questions asked on Quora are duplicates of questions that have already been asked. Using Text features, classifying them as duplicates or not.\r\n\r\n","tags":["code","dataset","python","machine-learning","natural-language-processing","text-classification","xgboost"]},{"id":1902,"created_on":"2020-07-19 10:19:24","title":"Indian Paper Currency Prediction","description":"The trained model takes an image (Indian Paper Currency) as an input and predict the class of image from 10, 20, 50, 100, 200, 500, 2000 denomination.","tags":["article","code","research","tutorial","video","aws","flask","keras","artificial-general-intelligence","deep-learning","computer-vision","image-classification","demo"]},{"id":1903,"created_on":"2020-07-19 11:31:25","title":"Neural Style Transfer (Gatys et al., PyTorch)","description":"My implementation of the original neural style transfer paper by Gatys et al. (In PyTorch).","tags":["code","tutorial","video","deep-learning","machine-learning","computer-vision","style-transfer","neural-style-transfer"]},{"id":1904,"created_on":"2020-07-19 12:44:53","title":"Implementation of Face Net  in TensorFlow -  2.0","description":"This repository is a naive unofficial  implementation of Face Net paper  - 2015 .This implementation opts online mode of semi - hard triplet mining.","tags":["code","research","tutorial","dlib","tensorflow","convolutional-neural-networks","computer-vision","embeddings","face-recognition","paper-implemenataion"]},{"id":1905,"created_on":"2020-07-19 14:51:57","title":"PyTorch CNN Trainer","description":"A simple package to fine-tune CNNs from torchvision and Pytorch Image models by Ross Wightman.","tags":["code","pytorch","convolutional-neural-networks","library","training","computer-vision","fine-tuning","torchvision","demo"]},{"id":1906,"created_on":"2020-07-19 15:06:27","title":"Tensorflow to PyTorch","description":"This repo contains the TensorFlow tutorials converted to PyTorch code.","tags":["code","pytorch","tensorflow","convolutional-neural-networks","data-augmentation","pretraining"]},{"id":1907,"created_on":"2020-07-19 15:30:47","title":"Adversarial machine learning","description":"This repository contain blogs, papers and talks related to adversarial machine learning.","tags":["code","adversarial-defense","adversarial-learning","adversarial-attacks"]},{"id":1908,"created_on":"2020-07-19 15:37:37","title":"Kinect Baxter Calibration","description":"Project to setup absolute orientation based calibration between Kinect depth sensor and Baxter robot.","tags":["code","robotics","ros"]},{"id":1909,"created_on":"2020-07-19 15:41:26","title":"Imitation Learning in Pytorch","description":"Implementation of imitation learning algorithms using Pytorch and interfaced with OpenAI Gym environments","tags":["code","tutorial","pytorch","library","imitation-learning","openai-gym"]},{"id":1910,"created_on":"2020-07-19 15:44:21","title":"Azure Machine Learning Template","description":"Azure Machine Learning template for MNIST classifier","tags":["code","tutorial","azure","library","mlops"]},{"id":1912,"created_on":"2020-07-19 16:48:56","title":"How to write an Awesome README","description":"A comprehensive guide to writing README that stands out and makes people go WOW! ","tags":["article","code","tutorial","machine-learning","program-development","web-design","data-science","documentation"]},{"id":1913,"created_on":"2020-07-19 16:55:33","title":"Teachable Machine (Image Classifier)","description":"A teachable image classifier that runs on any browser built using TensorFlow JS.","tags":["code","tensorflow","tensorflow-js","machine-learning","web-design","computer-vision","demo"]},{"id":1914,"created_on":"2020-07-19 16:59:37","title":"TensorFlow JS- Object Detection in Browser","description":"A real-time object detection model in your browser using TensorFlow JS.","tags":["code","tensorflow","tensorflow-js","computer-vision","object-detection","demo"]},{"id":1915,"created_on":"2020-07-19 23:59:07","title":"Elegy","description":"A Keras-like Deep Learning framework based on Jax + Haiku.","tags":["article","code","jax","keras","library","haiku"]},{"id":1916,"created_on":"2020-07-20 00:01:38","title":"How to Stop Worrying About Compositionality","description":"Review the tenets of compositionality, and to highlight how each theory has evolved to match particular theoretical positions about the nature of language.","tags":["article","language-modeling","natural-language-processing","compositionality"]},{"id":1917,"created_on":"2020-07-20 05:39:24","title":"Python Deep Learning Projects","description":"This is the code repository for Python Deep Learning Projects book, published by Packt.","tags":["article","code","tutorial","python","deep-learning","computer-vision","natural-language-processing","reinforcement-learning"]},{"id":1918,"created_on":"2020-07-20 05:48:38","title":"Spacy-Go","description":"spacy-go is Golang interface for accessing linguistic annotations provided by spaCy using Google's gRPC. This module only supports basic functionalities like lo","tags":["code","go","python","spacy","natural-language-processing"]},{"id":1919,"created_on":"2020-07-20 05:53:12","title":"Dframcy","description":"DframCy is a light-weight utility module to integrate Pandas Dataframe to spaCy's linguistic annotation and training tasks.","tags":["code","spacy","library","training","natural-language-processing","data-science"]},{"id":1920,"created_on":"2020-07-20 13:30:16","title":"ML-Ai community Projects","description":"ml-ai.in","tags":["code","research","machine-learning","data-science"]},{"id":1921,"created_on":"2020-07-20 14:04:48","title":"NSFW Image Moderation Admin App with ReactJS","description":"A fully-functional NSFW Admin Application for simplified image classification & moderation built with Node.js, TensorFlow.js, and React","tags":["article","code","tutorial","node-js","react","tensorflow","tensorflow-js","convolutional-neural-networks","library","adversarial-image-detection","computer-vision","image-classification","image-recognition","object-detection","pretraining","open-source","adversarial-learning","models","demo","nsfw","content-moderation","nsfw-detection","nsfw-classifier","parse-server","ready-to-use"]},{"id":1922,"created_on":"2020-07-20 15:13:18","title":"Optimize Ridge Regression Regularizers","description":"Use an optimizer to efficiently find the parameters that maximize ridge regression's performance on a leave-one-out or generalized cross-validation","tags":["article","code","linear-regression","regression","regularization","ridge-regression","cross-validation"]},{"id":1923,"created_on":"2020-07-20 18:59:04","title":"PyTorch Geometric Temporal","description":"A Temporal Extension Library for PyTorch Geometric ","tags":["code","python","pytorch","torch","deep-learning","graph-convolutional-networks","library","graph-neural-networks","graphs","representation-learning"]},{"id":1924,"created_on":"2020-07-20 20:34:47","title":"Why is it Important to Monitor Machine Learning Models?","description":"The importance of monitoring and how monitoring ML is different from application performance management (APM).","tags":["article","tutorial","production","monitoring"]},{"id":1925,"created_on":"2020-07-20 20:54:00","title":"PyTorch Implementation of PaletteNet","description":"PyTorch implementation of PaletteNet: Image Recolorization with Given Color Palette (Cho et al., 2017).","tags":["code","paper","research","library","computer-vision","style-transfer"]},{"id":1926,"created_on":"2020-07-20 21:00:33","title":"Keras Implementation of Semi-supervised Deep Embedded Clustering","description":"Keras Implementation of Semi-supervised Deep Embedded Clustering (Ren et al., 2019)","tags":["code","dataset","paper","research","semi-supervised-learning","deep-clustering"]},{"id":1927,"created_on":"2020-07-20 21:21:12","title":"ECG arrhythmia classification using a convolutional neural net","description":"This is an implementation of the paper on ECG arrhythmia classification https:\/\/arxiv.org\/pdf\/1804.06812.pdf.","tags":["article","code","keras","artificial-general-intelligence","convolutional-neural-networks","deep-learning","neural-networks","health","healthcare","computer-vision"]},{"id":1928,"created_on":"2020-07-20 21:24:57","title":"SDEC-AD for Semantic Frame Induction","description":"Code for LREC 2020 Paper \"Semi-supervised Deep Embedded Clustering with Anomaly Detection for Semantic Frame Induction\"","tags":["code","paper","research","library","semi-supervised-learning","deep-clustering","framenet"]},{"id":1929,"created_on":"2020-07-20 23:55:33","title":"Structured Self Attention","description":"Implementation for the paper A Structured Self-Attentive Sentence Embedding (https:\/\/arxiv.org\/abs\/1703.03130 ). Model interpretability \/ explainability.","tags":["code","paper","research","pytorch","attention","deep-learning","machine-learning","recurrent-neural-networks","self-attention","embeddings","interpretability","natural-language-processing","text-classification","arxiv:1703.03130"]},{"id":1930,"created_on":"2020-07-21 01:28:14","title":"GeoTorch","description":"A library for constrained optimization and manifold optimization for deep learning in PyTorch","tags":["code","pytorch","library","optimization","manifold-optimization","geotorch"]},{"id":1931,"created_on":"2020-07-21 01:31:42","title":"Path Explain","description":"A toolkit for explaining feature attributions and feature interactions in deep neural networks.\r\n\r\n","tags":["article","code","paper","research","library","interpretability","integrated-gradients","expected-gradients","path-explain","integrated-hessians","arxiv:2002.04138"]},{"id":1932,"created_on":"2020-07-21 01:36:02","title":"Transfer Learning using Adversarially Robust ImageNet Models","description":"We explore adversarial robustness as an avenue for training computer vision models with more transferrable features.","tags":["article","code","paper","research","transfer-learning","adversarial-learning","imagenet","arxiv:2007.08489"]},{"id":1933,"created_on":"2020-07-21 01:42:42","title":"TurboTransformers","description":"A fast and user-friendly runtime for transformer inference on CPU and GPU.","tags":["code","transformers","library","natural-language-processing","inference","turbotransformers"]},{"id":1934,"created_on":"2020-07-21 01:47:01","title":"Graphein","description":"Protein Graph Library","tags":["code","paper","research","health","library","graph-neural-networks","graphs","protein","geometric-deep-learning","bioinformatics","protein-structure","protein-graph-library"]},{"id":1935,"created_on":"2020-07-21 04:44:52","title":"Integrated Gradients in TensorFlow 2","description":"In this tutorial, you will walk through an implementation of IG step-by-step in TensorFlow 2 to understand the pixel feature importances of an image classifier.","tags":["article","code","tutorial","tensorflow","computer-vision","image-classification","interpretability"]},{"id":1936,"created_on":"2020-07-21 08:23:47","title":"Vanilla Gan implementation from paper","description":"This is a pytorch implementation of vanilla Gan from its research paper","tags":["article","code","notebook","paper","research","pytorch","generative-adversarial-networks","unsupervised-learning","arxiv:1406.2661"]},{"id":1937,"created_on":"2020-07-21 11:46:59","title":"FairLearn","description":"Scikit-Learn compatible toolkit to assess and improve the fairness of machine learning models.","tags":["article","code","library","fairness","bias"]},{"id":1938,"created_on":"2020-07-21 11:50:53","title":"Rasa NLU Examples","description":"Experimental components for Rasa NLU pipelines. ","tags":["article","code","library","natural-language-processing","natural-language-understanding"]},{"id":1939,"created_on":"2020-07-21 13:55:31","title":"Breaking down the CTC Loss","description":"This article breaks down the inner workings of the CTC loss computation using the forward-backward algorithm.","tags":["article","tutorial","ctc-loss","ctc","connectionist-temporal-classification"]},{"id":1940,"created_on":"2020-07-21 19:01:54","title":"Change Detection using Siamese networks","description":"The blog is a primer on Siamese Networks and how they're used for observing change in satellite images over time, or observing facial changes as people age","tags":["article","pytorch","contrastive-loss","convolutional-neural-networks","deep-learning","siamese-networks","computer-vision"]},{"id":1941,"created_on":"2020-07-21 19:13:05","title":"My Artificial Intelligence Bookmarks","description":"A curated list of my reads, implementations, and core concepts of Artificial Intelligence, Deep Learning, Machine Learning by best folk in the world.","tags":["article","code","research","tutorial","python","deep-learning","machine-learning","neural-networks","library","natural-language-processing","datascience","conversational-ai","algorithms","maths","awesome-list"]},{"id":1942,"created_on":"2020-07-22 03:25:56","title":"Unsupervised Learning of Visual Features by Contrasting Clusters","description":"We use a swapped prediction mechanism where we predict the cluster assignment of a view from the representation of another view.","tags":["article","code","paper","research","unsupervised-learning","contrasting-cluster-assignments","swav","arxiv:2006.09882"]},{"id":1943,"created_on":"2020-07-22 03:32:30","title":"Do we Need Deep Graph Neural Networks?","description":"Does depth in graph neural network architectures bring any advantage?","tags":["article","tutorial","graph-neural-networks","graphs","depth"]},{"id":1944,"created_on":"2020-07-22 03:35:58","title":"Learning Perturbation Sets for Robust Machine Learning","description":"Using generative modeling to capture real-world transformations from data for adversarial robustness.","tags":["article","code","paper","research","adversarial-robustness","enerative-modeling","perturbation-sets","arxiv:2007.08450"]},{"id":1945,"created_on":"2020-07-22 03:39:13","title":"Pandera","description":"A flexible and expressive pandas data validation library.","tags":["code","library","pandas","testing","data-validation","schema","validation"]},{"id":1948,"created_on":"2020-07-22 14:51:49","title":"Explore new Github README feature","description":"Simple tutorial to get a cool README on GitHub profile.","tags":["article","code","tutorial","git"]},{"id":1949,"created_on":"2020-07-22 15:24:24","title":"Phonet","description":"Keras-based python framework to compute phonological posterior probabilities from audio files.","tags":["article","code","paper","research","keras","pytorch","healthcare","speech","phoneme-recognition"]},{"id":1950,"created_on":"2020-07-23 00:42:09","title":"GPT-3: A Hitchhiker's Guide","description":"Post to guide your thinking on GPT-3.","tags":["article","gpt","transformers","language-modeling","natural-language-processing","gpt-3"]},{"id":1951,"created_on":"2020-07-24 06:13:17","title":"Audio and Speech Pre-trained Models","description":"A collection of Audio and Speech pre-trained models.\r\n\r\n","tags":["code","library","audio","speech","speech-recognition","pretraining","model-hub"]},{"id":1952,"created_on":"2020-07-24 06:28:15","title":"TensorFlow Serving","description":"A flexible, high-performance serving system for machine learning models, designed for production environments. ","tags":["code","tensorflow","library","production","serving","tensorflow-serving"]},{"id":1953,"created_on":"2020-07-24 06:30:44","title":"BentoML","description":"BentoML is an open-source framework for high-performance ML model serving.","tags":["code","library","production","serving","bentoml","ci-cd"]},{"id":1954,"created_on":"2020-07-24 06:43:59","title":"Azure ML","description":"MLOps using Azure ML.","tags":["code","azure","library","mlops","serving","ci-cd"]},{"id":1955,"created_on":"2020-07-24 06:47:29","title":"Shape and Viewpoint without Keypoints","description":"Recover the 3D shape, pose and texture from a single image, trained on an image collection without any ground truth 3D shape, multi-view, camera viewpoints.","tags":["article","code","paper","research","3d","computer-vision","unsupervised-learning","pascal-3d","arxiv:2007.10982"]},{"id":1956,"created_on":"2020-07-24 06:50:28","title":"Video Prediction using ConvLSTM Autoencoder (PyTorch)","description":"A simple implementation of the Convolutional-LSTM model.","tags":["article","tutorial","pytorch","autoencoders","convolutional-neural-networks","lstm","pytorch-lightning","video-prediction"]},{"id":1957,"created_on":"2020-07-24 07:12:02","title":"The Beginner's Guide to Dimensionality Reduction","description":"Explore the methods that data scientists use to visualize high-dimensional data.","tags":["code","tutorial","dimensionality-reduction","tsne","principal-component-analysis","interactive","umap"]},{"id":1958,"created_on":"2020-07-24 09:56:41","title":"Automated Machine Learning","description":"\u2728 Automated Machine Learning Python package designed to save time for a data scientist \ud83d\ude0e ","tags":["code","machine-learning","library"]},{"id":1959,"created_on":"2020-07-24 10:00:13","title":"TeachEasy: Web app for Text Summarization & Q\/A generation","description":"An intuitive Streamlit based web app for Text Summarization and Question Answer generation so as to reduce the work for School teachers.","tags":["code","natural-language-processing","paraphrase-identification","question-answering","question-generation","text-summarization","streamlit"]},{"id":1960,"created_on":"2020-07-24 10:01:02","title":"Deploy Machine Learning Models with Django","description":"This web service makes Machine Learning models available with REST API. It is different from most of the tutorials available on the internet.","tags":["api","code","tutorial","django","machine-learning"]},{"id":1961,"created_on":"2020-07-24 10:38:52","title":"Python Template for All Projects","description":"A template that gives the batteries required to package code, CI checks, auto build and deploy docs, easy PyPi publishing support and docker files.","tags":["code","docker","python","library","devops","mlops","ci-cd"]},{"id":1962,"created_on":"2020-07-24 20:48:33","title":"3D Image Inpainting Report","description":"In this report, I introduce some key components of the 3D Photography using Context-aware Layered Depth Inpainting paper and look at stunning 3D images.","tags":["article","code","paper","research","wandb","inpainting","3d-image-inpainting"]},{"id":1963,"created_on":"2020-07-24 21:01:01","title":"Modern Data Augmentation Techniques for Computer Vision","description":"A bunch of modern data augmentation techniques for computer vision covering cutout, mixup, cutmix and augmix.","tags":["article","code","research","tutorial","data-augmentation","wandb","cutout","mixup","cutmix","augmix","model-robustness"]},{"id":1964,"created_on":"2020-07-25 02:52:36","title":"MLOps Tutorial Series","description":"How to create an automatic model training & testing setup using GitHub Actions and Continuous Machine Learning (CML).","tags":["code","tutorial","video","production","github-actions","ml-ops","cml","ci-cd"]},{"id":1965,"created_on":"2020-07-25 02:58:40","title":"model-logger","description":"Model-Logger is a Python library for storing model's profile and rapid inter model comparison.","tags":["code","notebook","library","experiment-tracking","logging","model-comparison","model-logger"]},{"id":1966,"created_on":"2020-07-25 06:02:30","title":"Experimental Exploratory Data Analysis for a Classification Task","description":"Expand the traditional EDA in a wider pipeline looking for the impact of each action into the behaviour of models. Exploratory Data & Models Analysis","tags":["article","code","tutorial","logistic-regression","machine-learning","neural-networks","random-forests","regression","classification","gradient-boosting","decision-tree","exploratory-data-analysis"]},{"id":1967,"created_on":"2020-07-25 21:17:40","title":"AutoGOAL","description":"A Python framework for Automated Machine Learning (AutoML), hyperparameter tunning and program synthesis in general.","tags":["article","code","paper","research","python","deep-learning","machine-learning","regression","library","automl","computer-vision","image-classification","natural-language-processing","streamlit","demo","tabular"]},{"id":1968,"created_on":"2020-07-26 04:48:40","title":"Sentiment Analysis With Transformers","description":"Sentiment analysis neural network trained by fine-tuning BERT, ALBERT, or DistilBERT on the Stanford Sentiment Treebank.","tags":["code","tutorial","attention","bert","transformers","natural-language-processing","sentiment-analysis","stanford-sentiment-treebank"]},{"id":1969,"created_on":"2020-07-26 04:59:19","title":"Pydeck","description":"Large-scale interactive data visualization in Python","tags":["code","library","visualization","pydeck"]},{"id":1970,"created_on":"2020-07-26 05:03:54","title":"Shortcuts: How Neural Networks Love to Cheat","description":"Neural Nets can often succeed on datasets, while failing to actually do the intended task. How?","tags":["article","neural-networks","memorization"]},{"id":1971,"created_on":"2020-07-27 02:30:42","title":"Attention based YOLO: Object Detection","description":"An easy to follow, YOLO implementation with keras lib.  Used a attention based architecture to extract more fine grained information about object.","tags":["code","keras","tensorflow","attention","computer-vision","object-detection","yolo"]},{"id":1972,"created_on":"2020-07-27 02:54:19","title":"Evolution of Representations in the Transformer","description":"The evolution of representations of individual tokens in Transformers trained with different training objectives (MT, LM, MLM - BERT-style).","tags":["article","paper","research","tutorial","attention","bert","transformers","language-modeling","natural-language-processing","representation-learning","representations","arxiv:1909.01380"]},{"id":1973,"created_on":"2020-07-27 02:57:55","title":"PyGLN: Gated Linear Network implementations (NumPy, PT\/TF, JAX)","description":"Gated Linear Network implementations for NumPy, PyTorch, TensorFlow and JAX.","tags":["article","code","paper","research","jax","pytorch","tensorflow","library","gated-linear-networks","arxiv:1910.01526"]},{"id":1974,"created_on":"2020-07-27 03:11:50","title":"How to Set Up a HTML App with FastAPI, Jinja, Forms & Templates","description":"I couldn\u2019t find any guides on how to serve HTML with FastAPI. Thus, I wrote this simple article to plug the hole on the internet.","tags":["article","code","tutorial","fastapi","html","jinja","templates"]},{"id":1975,"created_on":"2020-07-27 14:09:26","title":"Ensemble methods for object detection","description":"In this repository, we provide the code for ensembling the output of object detection models, and applying test-time augmentation for object detection. This lib","tags":["code","paper","research","deep-learning","library","computer-vision","object-detection"]},{"id":1976,"created_on":"2020-07-27 14:12:03","title":"Close-Domain fine-tuning for table detection","description":"In this project, we show the benefits of using models trained on a close domain, using the TableBank dataset, for fine-tuning table detection models. In additio","tags":["code","paper","research","computer-vision","object-detection","arxiv:1912.05846"]},{"id":1977,"created_on":"2020-07-27 14:14:10","title":"LabelDetection: simplifying the use and construction of deep dete","description":"LabelDetection is a graphical tool that aims to facilitate all the steps required in the pipeline to construct and use a deep-learning base object detection mod","tags":["code","notebook","annotation","computer-vision","object-detection"]},{"id":1978,"created_on":"2020-07-27 14:34:12","title":"How to Set Up a Python Project For Automation and Collaboration","description":"How to set up a Python repo with unit tests, code coverage, lint checking, type checking, Makefile wrapper, and automated build with GitHub Actions.","tags":["article","code","tutorial","git","python","unit-tests","testing"]},{"id":1980,"created_on":"2020-07-27 14:51:03","title":"Understanding & Implementing SimCLR - an ELI5 guide","description":"I explain the SimCLR and its contrastive loss function step by step, build image embeddings and then show how to use them to train image classifier on top.","tags":["article","code","dataset","notebook","tutorial","pytorch","deep-learning","computer-vision","embeddings","self-supervised-learning","unsupervised-learning","simclr"]},{"id":1981,"created_on":"2020-07-27 15:37:35","title":"Deploying FastAPI app to Heroku","description":"A detailed walkthrough on Creating a simple FastAPI app and deploying it to Heroku.","tags":["article","code","tutorial","fastapi","python","devops","heroku","demo"]},{"id":1982,"created_on":"2020-07-27 16:51:08","title":"AutoQP: Genetic Programming for Quantum Programing","description":"Automatically writing of quantum code using genetic programming. This code is the actual implementation of research AutoQP.","tags":["code","paper","research","genetic-algorithm","qiskit","quantum-computing","ibm-quantum-computers"]},{"id":1983,"created_on":"2020-07-28 04:14:12","title":"CoreML Model Zoo","description":"Collection of unified and converted pre-trained models.","tags":["code","coreml","library","computer-vision","image-classification","object-detection","pretraining","model-hub"]},{"id":1984,"created_on":"2020-07-28 04:18:00","title":"How GPT3 Works - Visualizations and Animations","description":"A compilation of my threads explaining GPT3. ","tags":["article","tutorial","gpt","transformers","natural-language-processing","illustrated","gpt-3"]},{"id":1985,"created_on":"2020-07-28 04:19:58","title":"Temporal Graph Networks","description":"In this post, we describe Temporal Graph Network, a generic framework for deep learning on dynamic graphs.","tags":["article","code","paper","research","tutorial","graph-neural-networks","graphs","temporal-graph-networks","arxiv:2006.10637"]},{"id":1986,"created_on":"2020-07-28 07:44:13","title":"Behavioral Testing of NLP models with CheckList","description":"An overview of the \u201cCheckList\u201d framework for fine-grained evaluation of NLP models","tags":["article","tutorial","natural-language-processing","nlp"]},{"id":1987,"created_on":"2020-07-28 13:48:02","title":"SimCLR in Keras","description":"Tensorflow-Keras Implementation of SimCLR","tags":["code","dataset","paper","research","keras","tensorflow","self-supervised-learning","simclr","contrastive-learning","demo","arxiv:2002.05709","keras-models","t-sne"]},{"id":1988,"created_on":"2020-07-28 14:08:41","title":"Self-Supervised Learning - PyTorch Lightning","description":"This bolts module houses a collection of all self-supervised learning models.","tags":["code","pytorch","library","self-supervised-learning","pytorch-lightning","simclr","contrastive-learning","moco"]},{"id":1989,"created_on":"2020-07-28 16:14:08","title":"Interpretability in ML: A Broad Overview","description":"An overview of the sub-field of machine learning interpretability, with example models and graphics.","tags":["article","code","machine-learning","interpretability","ai-safety"]},{"id":1990,"created_on":"2020-07-28 18:23:23","title":"scikit-learn-lambda","description":"A cost-efficient toolkit for deploying scikit-learn models for realtime HTTP inference on AWS Lambda.","tags":["article","code","aws","scikit-learn","serverless"]},{"id":1991,"created_on":"2020-07-28 23:26:12","title":"2020 Machine Learning Roadmap","description":"A beginner mind map (and presentation) connecting many of the most foundational concepts in machine learning.","tags":["code","tutorial","machine-learning","data-science","beginner","introduction"]},{"id":1992,"created_on":"2020-07-29 03:41:04","title":"Time series forecasting","description":"A thorough introduction to time series forecasting using TensorFlow.","tags":["article","code","notebook","tutorial","keras","tensorflow","forecasting","time-series"]},{"id":1993,"created_on":"2020-07-29 04:47:55","title":"Real-time text detection with EAST in TFLite","description":"Demonstrates the conversion process from the original EAST model to TFLite and how to use it on static images and also on real-time video feeds. ","tags":["article","code","notebook","video","tensorflow","computer-vision","object-detection","tflite"]},{"id":1994,"created_on":"2020-07-29 04:51:30","title":"Understanding the Effectivity of Ensembles in Deep Learning","description":"The report explores the ideas presented in Deep Ensembles: A Loss Landscape Perspective by Stanislav Fort, Huiyi Hu, and Balaji Lakshminarayanan.","tags":["article","code","research","tutorial","deep-learning","neural-networks","computer-vision","wandb","ensembles"]},{"id":1995,"created_on":"2020-07-29 12:30:48","title":"Cartoonize your world!","description":"A demo web application to showcase the capability of \"white box cartoonization\" on image and videos.","tags":["code","paper","research","deep-learning","demo","gans","cartoon"]},{"id":1996,"created_on":"2020-07-29 15:45:09","title":"Classify Song Genres from Audio Data","description":"My first machine learning project has been uploaded on GitHub.\r\nI started simple with a supervised learning to classify Rock and HipHop songs","tags":["code","dataset","notebook","music","audio","audio-classification","exploratory-data-analysis"]},{"id":1997,"created_on":"2020-07-29 16:13:46","title":"Image Classification by @carrycooldude","description":"Image Classification using TFLite and ImageNet  by  @carrycooldude","tags":["code","dataset","tensorflow","convolutional-neural-networks","computer-vision","image-classification","tensorflow-lite","imagenet"]},{"id":1998,"created_on":"2020-07-29 21:12:05","title":"Test Internet Speed using Python","description":"In this article we discuss how to test internet speed using Python as well as covered the features of the speetest-cli library.","tags":["article","tutorial","python","program-development"]},{"id":1999,"created_on":"2020-07-30 03:57:32","title":"Small differences in BLEU are meaningless","description":"Only big differences in metric scores are meaningful in MT.","tags":["article","paper","research","language-modeling","metrics","natural-language-processing","bleu","arxiv:2006.06264"]},{"id":2000,"created_on":"2020-07-30 04:01:12","title":"The Ultimate Guide to the Pandas Library for Data Science in Pyth","description":"The fundamentals of pandas that you can use to build data-driven Python applications today.","tags":["article","tutorial","pandas"]},{"id":2001,"created_on":"2020-07-30 04:03:28","title":"Deep Learning's Most Important Ideas - A Brief Historical Review","description":"Review well-adopted deep learning ideas that have stood the test of time.","tags":["article","deep-learning","history"]},{"id":2002,"created_on":"2020-07-30 04:08:46","title":"Multi-target in Albumentations","description":"Many images, many masks, bounding boxes, and key points. How to transform them in sync?","tags":["article","library","computer-vision","data-augmentation","image-augmentation","albumentations","multi-target"]},{"id":2003,"created_on":"2020-07-30 05:31:10","title":"What's New in PyTorch 1.6","description":"A brief overview of new and interesting features in PyTorch 1.6\r\nIt contains byte-sized and working examples to show these features.","tags":["code","tutorial","pytorch","library"]},{"id":2004,"created_on":"2020-07-30 07:24:26","title":"Cancer Diagnosis using ML Techniques","description":"In this project we will be discussing how to predict the effect of Genetic Variants to enable Personalized Medicine for various types of cancer using ML algos.\r\n","tags":["article","code","dataset","logistic-regression","machine-learning","random-forests","regression","support-vector-machines","k-nearest-neighbors","decision-tree","cancer"]},{"id":2005,"created_on":"2020-07-30 11:19:02","title":"Social Distance Detection","description":"If people are very close to each other, a red bounding box is displayed around them indicating that they are not maintaining social distance.","tags":["code","tutorial","video","python","computer-vision","opencv","inference","social-distancing"]},{"id":2006,"created_on":"2020-07-30 11:30:56","title":"Deep Learning Techniques for NLP in Healthcare","description":"A talk discussing the recent advancements of deep learning to facilitate the adaption of NLP in the healthcare domain.","tags":["tutorial","video","deep-learning","health","natural-language-processing"]},{"id":2007,"created_on":"2020-07-30 14:47:39","title":"CLoDSA: A Tool for Augmentation in Computer Vision tasks","description":"CLoDSA is an open-source image augmentation library for object classification, localization, detection, semantic segmentation and instance segmentation. It supp","tags":["code","paper","research","library","computer-vision","data-augmentation","object-classification","object-detection","segmentation"]},{"id":2008,"created_on":"2020-07-30 14:50:30","title":"Extension to block NSFW content using AI","description":"NSFW Filter is an extension that blocks NSFW content from your browser.\r\nIt uses a computer vision model to detect NSFW content and hides it from the user.","tags":["code","javascript","tensorflow","tensorflow-js","convolutional-neural-networks","deep-learning","machine-learning","web-services","computer-vision","transfer-learning","demo"]},{"id":2009,"created_on":"2020-07-30 14:55:57","title":"ATLASS: AutoML using Transfer and Semi-Supervised Learning","description":"This repository includes the code, application, and notebooks for the work \"AutoML using Transfer and Semi-Supervised Learning\". The tools presented here can be","tags":["code","paper","research","automl","computer-vision","image-classification","semi-supervised-learning","transfer-learning"]},{"id":2010,"created_on":"2020-07-30 15:00:43","title":"FrImCla: A framework for image classification","description":"\r\nFrImCla is an open-source framework for Image Classification using traditional and deep learning techniques. It supports a wide variety of deep learning and c","tags":["code","paper","research","computer-vision","image-classification","transfer-learning"]},{"id":2011,"created_on":"2020-07-30 15:02:04","title":"UFOD: A Unified Framework for Object Detection","description":"UFOD is an open-source framework that enables the training and comparison of object detection models on custom datasets using different underlying frameworks an","tags":["code","automl","computer-vision","object-detection"]},{"id":2012,"created_on":"2020-07-30 15:04:28","title":"LabelStoma: stomata detection using YOLO","description":"LabelStoma is a graphical image tool for automatically detecting stomata in images. ","tags":["code","research","computer-vision","object-detection"]},{"id":2013,"created_on":"2020-07-30 15:07:54","title":"DeepClas4Bio","description":"DeepClas4Bio is a project that aims to facilitate the interoperability of bioimaging tools with deep learning frameworks.","tags":["code","paper","research","computer-vision","image-classification","interoperability","imagej","bioimage"]},{"id":2014,"created_on":"2020-07-30 19:58:23","title":"Fourier Feature Mapping Networks","description":"Tensorflow 2.2 implementation of Fourier Feature Mapping Networks ","tags":["code","paper","research","tensorflow","neural-networks","multilayer-perceptrons","fourier-features","arxiv:2006.10739"]},{"id":2015,"created_on":"2020-07-31 00:14:44","title":"How to Derive Convolution From First Principles","description":"I derive the convolution from first principles and show that it naturally emerges from translational symmetry.","tags":["article","convolutional-neural-networks"]},{"id":2016,"created_on":"2020-07-31 15:30:38","title":"Meme Classifier Using TFlite and flutter","description":"Meme classifier using fine tuned mobilenet. This app showcases how you can perform low latency realtime classification apps using TFlite","tags":["code","video","tensorflow","convolutional-neural-networks","computer-vision","image-classification","transfer-learning","tensorflow-lite","demo"]},{"id":2017,"created_on":"2020-07-31 18:37:50","title":"AutoML clone","description":"AutoMl clone that lets you build and deploy ML models with 0 lines of code","tags":["code","fastai","keras","convolutional-neural-networks","machine-learning","automl","fastap"]},{"id":2018,"created_on":"2020-08-01 02:42:42","title":"Training CNN with Mixed Precision in PyTorch 1.6","description":"Simple Example on MNIST dataset illustrating Mixed Precision Training.\r\n","tags":["code","tutorial","pytorch","convolutional-neural-networks","deep-learning"]},{"id":2020,"created_on":"2020-08-01 12:14:26","title":"Text Summarization using TF-IDF Algorithm","description":"This Article explains the TF-IDF algorithm and shows the implemtnation from scratch to summarize the text.","tags":["article","code","natural-language-processing","text-summarization","demo","tf-idf"]},{"id":2021,"created_on":"2020-08-01 12:18:58","title":"Handling the missing values in Data: The Easy Way","description":"Most of the Machine Learning Algorithms cannot work with missing values in the features.  Let's see the possible options we have to deal with it.","tags":["article","code","dataset","tutorial","scikit-learn","missing-data"]},{"id":2022,"created_on":"2020-08-01 14:41:37","title":"Simple Transformers","description":"Transformers for Classification, NER, QA, Language Modeling, Language Generation, T5, Multi-Modal, and Conversational AI.","tags":["code","transformers","library","language-modeling","multi-modal","named-entity-recognition","natural-language-processing","question-answering","t5","conversational-ai","language-generation"]},{"id":2023,"created_on":"2020-08-01 14:46:19","title":"Why You Should Do NLP Beyond English","description":"7000+ languages are spoken around the world but NLP research has mostly focused on English. This post outlines why you should work on languages other than Eng.","tags":["article","natural-language-processing","languages","non-english"]},{"id":2024,"created_on":"2020-08-01 14:49:31","title":"DeText: A Deep Neural Text Understanding Framework","description":"DeText: A Deep Neural Text Understanding Framework for Ranking and Classification Tasks.","tags":["code","library","natural-language-processing","natural-language-understanding","detext"]},{"id":2025,"created_on":"2020-08-01 14:57:11","title":"Haystack \u2014 Neural Question Answering At Scale","description":"\ud83d\udd0d Transformers at scale for question answering & search\r\n\r\n","tags":["article","code","huggingface","transformers","library","natural-language-processing","question-answering","search","elastic-search","scale","haystack"]},{"id":2026,"created_on":"2020-08-01 15:04:37","title":"Efficient Serverless Deployment of PyTorch Models on Azure","description":"A tutorial for serving models cost-effectively at scale using Azure Functions and ONNX Runtime.","tags":["article","tutorial","azure","onnx","pytorch","production","serving"]},{"id":2027,"created_on":"2020-08-01 15:27:29","title":"Nearest Celebrity Face","description":"Implementation of FaceNet: A Unified Embedding for Face Recognition and Clustering to find the celebrity whose face matches the closest to yours. The input face","tags":["article","code","deep-learning","siamese-networks","computer-vision"]},{"id":2028,"created_on":"2020-08-01 21:01:21","title":"Which machine learning algorithm to choose?","description":"in this article, we show you structured methodology and guidelines which will help you to select the best algorithm for your use.","tags":["article","machine-learning","regression","classification"]},{"id":2029,"created_on":"2020-08-01 21:12:33","title":"Self-supervised representation learning on videos","description":"Everything you need to know about video-based approaches on self-supervised learning","tags":["article","video","representation-learning","self-supervised-learning"]},{"id":2030,"created_on":"2020-08-02 12:38:08","title":"A Few Favorite Recipes in Computer Vision & Deep Learning","description":"This blog post enlists a few of my favorite recipes in deep learning in the context of computer vision (as of August 2020).","tags":["article","research","deep-learning","computer-vision","representation-learning","self-supervised-learning","simclr","contrastive-learning"]},{"id":2031,"created_on":"2020-08-02 14:46:10","title":"NeuralQA - API and Visual Interface for Extractive QA","description":"A Usable Library for Question Answering on Large Datasets with BERT","tags":["code","attention","bert","transformers","library","natural-language-processing","question-answering","visualization"]},{"id":2032,"created_on":"2020-08-02 20:00:23","title":"Object tracking in 75 lines of code","description":"Object tracking is straightforward conceptually. And if you have a good detector, simple methods can be pretty effective.","tags":["article","code","tutorial","pytorch","computer-vision","object-tracking"]},{"id":2033,"created_on":"2020-08-03 03:49:22","title":"FARM: Framework for Adapting Representation Models","description":"\ud83c\udfe1 Fast & easy transfer learning for NLP. Harvesting language models for the industry.","tags":["article","code","video","huggingface","transformers","library","language-modeling","natural-language-processing","transfer-learning","demo"]},{"id":2034,"created_on":"2020-08-03 04:00:29","title":"Finding Similar Documents with Transformers","description":"How transformers can help us distill text documents into points in N-dimensional vector spaces.","tags":["code","notebook","tutorial","transformers","natural-language-processing","similarity-search","semantic-search","elastic-search","document-similarity"]},{"id":2035,"created_on":"2020-08-04 02:49:24","title":"Act - GitHub Actions locally","description":"Run your GitHub Actions locally.","tags":["code","library","mlops","github-actions","demo","ci-cd"]},{"id":2037,"created_on":"2020-08-04 03:07:53","title":"Exploring Pruning as an Alternative to Knowledge Distillation","description":"Summary of  Poor Man\u2019s BERT: Smaller and Faster Transformer Models.","tags":["article","research","knowledge-distillation","model-compression","pruning"]},{"id":2038,"created_on":"2020-08-04 03:53:36","title":"Curated papers & articles on DS & ML in production","description":"Learn how organizations & business solved machine learning problems, including problem statement, research, methodology, and results.","tags":["code","paper","machine-learning","production","data-science"]},{"id":2039,"created_on":"2020-08-04 16:45:09","title":"Tensorflow2 Object Detection Tutorial","description":"In this tutorial, we will be going step by step the complete training process of Tensorflow2 Object Detection. ","tags":["article","code","tutorial","tensorflow","tensorflow-js","convolutional-neural-networks","computer-vision","object-detection","tensorflow-lite"]},{"id":2040,"created_on":"2020-08-04 18:00:56","title":"A Barebones Image Retrieval System","description":"This project presents a simple framework to retrieve images similar to a query image.","tags":["code","tutorial","tensorflow","computer-vision","few-shot-learning","image-similarity-search","representation-learning","big-transfer","image-retrieval"]},{"id":2041,"created_on":"2020-08-04 18:49:09","title":"Fawkes vs Nic or Not","description":"Testing facial recognition against facial cloaking with Fawkes","tags":["article","tensorflow-js","facial-recognition"]},{"id":2042,"created_on":"2020-08-05 02:07:24","title":"ONNX T5","description":"Summarization, translation, Q&A, text generation and more at blazing speed using a T5 version implemented in ONNX.","tags":["article","code","paper","research","onnx","pytorch","transformers","library","natural-language-processing","t5","serving","arxiv:1910.10683"]},{"id":2043,"created_on":"2020-08-05 02:17:10","title":"DeLighT: Very Deep and Light-weight Transformers","description":"Similar or better performance than transformer-based models with significantly fewer parameters","tags":["code","paper","research","transformers","model-compression","natural-language-processing","delight","dextra","arxiv:2008.00623"]},{"id":2044,"created_on":"2020-08-05 06:29:56","title":"Neural Nets Aren\u2019t Black Boxes","description":"If you think neural nets are black boxes, you\u2019re not alone. Let\u2019s break this misconception down piece by piece as we build our own neural net from scratch.","tags":["article","code","tutorial","deep-learning","library"]},{"id":2045,"created_on":"2020-08-05 06:40:32","title":"Evaluation Metrics For Information Retrieval","description":"Learn about common metrics used to evaluate performance of information retrieval systems","tags":["article","tutorial","document-ranking","information-retrieval","metrics","natural-language-processing"]},{"id":2046,"created_on":"2020-08-05 06:43:37","title":"Sparkle: Combating Medication Non-adherence with ML","description":"Introducing Sparkle \u2728: a multi-platform medication monitoring system designed to promote medication adherence for ordinary people.","tags":["code","video","health","library","medicine","gradient-boosting"]},{"id":2047,"created_on":"2020-08-05 15:18:46","title":"Test-Time Data Augmentation","description":"Tutorial on how to properly implement test-time image data augmentation in a production environment with limited computational resources.","tags":["article","code","notebook","tutorial","keras","tensorflow","deep-learning","data-augmentation","production"]},{"id":2048,"created_on":"2020-08-05 16:50:22","title":"SadedeGel: An extraction based Turkish news summarizer","description":"\"Sadede Gel\" in Turkish, means \"cut to the chase\".  ","tags":["code","notebook","research","attention","bert","transformers","library","natural-language-processing","text-summarization","unsupervised-learning","demo"]},{"id":2051,"created_on":"2020-08-05 20:13:51","title":"MobyDick word frequency","description":"Getting the count of the words in Moby Dick story using both web scraping and NLP","tags":["code","notebook","research","natural-language-processing","data-science"]},{"id":2052,"created_on":"2020-08-05 20:25:11","title":"Use GPUs with Keras","description":"This tutorial walks you through the Keras APIs that let you use and have more control over your GPU.","tags":["article","code","notebook","tutorial","keras","wandb","gpu"]},{"id":2053,"created_on":"2020-08-05 20:30:33","title":"Image Classification with Keras","description":"Build a pipeline to train an image classifier in Keras and tune hyperparameters to optimize the performance of our classifier.","tags":["article","code","notebook","keras","computer-vision","image-classification","wandb"]},{"id":2054,"created_on":"2020-08-05 20:34:09","title":"Dropout in PyTorch \u2013 An Example","description":"An example of adding Dropout to a PyTorch model, and observe the effect dropout has on the model's performance by tracking our models in Weights & Biases.","tags":["article","code","notebook","pytorch","computer-vision","image-classification","wandb","dropout"]},{"id":2055,"created_on":"2020-08-05 20:39:03","title":"Batch Normalization in Keras - Ablation Study","description":"Use BatchNormalization with Keras and observe the effect it has with the change in batch size, learning rates and add dropout.","tags":["article","code","notebook","keras","batch-normalization","wandb","ablation-studies"]},{"id":2056,"created_on":"2020-08-06 00:30:49","title":"Fast Sentence Embeddings (fse)","description":"Fast Sentence Embeddings is a Python library that serves as an addition to Gensim.","tags":["code","library","embeddings","natural-language-processing","sentence-embeddings","gensim","demo","fse"]},{"id":2057,"created_on":"2020-08-06 04:06:11","title":"Data Science Meets Devops: MLOps with Jupyter, Git, & Kubernetes","description":"An end-to-end example of deploying a machine learning product using Jupyter, Papermill, Tekton, GitOps and Kubeflow.","tags":["article","tutorial","devops","production","kubeflow","mlops","papermill","end-to-end","gitops","tekton"]},{"id":2058,"created_on":"2020-08-06 04:12:07","title":"Hyperparameter Optimization for AllenNLP Using Optuna","description":"\ud83d\ude80 A demonstration of hyperparameter optimization using Optuna for models implemented with AllenNLP.\r\n\r\n","tags":["article","code","tutorial","library","allennlp","hyperparameter-optimization","allenai","optuna"]},{"id":2059,"created_on":"2020-08-06 04:18:08","title":"How to Detect Data-Copying in Generative Models","description":"I propose some new definitions and test statistics for conceptualizing and measuring overfitting by generative models.","tags":["article","code","paper","research","autoencoders","generative-adversarial-networks","variational-autoencoders","generative-modeling","data-copying","over-representation","arxiv:2004.05675"]},{"id":2060,"created_on":"2020-08-06 04:24:51","title":"einops","description":"Flexible and powerful tensor operations for readable and reliable code. Supports numpy, pytorch, tensorflow, and others.","tags":["article","code","pytorch","tensorflow","library","numpy","einops"]},{"id":2061,"created_on":"2020-08-06 04:59:21","title":"Detectron 2 Demo from Facebook","description":"This Project contains the process of getting started with Facebook FAIR's detectron2 project on windows 10 without any Nvidia GPU.","tags":["code","tutorial","computer-vision","image-classification","object-detection","segmentation","detectron"]},{"id":2062,"created_on":"2020-08-06 12:38:55","title":"Predict Vehicle Speed From Dash Cam Video","description":"A series of experiments attempting to predict vehicle speed from dash cam videos using optical flow and neural networks.","tags":["article","code","pytorch","autonomous-vehicles","computer-vision","computer-vis"]},{"id":2063,"created_on":"2020-08-06 16:54:33","title":"Scikit-learn Advanced Features | Data Science","description":"It demonstrates some useful scikit-learn concepts in transforming features, pipelining, grid search, and much more.","tags":["article","tutorial","python","scikit-learn","machine-learning","feature-engineering","data-science","pipeline","grid-search"]},{"id":2064,"created_on":"2020-08-06 18:41:15","title":"Short Text Matching Hyperparameter Tuning","description":"This scenario shows how to tune a Frequently Asked Questions (FAQ) matching model that can be deployed as a web service to provide predictions for user question","tags":["code","azure","scikit-learn","hyperparameter-optimization"]},{"id":2097,"created_on":"2020-08-06 23:12:11","title":"Machine Learning Resource ","description":"A concise resource repository for machine learning bookmarks. Concise but yet to comprehensive for machine learning resources and related stuff.","tags":["code","research","python","deep-learning","machine-learning"]},{"id":2098,"created_on":"2020-08-06 23:15:45","title":"Digital Image Processing in Python","description":"Play around with pixel values with Python programming language.","tags":["article","code","research","tutorial","python","machine-learning","computer-vision","image-clustering"]},{"id":2099,"created_on":"2020-08-06 23:45:30","title":"PyTorch implementation of deep convolutional GANs","description":"This is a concise implementation of deep convolutional generative adversarial neural networks using PyTorch library","tags":["code","paper","research","pytorch","convolutional-neural-networks","generative-adversarial-networks","unsupervised-learning","arxiv:1511.06434"]},{"id":2100,"created_on":"2020-08-07 04:24:28","title":"A 2020 guide to Semantic Segmentation","description":"Concept of image segmentation, discuss the relevant use-cases, different neural network architectures involved in achieving the results, metrics and datasets.","tags":["article","code","computer-vision","semantic-segmentation","segmentation"]},{"id":2102,"created_on":"2020-08-07 18:17:05","title":"lifelib: Actuarial models in Python","description":"An open-source library of life actuarial models written in Python.","tags":["code","python","actuarial","actuary"]},{"id":2103,"created_on":"2020-08-07 18:22:27","title":"scikit-survival","description":"scikit-survival is a Python module for survival analysis built on top of scikit-learn. ","tags":["code","python","scikit-learn","machine-learning","library","survival-analysis"]},{"id":2104,"created_on":"2020-08-07 20:58:21","title":"PyTorch Lightning 101 video series","description":"PyTorch Lightning Masterclass from basic PyTorch to advanced Lightnig models","tags":["code","research","tutorial","video","pytorch","deep-learning","machine-learning","distributed-training","pytorch-lightning"]},{"id":2106,"created_on":"2020-08-08 15:06:18","title":"Fast NST for Videos (+ person segmentation) \ud83c\udfa5 + \u26a1\ud83d\udcbb + \ud83c\udfa8 = \u2764\ufe0f","description":"Create NST videos and pick separate styles for the person in the video and for the background.","tags":["code","tutorial","video","computer-vision","style-transfer","neural-style-transfer"]},{"id":2109,"created_on":"2020-08-09 07:24:57","title":"Live demo : State-of-the-art MCQ Generator from any content","description":"Demo for state-of-the-art MCQ (Multiple Choice Questions) generator from any content built using T5 transformer, HuggingFace, and Sense2vec\r\n","tags":["huggingface","transformers","natural-language-processing","question-generation","t5"]},{"id":2111,"created_on":"2020-08-10 03:26:16","title":"InvoiceNet","description":"Deep neural network to extract intelligent information from PDF invoice documents.\r\n","tags":["code","library","computer-vision","optical-character-recognition","text-extraction"]},{"id":2112,"created_on":"2020-08-10 03:41:31","title":"Search for visual datasets","description":"By task, application, class, label or format.","tags":["library","computer-vision","datasets"]},{"id":2113,"created_on":"2020-08-10 04:01:03","title":"GAN-BERT","description":"Enhancing the BERT training with Semi-supervised Generative Adversarial Networks.","tags":["code","paper","research","video","attention","bert","generative-adversarial-networks","transformers","natural-language-processing","semi-supervised-learning"]},{"id":2114,"created_on":"2020-08-10 04:03:51","title":"tsaug","description":"A Python package for time series augmentation.","tags":["code","library","data-augmentation","time-series","tsaug"]},{"id":2115,"created_on":"2020-08-10 04:07:14","title":"GPU-Accelerated Single-Cell Genomics Analysis with RAPIDS","description":"Examples of single-cell genomic analysis accelerated with RAPIDS","tags":["code","clustering","dimensionality-reduction","genomics","rapids","gene-ranking"]},{"id":2116,"created_on":"2020-08-10 04:15:38","title":"Machine Learning Pipelines for Kubeflow.","description":"Kubeflow pipelines are reusable end-to-end ML workflows built using the Kubeflow Pipelines SDK.","tags":["code","tutorial","kuberflow","production","ci-cd","pipelines"]},{"id":2117,"created_on":"2020-08-10 04:17:57","title":"Structuring Unit Tests in Python","description":"Where to put tests, how to write fixtures and the awesomeness of test parametrization.","tags":["article","tutorial","unit-tests","pytest","testing"]},{"id":2120,"created_on":"2020-08-10 07:25:13","title":"Model Agnostic Meta Learning (MAML) implemented in Flax","description":"Model Agnostic Meta Learning (MAML) implemented in Flax, the neural network library for JAX.","tags":["code","paper","research","jax","deep-learning","meta-learning","flax","arxiv:1703.03400","maml"]},{"id":2121,"created_on":"2020-08-10 21:59:41","title":"DeepR \u2014 Training TensorFlow Models for Production","description":"DeepR is a Python library to build complex pipelines as easily as possible on top of Tensorflow.","tags":["article","code","notebook","tensorflow","library","production","mlflow","demo","hadoop","pipelines","deepr","graphite"]},{"id":2122,"created_on":"2020-08-11 00:05:52","title":"Libra","description":"An ergonomic machine learning API designed for non-technical users.\r\n\r\n","tags":["article","code","video","machine-learning","library","automl","demo","libra","low-code"]},{"id":2123,"created_on":"2020-08-11 00:13:00","title":"Otto","description":"Otto makes machine learning an intuitive, natural language experience.","tags":["code","deep-learning","machine-learning","neural-networks","library","automl","assistant"]},{"id":2124,"created_on":"2020-08-11 00:20:42","title":"Neural Architecture Search","description":"A look at neural architecture search w.r.t search space, search algorithms and evolution strategies.","tags":["article","automl","reinforcement-learning","evolution","neural-architecture-search"]},{"id":2126,"created_on":"2020-08-12 04:01:52","title":"Machine Learning Monthly July 2020","description":"A collection of the coolest machine learning resources for July 2020, including: GPT-3, self-supervised learning, AutoML-Zero and more! ","tags":["article","newsletter","tutorials"]},{"id":2127,"created_on":"2020-08-12 07:52:47","title":"Number Prediction","description":"Deep learning model made from scratch,Trained on MNIST dataset","tags":["code","tutorial","deep-learning"]},{"id":2128,"created_on":"2020-08-12 17:00:21","title":"AlphaPy: AutoML for Data Scientists and Speculators","description":"AlphaPy is an automated machine learning (AutoML) Python framework for Data Scientists and Speculators.","tags":["code","keras","scikit-learn","sports","automl","alphapy"]},{"id":2131,"created_on":"2020-08-13 01:39:01","title":"How to Trust Your Deep Learning Code","description":"We will focus on how to write reusable unit tests, so that you \u201cDon\u2019t repeat yourself\u201d.","tags":["article","code","tutorial","unit-tests","testing"]},{"id":2132,"created_on":"2020-08-13 01:44:32","title":"Adversarial robustness as a prior for better transfer learning","description":"We find that adversarially robust models, while less accurate, often perform better than their standard-trained counterparts when used for transfer learning.","tags":["article","code","paper","research","transfer-learning","adversarial-learning","imagenet","arxiv:2007.08489"]},{"id":2134,"created_on":"2020-08-13 01:47:07","title":"Machine Learning of Sets","description":"We will consider set-to-vector, vector-to-set, and set-to-set problems and provide implementations of simple algorithms in JAX and Haiku.","tags":["article","jax","machine-learning","haiku","iid","sets"]},{"id":2135,"created_on":"2020-08-13 01:52:06","title":"Temporal Convolutional Networks for Time-Series","description":"We introduce several novels using TCN, including improving traffic prediction, sound event localization & detection, and probabilistic forecasting.","tags":["article","temporal-cnn","forecasting","time-series","cnn","detection","localization"]},{"id":2136,"created_on":"2020-08-13 02:05:11","title":"Machine Learning Deployment: Shadow Mode","description":"\u201cHow do I test my new model in production?\u201d One answer, and a method I often employ when initially deploying models, is shadow mode.","tags":["article","production","deployment","shadow-mode"]},{"id":2137,"created_on":"2020-08-13 02:10:03","title":"Unpopular Opinion - Data Scientists Should Be More End-to-End","description":"I believe data scientists can be more effective by being end-to-end.","tags":["article","full-stack","mlops","career"]},{"id":2138,"created_on":"2020-08-13 18:12:46","title":"Extract Stock Sentiment from News Headlines","description":" In this project, you will generate investing insight by applying sentiment analysis on financial news headlines from Finviz. ","tags":["code","research","finance","natural-language-processing","sentiment-analysis"]},{"id":2140,"created_on":"2020-08-14 01:23:21","title":"EduKC","description":"Our app helps parents and kids to better choose and plan education programs outside of public-school systems using ML and DL to make personalized suggestions.","tags":["article","code","dataset","research","tutorial","angular","keras","latent-dirichlet-allocation","education","recommendation-systems","demo"]},{"id":2141,"created_on":"2020-08-14 03:15:38","title":"hloc - the hierarchical localization toolbox","description":"Visual localization made easy.","tags":["code","paper","research","video","convolutional-neural-networks","library","computer-vision","object-localization","localization","hierarchical-localization","arxiv:1812.03506"]},{"id":2145,"created_on":"2020-08-14 15:14:55","title":"Predicting Credit Card Approvals","description":"Project provided by DataCamp. Automating  reviews for credit card applications","tags":["code","research","banking","finance"]},{"id":2147,"created_on":"2020-08-15 01:17:07","title":"Practical Tips and Tricks for Successful Transfer Learning","description":"Training models to learn knowledge and skills from other related tasks that will transfer and boost performance on tasks of interest.","tags":["paper","research","tutorial","video","natural-language-processing","transfer-learning","pretraining","arxiv:2005.00628"]},{"id":2148,"created_on":"2020-08-15 01:22:01","title":"txtai: AI-powered search engine","description":"AI-powered search engine.","tags":["code","transformers","library","natural-language-processing","search","faiss"]},{"id":2149,"created_on":"2020-08-15 01:46:13","title":"Python Decorators 101","description":"In this course on Python decorators, you\u2019ll learn what they are and how to create and use them. ","tags":["article","course","tutorial","python","decorators"]},{"id":2150,"created_on":"2020-08-15 05:21:02","title":"Let's Not Chuck ","description":"In the sport of cricket, throwing, commonly referred to as chucking, is an illegal bowling action which occurs when a bowler straightens the bowling arm when de","tags":["article","code","posenet","demo","ml5js"]},{"id":2151,"created_on":"2020-08-15 05:32:22","title":"Drowsiness Detection System using OpenCV and Flask in Python ","description":"This system provides an overview of a system that detects whether a person is drowsy while driving and if so, alerts him by using voice messages in real-time. ","tags":["article","code","video","css","flask","html","python","computer-vision","opencv","demo","drowsiness-detection"]},{"id":2155,"created_on":"2020-08-15 14:49:16","title":"GPT-3, The model simply knows!","description":"Brief Introduction about the gigantic GPT-3. a new leap in AI and Natural Language processing. ","tags":["article","tutorial","deep-learning","machine-learning","natural-language-processing","conversational-ai","data-science","openai","gpt3","blogpost"]},{"id":2156,"created_on":"2020-08-15 15:06:13","title":"Energy Based Models (EBMs): A comprehensive introduction","description":"In this article, I describe the general concept of Energy Based Models (EBMs), and a specific family of EBM called Boltzmann Machine.","tags":["article","research","tutorial","energy","energy-based-models","graphical-models"]},{"id":2157,"created_on":"2020-08-15 22:04:54","title":"Gspread: Google Sheets API using Python","description":"Complete guide on how to access\/edit Google Sheets using Python. Detailed code examples and explanations of gspread library.","tags":["api","article","code","tutorial","python","library","program-development","gspread"]},{"id":2159,"created_on":"2020-08-16 01:02:18","title":"Solaris","description":"CosmiQ Works Geospatial Machine Learning Analysis Toolkit.","tags":["code","library","computer-vision","geospatial","gis","cosmiq"]},{"id":2160,"created_on":"2020-08-16 01:05:19","title":"Optax","description":"Optax is a gradient processing and optimization library for JAX.","tags":["code","jax","library","optimization","gradients"]},{"id":2161,"created_on":"2020-08-16 01:17:29","title":"ff-net","description":"Feedforward neural network learning in real time.","tags":["article","code","feed-forward-neural-networks","machine-learning","interactive","demo","ff-net"]},{"id":2163,"created_on":"2020-08-17 03:19:46","title":"Safe Space - Github Action","description":"Github action that checks the toxicity level of comments and PR reviews to help make repos safe spaces.","tags":["code","tensorflow-js","natural-language-processing","sentiment-analysis","github-actions","demo","toxicity"]},{"id":2164,"created_on":"2020-08-17 03:24:46","title":"Intro to Autoencoders","description":"This tutorial introduces autoencoders with three examples: the basics, image denoising, and anomaly detection.","tags":["article","code","notebook","tutorial","tensorflow","autoencoders","anomaly-detection","computer-vision","denoising","time-series","image-denoising"]},{"id":2165,"created_on":"2020-08-17 03:32:12","title":"Implementing an Autoencoder in PyTorch","description":"Building an autoencoder model for reconstruction.","tags":["article","code","tutorial","pytorch","autoencoders","variational-autoencoders"]},{"id":2166,"created_on":"2020-08-17 05:19:41","title":"Pix2Pix","description":"Tensorflow 2.0 Implementation of the paper Image-to-Image Translation using Conditional GANs by Philip Isola, Jun-Yan Zhu, Tinghui Zhou and Alexei A. Efros.","tags":["code","paper","research","keras","tensorflow","generative-adversarial-networks","computer-vision","pix2pix","activation-functions","arxiv:1611.07004","conditional-gan","mish"]},{"id":2167,"created_on":"2020-08-17 06:27:31","title":"Insight","description":"Project Insight is designed to create NLP as a service with code base for both front end GUI (streamlit) and backend server (FastAPI) the usage of transformers ","tags":["api","code","docker","fastapi","huggingface","pytorch","attention","bert","transformers","named-entity-recognition","natural-language-processing","sentiment-analysis","text-summarization","transfer-learning","streamlit"]},{"id":2168,"created_on":"2020-08-17 10:55:43","title":"Onceupon.space","description":"NLP experiment in story-telling  that creates illustrations (text to sketch) and content (text generation)","tags":["dataset","video","gpt","transformers","natural-language-processing","text-generation","demo"]},{"id":2169,"created_on":"2020-08-17 20:08:24","title":"Molemash","description":"A mole moves randomly in the canvas area. A touch of the mole results in a score value by one(1). There are four(4) different levels with different requirement.","tags":["research","python","demo"]},{"id":2170,"created_on":"2020-08-18 03:59:45","title":"TensorFlow.js + Firebase","description":"Use Firebase Hosting to deploy and host a machine learning model at scale.","tags":["article","tutorial","tensorflow","tensorflow-js","production","firebase","serving"]},{"id":2171,"created_on":"2020-08-18 04:06:05","title":"Chex","description":"Chex is a library of utilities for helping to write reliable JAX code.","tags":["code","jax","library","unit-tests","testing","chex"]},{"id":2172,"created_on":"2020-08-18 04:12:18","title":"Compression of Deep Learning Models for Text: A Survey","description":"In this survey, we discuss six different types of methods for compression of such models to enable their deployment in real industry NLP projects.","tags":["paper","research","transformers","knowledge-distillation","model-compression","natural-language-processing","pruning","quantization","survey","parameter-sharing","tensor-decomposition","linear-transformers","arxiv:2008.05221"]},{"id":2173,"created_on":"2020-08-18 04:16:33","title":"Fine-tuning with custom datasets","description":"This tutorial will take you through several examples of using \ud83e\udd17 Transformers models with your own datasets.","tags":["article","code","notebook","tutorial","huggingface","transformers","fine-tuning","natural-language-processing","custom-datasets"]},{"id":2174,"created_on":"2020-08-18 04:19:06","title":"Why I stopped using GAN \u2014 ECCV 2020","description":"In this article, we show how we outperformed GAN with Normalizing Flow.","tags":["article","code","paper","research","gan","normalizing-flow","srflow"]},{"id":2175,"created_on":"2020-08-18 04:23:38","title":"EfficientNet: Rethinking Model Scaling for CNNs","description":"We take a look at the superior performance of EfficientNets compared to their counterparts and understand why we are looking into EfficientNets.","tags":["article","convolutional-neural-networks","efficientnet"]},{"id":2176,"created_on":"2020-08-18 04:26:54","title":"Audio Class","description":"Web-based tool for straight-forward class annotation of audio files.","tags":["code","flask","library","annotation","audio"]},{"id":2177,"created_on":"2020-08-18 04:33:04","title":"Universal Data Tool","description":"Collaborate & label any type of data, images, text, or documents, in an easy web interface or desktop app.","tags":["article","code","library","annotation"]},{"id":2178,"created_on":"2020-08-18 04:36:42","title":"FasterAI","description":"How to make your network smaller and faster with the use of fastai library.","tags":["article","fastai","knowledge-distillation","model-compression","pruning","batch-normalization","sparsifying","batch-normalization-folding"]},{"id":2179,"created_on":"2020-08-18 12:32:30","title":"Google Stock Price Prediction","description":"Using ALPHA VANTAGE API to predict google stock price.","tags":["code","flask","python","pandas","pyspark","kafka-python","al","alpha-vantage","boto3"]},{"id":2182,"created_on":"2020-08-18 18:08:37","title":"CryptoCRIT","description":"CryptoCRIT is an open-source Cryptocurrency project which facilitates a Cryptocurrency wallet for making payments. The associated Cryptocurrency is called CritC","tags":["article","code","paper","research","library","blockchain","cryptocurrency"]},{"id":2183,"created_on":"2020-08-18 23:07:17","title":"Generating music in the waveform domain","description":"Overview of generative models applied to music generation.","tags":["article","autoencoders","generative-adversarial-networks","variational-autoencoders","audio","music-generation","wavenet","waveforms"]},{"id":2184,"created_on":"2020-08-18 23:10:43","title":"From Hours to Seconds: 100x Faster Boosting, Bagging, & Stacking","description":"100x Faster Boosting, Bagging, and Stacking with RAPIDS cuML and Scikit-learn Machine Learning Model Ensembling.","tags":["article","code","tutorial","scikit-learn","boosting","cuml","rapids","emsembling","bagging","stacking"]},{"id":2185,"created_on":"2020-08-18 23:12:27","title":"Language Interpretability Tool (LIT)","description":"The Language Interpretability Tool (LIT) is a visual, interactive model-understanding tool for NLP models.","tags":["code","library","interpretability","natural-language-processing"]},{"id":2186,"created_on":"2020-08-18 23:24:41","title":"AI in Medicine and Imaging - Stanford Symposium 2020","description":"Through the AIMI Symposium we hope to address gaps and barriers in the field and catalyze more evidence-based solutions to improve health for all.","tags":["article","video","health","medicine","computer-vision","medical-imaging","stanford","videos"]},{"id":2188,"created_on":"2020-08-19 15:16:46","title":"Great Expectations","description":"Always know what to expect from your data.","tags":["code","video","library","unit-tests","pandas","testing","demo","tests","great-expectations","data-quality"]},{"id":2190,"created_on":"2020-08-19 18:19:49","title":"Practical Data Ethics","description":"Course covering disinformation, bias, ethical foundations, privacy & surveillance, silicon valley ecosystem, and algorithmic colonialism.","tags":["course","surveillance","fairness","bias","ethics","ethical-ml","disinformation"]},{"id":2191,"created_on":"2020-08-19 18:24:08","title":"Image Caption Generation","description":"Image Caption Generation is a challenging task where a textual description is generated given a picture. It needs both methods from Computer Vision and Natural ","tags":["code","tutorial","pytorch","convolutional-neural-networks","deep-learning","computer-vision","image-captioning","natural-language-processing"]},{"id":2192,"created_on":"2020-08-19 19:55:41","title":"PencilSketcher App - Web App using Streamlit, OpenCV, Python","description":"Built front-end using streamlit and then use Pencil Sketch Code (opencv) to build the back-end function  create a full-stack PencilSketcher Web App","tags":["code","tutorial","video","web-services","opencv","streamlit"]},{"id":2193,"created_on":"2020-08-20 00:39:05","title":"Effective testing for machine learning systems","description":"Why testing machine learning systems can be different, and discuss some strategies for writing effective tests for machine learning systems.","tags":["article","e2e-tests","unit-tests","testing","regression-tests"]},{"id":2194,"created_on":"2020-08-20 00:47:56","title":"Behavioral Testing of NLP Models","description":"Beyond Accuracy: Behavioral Testing of NLP models with CheckList.","tags":["code","paper","research","library","natural-language-processing","unit-tests","testing","checklist"]},{"id":2195,"created_on":"2020-08-20 20:45:52","title":"Streamlit Terran Timeline","description":"A face-recognition timeline generator tool for any kind of video!","tags":["code","library","computer-vision","face-detection","facial-recognition","streamlit","youtube","terran"]},{"id":2196,"created_on":"2020-08-20 21:35:09","title":"Superconductor Analysis and Prediction","description":"TensorFlow is used to predict the critical temperature of superconductors.  This model gets an r-squared score of 96.11% with the predicted and actual results.","tags":["code","dataset","python","tensorflow","materials","streamlit","demo"]},{"id":2197,"created_on":"2020-08-21 04:08:52","title":"Volksdep","description":"An open-source toolbox for deploying and accelerating PyTorch, Onnx and Tensorflow models with TensorRT.","tags":["code","keras","onnx","pytorch","tensorflow","library","tensorrt"]},{"id":2198,"created_on":"2020-08-21 07:41:10","title":"How to use Colab with GIT on your local machine","description":"In this post you will learn a very efficient way to use Colab when working on a project that will allow you control the files locally on your own computer.","tags":["article","git","colab"]},{"id":2199,"created_on":"2020-08-21 08:37:20","title":"How to Set Up Continuous Integration for Machine Learning","description":"How to Set Up Continuous Integration for Machine Learning with Github Actions and Neptune: Step by Step Guide.","tags":["article","code","tutorial","deep-learning","experiment-tracking","mlops","github-actions","ci-cd","neptune"]},{"id":2200,"created_on":"2020-08-21 12:45:54","title":"Bad passwords and the NIST guidelines","description":"Example project provided by DataCamp. In this project, you will write code that  automatically detects and flags the bad passwords.","tags":["code","tutorial","machine-learning","natural-language-processing","exploratory-data-analysis"]},{"id":2201,"created_on":"2020-08-22 03:45:00","title":"Configuring Google Colab Like A Pro","description":"How to Do Research Quality Machine Learning on a Budget.","tags":["article","code","notebook","tutorial","jupyter","gpu","google-colab","colab"]},{"id":2202,"created_on":"2020-08-22 03:55:27","title":"Graph Representation Learning Book","description":"Introduction to graph representation learning, including methods for embedding graph data, graph neural networks, and deep generative models of graphs.","tags":["article","embeddings","graph-neural-networks","graphs","knowledge-graphs","representation-learning","book","graph-representation-learning"]},{"id":2203,"created_on":"2020-08-22 05:58:20","title":"Image Similarity Search in PyTorch","description":"Simple Convolutional Auto-encoder based image similarity\r\nsearch to find similar images to given image or features.\r\nFully written in PyTorch.","tags":["article","code","tutorial","pytorch","autoencoders","convolutional-neural-networks","computer-vision","image-similarity-search","representation-learning","similarity-search","demo","image-retrieval"]},{"id":2204,"created_on":"2020-08-22 17:19:00","title":"Tensorflow Object Detection with Tensorflow 2","description":"Object Detection with Tensorflow 2 and the Tensorflow Object Detection API ","tags":["article","code","tutorial","tensorflow","computer-vision","object-detection"]},{"id":2205,"created_on":"2020-08-23 04:26:15","title":"Machine Learning for Product Managers","description":"A product-centric overview of machine learning.\r\n","tags":["article","product-management"]},{"id":2206,"created_on":"2020-08-23 04:31:34","title":"People + AI Guidebook","description":"The People + AI Guidebook was written to help user experience (UX) professionals and product managers follow a human-centered approach to AI.","tags":["article","design","product-management","ux","book","ui","user-experience"]},{"id":2207,"created_on":"2020-08-23 04:38:45","title":"Rules of Machine Learning: Best Practices for ML Engineering","description":"A basic knowledge of machine learning get the benefit of best practices in machine learning from around Google.","tags":["article","product-management","production","monitoring"]},{"id":2208,"created_on":"2020-08-23 19:52:47","title":"Non-Metric Space Library (NMSLIB)","description":"An efficient similarity search library and a toolkit for evaluation of k-NN methods for generic non-metric spaces.","tags":["code","library","embeddings","similarity-search","k-nearest-neighbors"]},{"id":2209,"created_on":"2020-08-23 19:55:03","title":"Benchmarking nearest neighbors","description":"Benchmarks of approximate nearest neighbor libraries in Python\r\n\r\n","tags":["code","library","embeddings","similarity-search","k-nearest-neighbors","benchmark"]},{"id":2210,"created_on":"2020-08-24 00:43:58","title":"KD Lib","description":"A PyTorch library to easily facilitate knowledge distillation for custom deep learning models.","tags":["code","paper","research","pytorch","library","knowledge-distillation","model-compression"]},{"id":2211,"created_on":"2020-08-24 00:50:21","title":"The Neural Network, A Visual Introduction","description":"Uncovering the deeper intuitions to build foundational knowledge on neural networks. ","tags":["code","tutorial","video","neural-networks","visualization","illustrated"]},{"id":2212,"created_on":"2020-08-24 05:56:22","title":"Visualizing Class Activation Maps for CNNs","description":"Visualizing Class Activation Maps for Convolutional Neural Networks","tags":["code","research","tutorial","tensorflow","convolutional-neural-networks","interpretability","visualization","activation-maps"]},{"id":2213,"created_on":"2020-08-24 07:37:34","title":"Towards representation learning for an image retrieval task","description":"This project explains self-supervised and regularized supervised image retrieval with the help of the latent space of an autoencoder.","tags":["article","code","tutorial","tensorflow","autoencoders","representation-learning","wandb","image-retrieval"]},{"id":2214,"created_on":"2020-08-24 11:16:47","title":"vedaseg","description":"vedaseg is an open source semantic segmentation toolbox based on PyTorch.","tags":["code","pytorch","computer-vision","semantic-segmentation","segmentation"]},{"id":2215,"created_on":"2020-08-24 11:52:10","title":"vedastr","description":"vedastr is an open source scene text recognition toolbox based on PyTorch.","tags":["code","pytorch","transformers","computer-vision","optical-character-recognition","scene-text-recognition"]},{"id":2216,"created_on":"2020-08-24 17:18:26","title":"Simple Ways to Tackle Class Imbalance","description":"Various methods used to counter class imbalance in image classification problems \u2013 class weighting, oversampling, under sampling, and two-phase learning.","tags":["article","code","notebook","tutorial","keras","tensorflow","wandb","class-imbalance"]},{"id":2217,"created_on":"2020-08-25 13:18:53","title":"neptune-contrib: Neptune contributions library","description":"Tools, helpers and everything else that helps you work with Neptune.","tags":["code","python","deep-learning","machine-learning","library","neptune"]},{"id":2218,"created_on":"2020-08-25 13:57:49","title":"CascadeTabNet","description":"An approach for end-to-end table detection and structure recognition from image-based documents\r\n","tags":["code","notebook","paper","research","video","computer-vision","demo","table-extraction","arxiv:2004.12629","table-detection"]},{"id":2219,"created_on":"2020-08-25 15:49:41","title":"Probabilistic Machine Learning 4 Trading + Business Understanding","description":"You will learn how to structure a trading problem in a probabilistic way using real Binance data, also improve your feature engineering process.","tags":["article","code","machine-learning","random-forests","decision-tree","trading"]},{"id":2220,"created_on":"2020-08-25 16:13:31","title":"Table Detection, Information Extraction and Structuring using ML","description":"Table Extraction (TE) is the task of detecting and decomposing table information in a document.","tags":["article","tutorial","information-retrieval","natural-language-processing","table-extraction","table-detection"]},{"id":2221,"created_on":"2020-08-25 20:43:54","title":"NewsBERT","description":" Using BERT & other transformer models for organizing RSS feed data ","tags":["code","notebook","library","zero-shot-learning","demo"]},{"id":2222,"created_on":"2020-08-25 22:12:59","title":"How Batch Normalization Works","description":"The article covers how Batch Normalization works and how it \"normalizes\" different input distributions to make gradient propagation easier.","tags":["article","code","notebook","convolutional-neural-networks","batch-normalization","batchnorm"]},{"id":2223,"created_on":"2020-08-26 04:21:37","title":"AxCell","description":"Automatic Extraction of Results from Machine Learning Papers","tags":["article","code","paper","research","computer-vision","tabular","table-extraction","table-detection","arxiv:2004.14356"]},{"id":2224,"created_on":"2020-08-26 13:22:18","title":"Reducing Traffic Mortality in the USA","description":"How can we find a good strategy for reducing traffic-related deaths?","tags":["code","machine-learning","health","healthcare","mortality-prediction","data-science","exploratory-data-analysis"]},{"id":2225,"created_on":"2020-08-26 16:48:16","title":"Explainable and Reproducible ML modeling with DALEX and Neptune.","description":"DALEX-Neptune integration that allows users to easily add model's behavior explanations to experiments.","tags":["article","research","tutorial","deep-learning","machine-learning","demo","xai","explainable-ai"]},{"id":2226,"created_on":"2020-08-27 01:54:16","title":"Hyperparameter Optimization for \ud83e\udd17 Transformers: A Guide","description":"Basic grid search is not the most optimal, and in fact, the hyperparameters we choose can have a significant impact on our final model performance.","tags":["article","code","notebook","tutorial","transformers","natural-language-processing","ray","hyperparameter-optimization","ray-tune"]},{"id":2227,"created_on":"2020-08-27 02:04:51","title":"Meta-Learning Is All You Need","description":"How can we design neural-based Bayesian meta-learning algorithms?","tags":["article","video","bayesian-deep-learning","meta-learning"]},{"id":2228,"created_on":"2020-08-27 02:07:36","title":"MiniTorch","description":"A teaching library for machine learning engineers who wish to learn about the internal concepts underlying deep learning systems.","tags":["article","code","deep-learning","library","minitorch"]},{"id":2229,"created_on":"2020-08-27 02:12:14","title":"Docker in Action","description":"Detailed notes from the book Docker In Action.","tags":["article","tutorial","docker"]},{"id":2230,"created_on":"2020-08-27 09:08:10","title":"Disney Movies and Box Office Success","description":"In this project, you will analyze data to see how Disney movies have changed in popularity since its first movie release","tags":["code","machine-learning","classification","similarity-search","movies"]},{"id":2231,"created_on":"2020-08-27 09:11:04","title":"Which Debts Are Worth the Bank's Effort?","description":"Play bank data scientist and use regression discontinuity to see which debts are worth collecting.","tags":["code","machine-learning","banking","finance","data-summarization"]},{"id":2232,"created_on":"2020-08-27 11:00:34","title":"GenRL","description":"GenRL is a PyTorch-First Reinforcement Learning library centered around reproducible and generalizable algorithm implementations.","tags":["code","research","tutorial","pytorch","deep-q-networks","library","multi-agent-reinforcement-learning","reinforcement-learning"]},{"id":2233,"created_on":"2020-08-27 11:26:46","title":"A 2020 review of Handwritten Character Recognition","description":"Concept of handwritten text recognition,  relevant use-cases, different neural network architectures involved in achieving the results, training your own model","tags":["article","tutorial","convolutional-neural-networks","computer-vision","natural-language-processing","optical-character-recognition"]},{"id":2234,"created_on":"2020-08-27 13:44:48","title":"MTS (MLP-Torch-Sklearn): Pytorch MLP implementation for Sklearn","description":"Wanna play with Pytorch-based MLP implementation using datasets from the awesome sklearn library. This is made light-weight, simple and easy to run.","tags":["code","pytorch","scikit-learn","deep-learning","multilayer-perceptrons","classification-regression"]},{"id":2235,"created_on":"2020-08-27 16:03:12","title":"Shift-Ctrl-F: Semantic Search for the Browser","description":"\ud83d\udd0e: Search the information available on a webpage using natural language instead of an exact string match.","tags":["code","javascript","tensorflow-js","attention","bert","transformers","library","natural-language-processing","question-answering","chrome-extension"]},{"id":2236,"created_on":"2020-08-28 01:05:34","title":"Git for Data: Not a Silver Bullet","description":"What we mean when we talk about version-control for data.","tags":["article","git","dvc","versioning","data"]},{"id":2237,"created_on":"2020-08-28 01:10:32","title":"Self-classifying MNIST Digits","description":"Achieving Distributed Coordination with Neural Cellular Automata\r\n\r\n","tags":["article","code","notebook","mnist","cellular-automata","self-classification","automata","distributed-coordination"]},{"id":2238,"created_on":"2020-08-28 01:24:08","title":"Spinning Up in Deep RL (OpenAI)","description":"An educational resource to help anyone learn deep reinforcement learning.","tags":["code","tutorial","pytorch","tensorflow","reinforcement-learning","openai"]},{"id":2239,"created_on":"2020-08-28 07:07:39","title":"An Introduction to Adversarial Examples in Deep Learning","description":"This report provides an intuitive introduction to adversarial examples, discusses a wide variety of different adversarial attacks and, most notably, provides ad","tags":["article","code","tutorial","deep-learning","computer-vision","wandb","adversarial-learning","adversarial-attacks"]},{"id":2240,"created_on":"2020-08-29 01:38:18","title":"Hopfield Networks is All You Need","description":"This blog post explains the paper Hopfield Networks is All You Need and the corresponding new PyTorch Hopfield layer.","tags":["article","code","paper","research","pytorch","hopfield-networks","arxiv:2008.02217"]},{"id":2241,"created_on":"2020-08-29 05:45:34","title":"Objax","description":"Contraction of Object and JAX - a minimalist object-oriented design and a readable code base.","tags":["code","jax","library","demo","opjax"]},{"id":2242,"created_on":"2020-08-29 08:10:21","title":"Deep dive into ROI layer in Object Detection Models","description":"In this blog post we will implement in torch ROI Pool and ROI Align models from scratch.","tags":["article","tutorial","computer-vision","object-detection"]},{"id":2243,"created_on":"2020-08-29 18:05:11","title":"SwAV","description":"Unsupervised Learning of Visual Features by Contrasting Cluster Assignments","tags":["article","paper","research","self-supervised-learning","unsupervised-learning","swav"]},{"id":2244,"created_on":"2020-08-30 02:46:52","title":"Boost your Colab Notebooks with GCP and AWS Instances","description":"How to upgrade your Colab with Google Cloud Platform or Amazon Web Service Instance as a backend.","tags":["article","aws","gcp","gpu","google-cloud-platform","colab"]},{"id":2245,"created_on":"2020-08-30 02:51:07","title":"On the Bottleneck of Graph Neural Networks and its Implications","description":"The mechanism of propagating information between neighbors creates a bottleneck when every node aggregates messages from its neighbors.","tags":["code","paper","research","video","graph-neural-networks","graphs","bottleneck","arxiv:2006.05205"]},{"id":2246,"created_on":"2020-08-30 06:05:21","title":"Questgen- An NLP library for state-of-the-art Question Generation","description":"Questgen AI is an opensource, easy to use NLP library for Question generation. It can generate MCQs, Boolean (Yes\/No), FAQs and also paraphrase any question.\r\n","tags":["code","notebook","research","huggingface","transformers","library","natural-language-processing","question-answering","question-generation","t5","demo"]},{"id":2247,"created_on":"2020-08-30 11:48:19","title":"Unsupervised Keyphrase Extraction","description":"Learn about unsupervised algorithms for automatically extracting representative keyword and phrases from documents","tags":["article","tutorial","information-extraction","keyword-extraction","natural-language-processing","unsupervised-learning"]},{"id":2248,"created_on":"2020-08-30 15:41:31","title":"Learn Machine Learning in 2020!","description":"Bunch of you asked me how to get started so here is the answer!","tags":["article","video","deep-learning","machine-learning"]},{"id":2249,"created_on":"2020-08-31 02:23:32","title":"Heavy Metal Subgenre Classifier","description":"A music genre classifier trained to classify heavy metal subgenres.","tags":["article","code","dataset","convolutional-neural-networks","recurrent-neural-networks","music","audio-classification"]},{"id":2250,"created_on":"2020-08-31 09:20:55","title":"Text Data Augmentation with MarianMT","description":"Learn how to use machine translation models in Hugging Face Transformers for data augmentation.","tags":["article","tutorial","huggingface","transformers","data-augmentation","natural-language-processing"]},{"id":2251,"created_on":"2020-08-31 10:05:12","title":"Practical AI: Using NLP word embeddings to solve localization ","description":"Using NLP word vectors (word2vec, glove, etc) in a novel way to solve the problem of localization in edtech.","tags":["article","notebook","tutorial","embeddings","natural-language-processing","word-embeddings","gensim","demo","word-vectors"]},{"id":2252,"created_on":"2020-08-31 23:40:26","title":"Explore then Execute","description":"Adapting without Rewards via Factorized Meta-Reinforcement Learning","tags":["article","research","meta-learning","reinforcement-learning","meta-reinforcement-learning"]},{"id":2253,"created_on":"2020-08-31 23:44:32","title":"Opacus","description":"A high-speed library for training PyTorch models with differential privacy.","tags":["article","code","pytorch","library","privacy","differential-privacy","opacus"]},{"id":2254,"created_on":"2020-08-31 23:54:10","title":"PyTorch Performance Tuning Guide - Szymon Migacz, NVIDIA","description":"ECCV 2020 Tutorial on Accelerating Computer Vision with Mixed Precision","tags":["article","video","pytorch","demo","mixed-precision","eccv-2020"]},{"id":2255,"created_on":"2020-09-01 04:49:38","title":"Tensorflow, Pytorch, Transformer, Fastai, etc. Tutorials","description":"BERT Classification, Question Answering, Seq2Seq Machine Translation, Contextual Topic Modeling, Large Scale Multilabelclassification, etc","tags":["code","notebook","pytorch","tensorflow","attention","bert","transformers","natural-language-processing","text-classification","notebooks"]},{"id":2256,"created_on":"2020-09-01 16:58:23","title":"VSCode on Google Colab","description":"Learn how to setup and use VSCode as an IDE on Google Colab","tags":["article","notebook","tutorial","colab","vscode","ngrok"]},{"id":2257,"created_on":"2020-09-01 19:33:46","title":"Encrypt and Decrypt Files using Python","description":"Introduction to file encryption and decryption using Python. Detailed code examples with explanations and use of cryptography library.","tags":["article","tutorial","python","cyber-security","network-security","program-development","security"]},{"id":2258,"created_on":"2020-09-02 09:05:08","title":"Graph Convolutions for dummies","description":"An article explaining Graph Convolutional Networks as simply as possible.","tags":["article","tutorial","graph-convolutional-networks","graph-neural-networks","graphs","geometric-deep-learning"]},{"id":2259,"created_on":"2020-09-02 23:08:03","title":"ECCV 2020: Some Highlights","description":"A sort of a snapshot of the conference by summarizing some papers (& listing some) that grabbed my attention.","tags":["article","research","computer-vision","eccv-2020","conference"]},{"id":2260,"created_on":"2020-09-02 23:13:20","title":"CVPR 2020: A Snapshot","description":"A snapshot of the conference by summarizing some papers (& listing some) that grabbed my attention.","tags":["article","research","computer-vision","cvpr-2020","conference"]},{"id":2261,"created_on":"2020-09-02 23:18:29","title":"A Framework For Contrastive Self-Supervised Learning","description":"A conceptual framework for characterizing contrastive self-supervised learning approaches.","tags":["article","paper","research","pytorch","contrastive-loss","self-supervised-learning","pytorch-lightning","contrastive-learning","arxiv:2009.00104"]},{"id":2262,"created_on":"2020-09-03 12:10:24","title":"R.U.Stoked","description":"NLP (Sentiment Analysis) project to demonstrate a pipeline of data from the very first stage of data collection through ML model deployment.","tags":["code","tutorial","aws","docker","machine-learning","natural-language-processing","sentiment-analysis","streamlit","github-actions","demo","deployment"]},{"id":2263,"created_on":"2020-09-03 23:05:32","title":"TTT: Fine-tuning Transformers with TPUs or GPUs acceleration","description":"TTT is short for a package for fine-tuning \ud83e\udd17 Transformers with TPUs, written in Tensorflow2.0+.","tags":["article","code","notebook","research","tutorial","tensorflow","transformers","library","natural-language-processing","tpu","gpu","tensorflow-tpus"]},{"id":2264,"created_on":"2020-09-04 01:24:22","title":"MushroomRL","description":"Python library for Reinforcement Learning.","tags":["code","pytorch","library","reinforcement-learning"]},{"id":2265,"created_on":"2020-09-04 01:28:41","title":"Deploying a HuggingFace NLP Model with KFServing","description":"Modifying a Hugging Face pre-trained model to run as a KFServing hosted model.","tags":["article","tutorial","huggingface","transformers","natural-language-processing","production","kubeflow","serving","kfserving"]},{"id":2266,"created_on":"2020-09-04 01:42:26","title":"Wav2Lip: Accurately Lip-syncing Videos In The Wild","description":"A Lip Sync Expert Is All You Need for Speech to Lip Generation In the Wild","tags":["article","code","paper","research","video","audio","computer-vision","image-generation","demo","wav2lip","arxiv:2008.10010"]},{"id":2267,"created_on":"2020-09-04 02:50:39","title":"What Is MLOps?","description":"Machine learning operations, MLOps, are best practices for businesses to run AI successfully with help from an expanding software products and cloud services.","tags":["article","production","mlops"]},{"id":2268,"created_on":"2020-09-05 01:06:07","title":"NLP Course | For You","description":"This is an extension to the (ML for) Natural Language Processing course I teach at the Yandex School of Data Analysis (YSDA) since fall 2018. ","tags":["article","course","natural-language-processing"]},{"id":2269,"created_on":"2020-09-05 01:09:06","title":"Learning to Summarize with Human Feedback","description":"Human feedback models outperform much larger supervised models and reference summaries on TL;DR","tags":["article","code","paper","research","natural-language-processing","text-summarization","openai","demo","human-feedback","feedback-loops","arxiv:2009.01325"]},{"id":2270,"created_on":"2020-09-05 01:12:15","title":"Deep Semi-Supervised Learning","description":"Discusses SSL in a deep learning setting and goes through some of the main deep learning SSL methods.","tags":["article","code","paper","research","semi-supervised-learning","arxiv:2006.05278"]},{"id":2271,"created_on":"2020-09-05 07:10:06","title":"Latest advancements in video streaming with AI","description":"AI developments in video streaming using Super-resolution, Per-title encoding, P2P","tags":["article","tutorial","artificial-general-intelligence","deep-learning","machine-learning","computer-vision","super-resolution","video-classification"]},{"id":2272,"created_on":"2020-09-05 16:31:38","title":"Learn PyTorch","description":"3 steps to learn PyTorch","tags":["tutorial","pytorch","deep-learning","deep-learning-frameworks"]},{"id":2273,"created_on":"2020-09-05 18:22:44","title":"ONNX Transformers","description":"Accelerated NLP pipelines for fast inference \ud83d\ude80 on CPU. Built with \ud83e\udd17 Transformers and ONNX runtime.","tags":["code","onnx","transformers","library","natural-language-processing","inference"]},{"id":2274,"created_on":"2020-09-06 06:08:35","title":"Transformer Reinforcement Learning","description":"Train transformer language models with reinforcement learning.","tags":["article","code","huggingface","transformers","library","language-modeling","natural-language-processing","reinforcement-learning","proximal-policy-optimization"]},{"id":2275,"created_on":"2020-09-06 07:26:21","title":"hugdatafast: huggingface\/nlp + fastai","description":"The elegant integration of huggingface\/nlp and fastai2 and handy transforms using pure huggingface\/nlp ","tags":["code","dataset","fastai","huggingface","transformers","natural-language-processing"]},{"id":2277,"created_on":"2020-09-06 14:23:25","title":"Neural Network from scratch - Part 1\/2","description":"A brief introduction to neural networks with implementation in NumPy.","tags":["article","tutorial","deep-learning","machine-learning","neural-networks"]},{"id":2278,"created_on":"2020-09-06 18:48:45","title":"Top 10 Deep Learning Breakthroughs \u2014 AlexNet","description":"Details regarding AlexNet and its code implementation. ","tags":["article","code","tutorial","convolutional-neural-networks","deep-learning","machine-learning"]},{"id":2279,"created_on":"2020-09-06 18:54:40","title":"Top 10 Deep Learning Breakthroughs \u2014 Family of SNGD Optimizers","description":"Choice of Optimization algorithms has always been the center of discussions and research inside the ML community. This article unravels the journey of optimizer","tags":["article","tutorial","deep-learning","machine-learning","library","optimizer"]},{"id":2280,"created_on":"2020-09-06 18:59:46","title":"Top 10 Deep Learning Breakthroughs \u2014 Deep Reinforcement Learning","description":"The article unravels the journey behind reaching the point when Reinforcement Learning combined with Deep Learning defeated a Go player world champion.","tags":["article","tutorial","deep-learning","machine-learning","reinforcement-learning"]},{"id":2281,"created_on":"2020-09-06 23:37:10","title":"AutoScraper","description":"A Smart, Automatic, Fast and Lightweight Web Scraper for Python.","tags":["code","library","web-scraping","autoscraper"]},{"id":2282,"created_on":"2020-09-06 23:42:37","title":"Antialiased CNNs","description":"Making Convolutional Networks Shift-Invariant Again.","tags":["article","code","paper","research","video","convolutional-neural-networks","library","shift-invariant","arxiv:1904.11486"]},{"id":2283,"created_on":"2020-09-07 07:13:04","title":"Data analysis made easy: Text2Code for Jupyter notebook","description":"A jupyter notebook extension for Text2Code for basic pandas and plotly commands","tags":["article","code","tutorial","video","spacy","library","named-entity-recognition","natural-language-processing","pandas","jupyter","visualization","exploratory-data-analysis","fiass","universal-sentence-encoder"]},{"id":2284,"created_on":"2020-09-07 10:42:32","title":"electra_pytorch:  ELECTRA in PyTorch (fastai + huggingface)","description":"Unofficial reimplementation of <ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators>","tags":["code","paper","research","fastai","huggingface","pytorch","deep-learning","natural-language-processing","pretraining","arxiv:2003.10555"]},{"id":2285,"created_on":"2020-09-07 13:36:55","title":"Images of radio boxes","description":"I have collected about 15+k raw images of radio boxes across 500+ forms and hand-picked 200+  images that can be used to determine if a radio box is checked.","tags":["code","dataset","video","computer-vision","image-classification"]},{"id":2286,"created_on":"2020-09-07 19:47:07","title":"Beginner-friendly PyTorch GANs repository","description":"Implementation of various GAN architectures starting with the original GAN paper.","tags":["code","tutorial","pytorch","deep-learning","generative-adversarial-networks","education"]},{"id":2287,"created_on":"2020-09-07 20:56:51","title":"omega|ml - building and deploying ML models the easy way","description":"Deploying  ML is hard. It should not be. omega|ml makes it a breeze.","tags":["article","code","library","production","mlops","omega"]},{"id":2288,"created_on":"2020-09-08 04:10:57","title":"Which GPU(s) to Get for Deep Learning","description":"My Experience and Advice for Using GPUs in Deep Learning.","tags":["article","tutorial","hardware","gpu"]},{"id":2289,"created_on":"2020-09-08 04:12:41","title":"ElasticTransformers","description":"Making BERT stretchy. Semantic Elasticsearch with Sentence Transformers.","tags":["article","code","huggingface","attention","bert","transformers","library","natural-language-processing","search","elastic-search","elastictransformers"]},{"id":2290,"created_on":"2020-09-09 00:16:32","title":"Fine-tune a non-English GPT-2 Model with Huggingface","description":" In this tutorial, we are going to use the transformers library by Huggingface. We will use the new Trainer class and fine-tune out GPT-2 model.","tags":["article","code","notebook","tutorial","huggingface","gpt","transformers","fine-tuning","natural-language-processing","gpt-2"]},{"id":2291,"created_on":"2020-09-09 04:46:15","title":"Understanding Entanglement With SVD","description":"Schmidt rank in the hopes of helping the math of entanglement feel a little less... tangly.","tags":["article","singular-value-decomposition","entanglement"]},{"id":2292,"created_on":"2020-09-09 04:49:48","title":"Training on larger batches with less memory in AllenNLP","description":"Several options available in AllenNLP that will allow you to train with larger batches by saving memory.","tags":["article","allennlp","allenai","batch-size"]},{"id":2293,"created_on":"2020-09-09 05:00:51","title":"Machine Learning Tutorials","description":"Introduce machine learning contents. The content aims to strike a good balance between mathematical notations, hands-on implementation. Primarily in Python3.","tags":["code","tutorial","python","machine-learning"]},{"id":2294,"created_on":"2020-09-09 16:14:37","title":"Getting started with large-scale ETL jobs using Dask and AWS EMR","description":"EMR is AWS\u2019s distributed data platform, which we can interact with and submit jobs to from a JupyterLab notebook running on our local machine.","tags":["article","notebook","aws","dask","mlops","exploratory-data-analysis","etl","mapreduce","elastic-mapreduce"]},{"id":2295,"created_on":"2020-09-09 16:36:45","title":"How to Create a Cartoonizer with TensorFlow Lite?","description":"An end-to-end tutorial on how to convert to TensorFlow Lite (TFLite) model and deploy it to an Android app for cartoonizing an image captured by camera.","tags":["article","code","generative-adversarial-networks","computer-vision","tensorflow-lite"]},{"id":2296,"created_on":"2020-09-10 01:15:57","title":"How to Test Machine Learning Code and Systems","description":"\ud83d\udea6 Minimal examples of testing machine learning for correct implementation, expected learned behaviour, and model performance.\r\n\r\n","tags":["article","code","tutorial","unit-tests","testing"]},{"id":2297,"created_on":"2020-09-10 21:51:53","title":"Fast Block Sparse Matrices for Pytorch","description":"Enables networks which are both smaller and faster to let anybody use neural networks in production at low cost, and to improve the experience for the end user.","tags":["article","code","pytorch","library","gpu","efficiency","sparsity"]},{"id":2298,"created_on":"2020-09-11 00:02:10","title":"torchCDE","description":"Differentiable controlled differential equation solvers for PyTorch with GPU support and memory-efficient adjoint backpropagation.","tags":["code","pytorch","library","time-series","neural-ode","torchcde"]},{"id":2299,"created_on":"2020-09-11 00:07:11","title":"Latent graph neural networks: Manifold learning 2.0?","description":"Parallels between recent works on latent graph learning and older techniques of manifold learning.","tags":["article","graph-neural-networks","graphs","representation-learning","graph-representation-learning","manifold"]},{"id":2300,"created_on":"2020-09-11 00:11:14","title":"Real Python Recommendation Engine","description":"A full stack data science project that performs document similarity on RealPython.com content. Content recommendations are implemented via a Chrome extension.","tags":["code","fastapi","spacy","full-stack","library","natural-language-processing","data-science","demo"]},{"id":2301,"created_on":"2020-09-11 05:26:17","title":"Unsupervised Visual Representation Learning with SwAV","description":"In this report, we explore the SwAV framework, as presented in \"Unsupervised Learning of Visual Features by Contrasting Cluster Assignments\" by Caron et al.","tags":["article","code","research","tutorial","tensorflow","contrastive-loss","self-supervised-learning","unsupervised-learning","wandb","visual-representation-learning"]},{"id":2302,"created_on":"2020-09-11 08:23:24","title":"Recurrent neural networks: building a custom LSTM cell in Pytorch","description":"Are you interested to see how RNN's process sequences under the hood? That\u2019s what this article is all about. We are going build our our own custom LSTM model.","tags":["article","code","notebook","deep-learning","machine-learning","recurrent-neural-networks"]},{"id":2303,"created_on":"2020-09-11 14:45:07","title":"Doodle Recognition using PyTorch","description":"Multi-Class Image Classification using CNN ","tags":["article","research","tutorial","python","pytorch","convolutional-neural-networks","deep-learning","dimensionality-reduction"]},{"id":2304,"created_on":"2020-09-11 17:54:04","title":"Graph Neural Networks","description":"A descriptive guide for Graph Neural Networks.","tags":["article","tutorial","graph-neural-networks"]},{"id":2305,"created_on":"2020-09-12 01:01:18","title":"DeepSpeed: Extreme-scale model training for everyone","description":"DeepSpeed is a deep learning optimization library that makes distributed training easy, efficient, and effective.","tags":["article","code","pytorch","library","distributed-training","gpu","deepspeed"]},{"id":2306,"created_on":"2020-09-12 01:06:34","title":"Optimus","description":"\ud83d\ude9a Agile Data Preparation Workflows made easy with dask, cudf, dask_cudf and pyspark.","tags":["code","library","preprocessing","cudf","dask","pyspark","exploratory-data-analysis","optimus"]},{"id":2307,"created_on":"2020-09-12 01:14:03","title":"Target Encoding with RAPIDS cuML: Do More with Categorical Data","description":"Walk through the design of target encoding with RAPIDS cuML.","tags":["article","code","notebook","encoder","cuml","rapids","categorical-data"]},{"id":2308,"created_on":"2020-09-12 01:18:03","title":"ExplainX","description":"ExplainX is an explainable AI framework for data scientists to explain any black-box model behavior to business stakeholders.\r\n\r\n","tags":["code","video","library","interpretability","explainx"]},{"id":2309,"created_on":"2020-09-12 03:29:55","title":"Bike rental count prediction'","description":"Bike-rental-count-prediction\r\nThe objective of this Case is to Prediction of bike rental count on daily basis on the environmental and seasonal settings.","tags":["code","decision-trees","machine-learning","random-forests","decision-tree"]},{"id":2310,"created_on":"2020-09-12 12:33:20","title":"Image Super-Resolution","description":"In this project we learn how to train a super-resolution model ESPCN on DIV2K dataset to upscale images using AI by 3x","tags":["article","research","tutorial","artificial-general-intelligence","deep-learning","machine-learning","computer-vision","super-resolution"]},{"id":2311,"created_on":"2020-09-12 19:28:05","title":"PyTorch vs TensorFlow?","description":"Make a data-driven decision about which one you should be using.","tags":["tutorial","pytorch","tensorflow","deep-learning"]},{"id":2312,"created_on":"2020-09-12 22:33:56","title":"Codequestion","description":"Ask coding questions directly from the terminal.","tags":["article","code","dataset","fasttext","library","embeddings","natural-language-processing","question-answering","sentence-embeddings"]},{"id":2313,"created_on":"2020-09-13 14:44:10","title":"DCGAN, cGAN, vGAN in PyTorch (beginner-friendly)","description":"Beginner friendly, PyTorch implementation of various GAN architectures.","tags":["code","tutorial","deep-learning","generative-adversarial-networks"]},{"id":2314,"created_on":"2020-09-14 00:42:39","title":"The Sorcerer\u2019s Apprentice Guide to Training LSTMs","description":"Tricks of the trade for training Long Short-Term Memory networks.","tags":["article","lstm","recurrent-neural-networks","tips"]},{"id":2315,"created_on":"2020-09-14 00:48:04","title":"The Curse of Dimensionality\u2026 minus the curse of jargon","description":"In a nutshell, it\u2019s all about loneliness\r\n","tags":["article","dimensionality-reduction","curse-of-dimensionality"]},{"id":2316,"created_on":"2020-09-14 00:52:09","title":"Transformers are Graph Neural Networks","description":"My engineering friends often ask me: deep learning on graphs sounds great, but are there any real applications?","tags":["article","transformers","graph-neural-networks","natural-language-processing"]},{"id":2317,"created_on":"2020-09-14 05:32:45","title":"End-to-end Object Detection in TensorFlow Lite","description":"This project shows how to train a custom detection model with the TFOD API, optimize it with TFLite, and perform inference with the optimized model.","tags":["code","tutorial","tensorflow","computer-vision","object-detection","tensorflow-lite"]},{"id":2318,"created_on":"2020-09-14 11:55:33","title":"Jepto - Digital Marketing Analytics","description":"KPI Prediction and Anomaly Detection of digital marketing data for both technical and non-technical marketers and business owners.","tags":["article","anomaly-detection","time-series","time-series-forecasting"]},{"id":2319,"created_on":"2020-09-14 19:21:33","title":"Cartoonizer with TensorFlow.js","description":"An app to turn your photos into cartoon-styled images \ud83c\udfa8 within your browsers using White-box Cartoonization GAN.","tags":["code","tensorflow","tensorflow-js","generative-adversarial-networks","computer-vision","image-to-image-translation","demo"]},{"id":2320,"created_on":"2020-09-15 01:33:42","title":"Getting Oriented in the RAPIDS Distributed ML Ecosystem, ETL","description":"This blog post, the first of two exploring this emerging ecosystem, is an introduction to distributed ETL using the dask, cudf, and dask_cudf APIs.","tags":["article","pandas","cudf","gpu","dask","exploratory-data-analysis","rapids"]},{"id":2321,"created_on":"2020-09-15 07:31:30","title":"Machine Learning Educators on Twitter","description":"A curated list of people who make Machine Learning concepts clear and accessible through their blog posts, videos, books and courses.","tags":["article","machine-learning"]},{"id":2322,"created_on":"2020-09-15 14:50:02","title":"Tic Tac Toe - Trainable AI","description":"Teach a website TicTacToe by playing games and asking the neural network to learn from previous games.  You can watch it learn.","tags":["article","code","javascript","react","tensorflow","tensorflow-js","machine-learning"]},{"id":2323,"created_on":"2020-09-15 21:39:41","title":"DeepTrain","description":"Abstract away boilerplate train loop and data loading code, without making it into a black box. ","tags":["code","tensorflow","library","template","deeptrain"]},{"id":2324,"created_on":"2020-09-16 13:40:57","title":"Character level language model RNN","description":"This is a commentary of the min char language model of [@karpathy](https:\/\/twitter.com\/karpathy).","tags":["article","tutorial","recurrent-neural-networks"]},{"id":2325,"created_on":"2020-09-16 13:43:20","title":"Implementing Content-Based Image Retrieval with Siamese Networks","description":"With content-based image retrieval, we refer to the task of finding images containing attributes which are not in the image metadata, but in its visual content.","tags":["article","pytorch","siamese-networks","computer-vision","image-similarity-search","image-retrieval"]},{"id":2326,"created_on":"2020-09-17 00:18:51","title":"NLP for Developers: Multilingual NLP | Rasa","description":"In this video, Rasa Developer Advocate Rachael will talk about common approaches to handle language input in more than one language.","tags":["video","multilingual","natural-language-processing","rasa"]},{"id":2327,"created_on":"2020-09-17 15:36:45","title":"Paint with Machine Learning","description":"This web app allows you to create a landscape painting in the style of Bob Ross using a deep learning model served using a Spell model server.","tags":["article","pytorch","generative-adversarial-networks","web-design","computer-vision","image-classification","image-to-image-translation","interactive","demo"]},{"id":2328,"created_on":"2020-09-17 16:04:29","title":"Distilling Knowledge in Neural Networks","description":"This project demonstrates the compelling model optimization technique - knowledge distillation with code walkthroughs in TensorFlow. ","tags":["article","code","tutorial","tensorflow","computer-vision","wandb","model-optimization"]},{"id":2329,"created_on":"2020-09-18 07:12:37","title":"Beginner\u2019s Guide to KNN with cuML","description":"What is K-Nearest Neighbors? And how to implement it in Python with RAPIDS cuML.","tags":["article","code","dataset","notebook","machine-learning","k-nearest-neighbors","open-source","gpu","data-science","cuml","rapids"]},{"id":2330,"created_on":"2020-09-18 07:18:00","title":"Beginner\u2019s Guide to Logistic Regression with cuML","description":"What is Logistic Regression? And how to implement it in Python with RAPIDS cuML","tags":["article","code","dataset","notebook","logistic-regression","machine-learning","regression","gpu","data-science","cuml","rapids"]},{"id":2331,"created_on":"2020-09-18 07:27:06","title":"Distributed Linear Regression with cuML","description":"How to scale GPU machine learning with Dask (w\/ code + data)","tags":["article","code","notebook","tutorial","linear-regression","machine-learning","regression","gpu","dask","data-science","cuml","rapids"]},{"id":2332,"created_on":"2020-09-18 08:49:55","title":"Recurrent Neural Networks: building GRU cells VS LSTM cells ","description":"What are the advantages of RNN\u2019s over transformers? When to use GRU\u2019s over LSTM? What are the equations of GRU really mean? How to build a GRU cell in Pytorch?","tags":["article","code","tutorial","deep-learning","gated-recurrent-units","lstm","machine-learning","recurrent-neural-networks","sequence-to-sequence","transformers","natural-language-processing"]},{"id":2333,"created_on":"2020-09-18 18:35:19","title":"Machine Learning-Enabled Design of Point Defects in 2D Materials ","description":"Using deep transfer learning, machine learning, and quantum mechanical calculations we predict key properties of point defects in 2D materials.","tags":["article","code","dataset","paper","research","deep-learning","machine-learning","transfer-learning"]},{"id":2334,"created_on":"2020-09-18 21:51:40","title":"Python 3.9: All You need to know","description":"The next version of Python brings a faster release schedule, performance boosts, handy new string functions, dictionary union operators, and more stable APIs.","tags":["article","python"]},{"id":2335,"created_on":"2020-09-18 21:53:59","title":"GitHub CLI 1.0: All you need to know","description":"GitHub CLI basically brings GitHub to your terminal.","tags":["article","github","cli","github-cli"]},{"id":2336,"created_on":"2020-09-19 08:40:37","title":"G-SimCLR","description":"TensorFlow implementation of G-SimCLR. ","tags":["code","paper","research","tensorflow","deep-learning","computer-vision","self-supervised-learning","arxiv:2009.12007"]},{"id":2337,"created_on":"2020-09-19 08:57:54","title":"3 Machine Learning Projects For Beginners","description":"here I give 3 simple yet highly rewarding ML projects you could start your ML journey with.","tags":["tutorial","machine-learning","machine-learning-projects","beginner-friendly-ml"]},{"id":2338,"created_on":"2020-09-19 11:15:16","title":"CS 860 - Algorithms for Private Data Analysis - Fall 2020","description":"This course is on algorithms for differentially private analysis of data.","tags":["course","video","privacy","differential-privacy"]},{"id":2339,"created_on":"2020-09-19 11:17:48","title":"Neural CDEs for Long Time-Series via the Log-ODE Method","description":"NCDEs for Long Time-Series via the Log-ODE Method.","tags":["code","paper","research","time-series","neural-cde","log-ode","arxiv:2009.08295"]},{"id":2340,"created_on":"2020-09-19 11:24:23","title":"Clumper","description":"A small python library that can clump lists of data together.","tags":["article","code","python","library","data-structures","clumper"]},{"id":2341,"created_on":"2020-09-20 00:34:03","title":"PyTorch Forecasting","description":"Time series forecasting with PyTorch.","tags":["code","pytorch","library","forecasting","time-series","pytorch-lightning"]},{"id":2342,"created_on":"2020-09-20 03:24:58","title":"Norfair","description":"Lightweight Python library for adding real-time 2D object tracking to any detector.","tags":["code","library","computer-vision","object-detection","object-tracking","norfair"]},{"id":2343,"created_on":"2020-09-20 14:39:44","title":"Pytorch Basics","description":"This Repo Contains beginner's guide to Pytorch implementation.","tags":["code","tutorial","pytorch","deep-learning","machine-learning"]},{"id":2344,"created_on":"2020-09-21 00:20:00","title":"Labelai","description":"Labelai is an online tool designed to label images, useful for training AI models.","tags":["article","code","library","annotation","computer-vision","image-classification","object-detection","demo"]},{"id":2345,"created_on":"2020-09-21 00:26:02","title":"Remo","description":"\ud83d\udc30 Python lib for remo - the app for annotations and images management in Computer Vision.","tags":["article","code","notebook","library","annotation","computer-vision","image-classification","object-detection","demo","remo"]},{"id":2346,"created_on":"2020-09-21 17:12:26","title":"What happens to developers in 2020?","description":"Complete Data Science approach to analyze programmer and programming language trends.","tags":["article","code","notebook","research","data-science"]},{"id":2347,"created_on":"2020-09-21 23:34:32","title":"Ultimate Python Study Guide","description":"Ultimate Python study guide for newcomers and professionals alike.","tags":["code","tutorial","python"]},{"id":2348,"created_on":"2020-09-21 23:47:06","title":"Layered Neural Rendering for Retiming People in Video","description":"Manipulating and editing the time in which different motions of individuals in the video occur.","tags":["article","paper","research","video","computer-vision","video-processing","retiming","layered-neural-rendering","arxiv:2009.07833"]},{"id":2349,"created_on":"2020-09-21 23:54:27","title":"Self Supervised Learning Fastai Extension","description":"Implementation of popular SOTA self-supervised learning algorithms as Fastai Callbacks.","tags":["article","code","fastai","pytorch","library","self-supervised-learning","callbacks"]},{"id":2350,"created_on":"2020-09-22 03:07:29","title":"Part 1: Deep Representations, a way towards neural style transfer","description":"A top down approach to conceiving neural style transfer","tags":["article","code","tutorial","keras","computer-vision","wandb","neural-style-tranfer","tensorflow2"]},{"id":2351,"created_on":"2020-09-22 03:42:58","title":"Simple Transformers: Transformers Made Easy","description":"Simple Transformers removes complexity and lets you get down to what matters \u2013 model training and experimenting with the Transformer model architectures.","tags":["article","code","notebook","tutorial","huggingface","transformers","natural-language-processing","text-classification","wandb","simple-transformers"]},{"id":2352,"created_on":"2020-09-22 11:59:45","title":"Numpy Tricks and A Strong Baseline for Vector Index","description":"Tricks used to improve the index and query speed by 1.6x and 2.8x while keeping the memory footprint constant.","tags":["article","code","search","numpy","vector-index","memmap"]},{"id":2353,"created_on":"2020-09-22 13:04:04","title":"TF Geometric","description":"Efficient and Friendly Graph Neural Network Library for TensorFlow 1.x and 2.x.","tags":["code","tensorflow","graph-convolutional-networks","library","graph-neural-networks","demo"]},{"id":2354,"created_on":"2020-09-22 14:42:44","title":"Data Scientist Portfolio ","description":"Template to Create a charming Data Science Portfolio.","tags":["article","code","github","data-science","portfolio","online"]},{"id":2355,"created_on":"2020-09-23 00:02:34","title":"\ud83d\udea7 Simple considerations for simple people building fancy NNs ","description":"I will try to highlight a few steps of my mental process when it comes to building and debugging neural networks. ","tags":["article","training","debugging","checklist","recipe"]},{"id":2356,"created_on":"2020-09-23 04:56:15","title":"Part 2: Deep Representations, a way towards neural style transfer","description":"A top-down approach to conceiving neural style transfer","tags":["article","code","tutorial","keras","computer-vision","wandb","neural-style-transfer","tensorflow2","wand"]},{"id":2357,"created_on":"2020-09-23 10:27:15","title":"Sudoku Solver","description":"Solving Sudoku by extracting the puzzle from photo using Computer Vision and OCR and solving it.","tags":["code","machine-learning","computer-vision","optical-character-recognition"]},{"id":2358,"created_on":"2020-09-23 12:41:16","title":"Student Dropout Prediction","description":"It is a machine learning based web app to predict whether a student get dropout from college based on his academic and financial details.","tags":["code","machine-learning","random-forests","decision-tree"]},{"id":2359,"created_on":"2020-09-23 12:47:47","title":"Supermarket System","description":"A web application for supermarket to manage all details.","tags":["code","css","html","javascript","sql","web-design"]},{"id":2360,"created_on":"2020-09-23 13:56:29","title":"3D Face: Fast, Accurate and Stable Reconstruction","description":"This work extends the previous work 3DDFA, named 3DDFA_V2, titled Towards Fast, Accurate and Stable 3D Dense Face Alignment, accepted by ECCV 2020. ","tags":["code","notebook","paper","research","pytorch","library","computer-vision","3d-face","face-aligment","arxiv:2009.09960"]},{"id":2361,"created_on":"2020-09-24 02:52:38","title":"Deploy streamlit app in Heroku","description":"Base project, with mandatory files and folders for deploying streamlit apps in Heroku","tags":["code","machine-learning","streamlit","heroku","ci-cd"]},{"id":2362,"created_on":"2020-09-24 03:18:47","title":"Deploy Flask app in Heroku","description":"Base project, with mandatory files and folders for deploying Flask apps in Heroku","tags":["code","tutorial","flask","machine-learning","ci-cd"]},{"id":2363,"created_on":"2020-09-24 03:22:26","title":"TensorFlow Recommenders","description":"An open-source TensorFlow package that makes building, evaluating, and serving sophisticated recommender models easy.","tags":["article","code","tensorflow","library","recommendation-systems"]},{"id":2364,"created_on":"2020-09-24 14:18:37","title":"Annotated Research Papers","description":"Finding papers hard to read? Read the annotated version with me","tags":["code","paper","research"]},{"id":2365,"created_on":"2020-09-24 18:52:08","title":"How to build a production-ready Deep Learning Training loop","description":"Building a custom training loop in Tensorflow and Python with checkpoints and Tensorboards visualizations","tags":["article","code","tutorial","deep-learning","machine-learning","computer-software","training","computer-vision","production","segmentation","demo"]},{"id":2366,"created_on":"2020-09-25 02:26:00","title":"Help-Me-Read: Text Summarization using Flask and HuggingFace.","description":"Text summarization, translation and Questions Answers generation using HuggingFace and deployed using Flask, Streamlit. Detailed guide on github. ","tags":["code","docker","huggingface","natural-language-processing","streamlit"]},{"id":2367,"created_on":"2020-09-25 07:39:43","title":"Interactive Analysis of Sentence Embeddings","description":"Learn how to interactively explore sentence embedding and labels in Tensorflow Embedding Projector.","tags":["article","tutorial","tensorflow","tensorflow-js","contextualized-embeddings","embeddings","natural-language-processing","visualization"]},{"id":2368,"created_on":"2020-09-25 07:47:27","title":"TableQA","description":"AI tool for querying  natural language on tabular data like csvs and other dataframes.","tags":["code","notebook","tutorial","databases","sql","natural-language-processing","question-answering","conversational-ai","demo","tabular"]},{"id":2369,"created_on":"2020-09-25 15:44:08","title":"GP-GAN: Towards Realistic High-Resolution Image Blending","description":"Blending composite images using a generative model and a Gaussian-Poisson equation with a Laplacian Pyramid","tags":["code","paper","research","pytorch","convolutional-neural-networks","deep-learning","generative-adversarial-networks","computer-vision","demo","laplacian-pyramid","image-blending","arxiv:1703.07195"]},{"id":2370,"created_on":"2020-09-25 16:39:03","title":"The Maker Philosophy with ML APIs","description":"Practising being a maker with Google Cloud Platform\u2019s ML APIs.","tags":["article","code","tutorial","gcp","apis","vision-api"]},{"id":2371,"created_on":"2020-09-25 18:10:13","title":"From Research to Production with Deep Semi-Supervised Learning","description":"Semi-Supervised Learning (SSL) has blossomed in the deep learning research community\u200a\u2014\u200awe share lessons learned over 15 months of taking SSL into production.","tags":["article","research","tutorial","deep-learning","machine-learning","production","semi-supervised-learning"]},{"id":2372,"created_on":"2020-09-25 18:39:59","title":" A spaced repetition app for keeping your reinforcement learning","description":"We aim to keep your reinforcement learning knowledge fresh by periodically reminding you of concepts making you a master of RL knowledge!!","tags":["article","reinforcement-learning"]},{"id":2373,"created_on":"2020-09-25 22:41:22","title":"GraphNorm","description":"A Principled Approach to Accelerating Graph Neural Network Training.","tags":["code","paper","research","graph-neural-networks","graphnorm","arxiv:2009.03294"]},{"id":2374,"created_on":"2020-09-26 05:14:12","title":"Extract Links from a Web Page using Python","description":"In this article we will discuss how to extract links from a URL using Python.","tags":["article","tutorial","python","program-development","web-services"]},{"id":2375,"created_on":"2020-09-26 05:34:59","title":"How to do more with less data ?\u2014 Active learning","description":"An Article and demonstration on how to use only a fraction of data to achieve the same accuracy as on the full data using an intuitive active learning method.","tags":["article","code","notebook","tutorial","machine-learning","active-learning","annotation","semi-supervised-learning"]},{"id":2376,"created_on":"2020-09-26 05:39:47","title":"colab-cli - sync jupyter notebooks with colab notebooks.","description":"Experience better workflow with google colab, local jupyter notebooks and git.You can now easily manage working with jupyter notebooks and google colab from cli","tags":["article","code","notebook","git","python","deep-learning","machine-learning","library","cli"]},{"id":2379,"created_on":"2020-09-26 18:11:44","title":"ML projects ideas! (I've got all these implemented on my GitHub)","description":"machine-learning\/deep learning project ideas (mostly computer vision)","tags":["machine-learning","machine-learning-project-ideas"]},{"id":2380,"created_on":"2020-09-27 02:28:27","title":"Interact with PyTorch layers using Jupyter Widgets","description":"Build your understanding of PyTorch's ConvTranspose1d layer using interactive visualisations\r\n\r\n","tags":["article","code","notebook","convolutional-neural-networks","interactive","padding","stride"]},{"id":2381,"created_on":"2020-09-27 02:32:42","title":"PySR","description":"Simple and fast symbolic regression in Python\/Julia via regularized evolution and simulated annealing.","tags":["code","paper","research","julia","python","regression","library","genetic-algorithm","arxiv:2006.11287","symbolic-regression","pysr"]},{"id":2382,"created_on":"2020-09-27 08:28:58","title":"Distributed SQL with Dask","description":"Scale your Python data science across multiple GPUs with BlazingSQL (w\/ code + data)","tags":["article","code","dataset","notebook","tutorial","python","sql","gpu","dask","rapids","blazingsql"]},{"id":2383,"created_on":"2020-09-27 08:35:26","title":"Beginner\u2019s Guide to BlazingSQL","description":"Everything you need to know when starting out","tags":["article","code","dataset","notebook","tutorial","python","sql","gpu","rapids","blazingsql"]},{"id":2384,"created_on":"2020-09-27 08:42:46","title":"Intro to Facebook Prophet","description":"Everything you need to know when starting out with Facebook\u2019s time series forecasting tool","tags":["article","code","dataset","tutorial","python","time-series","time-series-forecasting","prophet"]},{"id":2385,"created_on":"2020-09-27 09:05:00","title":"Beginner\u2019s Guide to Linear Regression with cuML","description":"Break down of simple & multiple linear regression and how to easily implement both in Python with RAPIDS AI\u2019s cuML","tags":["article","code","dataset","notebook","tutorial","python","linear-regression","machine-learning","regression","data-science","cuml","rapids"]},{"id":2386,"created_on":"2020-09-27 10:59:43","title":"Silero Models: pre-trained enterprise-grade STT models","description":"Silero Speech-To-Text models provide enterprise grade STT in a compact form-factor for several commonly spoken languages.","tags":["article","code","dataset","notebook","paper","research","onnx","pytorch","tensorflow","library","speech","speech-recognition","speech-to-text","demo"]},{"id":2387,"created_on":"2020-09-27 14:22:51","title":"GitHub Actions for Machine Learning","description":"This presentation discusses the use of GitHub Actions to automate certain steps of a toy ML project. ","tags":["code","github","tutorial","scikit-learn","wandb","mlops","github-actions"]},{"id":2388,"created_on":"2020-09-27 22:09:32","title":"SemTorch","description":"Different deep learning architectures definitions that can be applied to image segmentation.","tags":["code","fastai","pytorch","library","computer-vision","object-detection","semantic-segmentation","segmentation","instance-segmentation","salient-object-detection"]},{"id":2389,"created_on":"2020-09-28 05:34:15","title":"bingoset - CLI tool  to create image dataset.","description":"CLI Toolkit to quickly create an image dataset using Bing Image Search API.","tags":["code","library","computer-vision","image-classification","datasets","cli","bing-api","dataset-creation","bingoset"]},{"id":2390,"created_on":"2020-09-28 05:46:03","title":"mini-pokedex end to end tutorial  -  Gotta classify 'em all!","description":"Build a Pokemon image classifier to classify the awesome starters Pikachu, Charmander, Squirtle, and Bulbasaur.","tags":["article","code","tutorial","azure","docker","fastai","computer-vision","image-classification","pokemons"]},{"id":2391,"created_on":"2020-09-28 11:19:12","title":"Text Classification Using Long Short Term Memory & GloVe Embeddin","description":"Classify Text using Pre-trained Embeddings and Bidirectional LSTMs\r\n","tags":["article","tensorflow"]},{"id":2392,"created_on":"2020-09-28 11:23:55","title":"Deep Learning with TensorFlow","description":"Learn Deep Learning with TensorFlow","tags":["video","keras","tensorflow"]},{"id":2393,"created_on":"2020-09-28 22:44:21","title":"A Friendly Introduction to PCA","description":"After years of almost, but not quite fully understanding PCA, here is my attempt to explain it fully, hopefully leaving some of the magic intact.","tags":["article","dimensionality-reduction","unsupervised-learning","principal-component-analysis"]},{"id":2394,"created_on":"2020-09-28 22:46:36","title":"Why Data Quality is Key to Successful ML Ops","description":"A look at ML Ops and highlight how and why data quality is key to ML Ops workflows.","tags":["article","production","unit-tests","testing","mlops","great-expectations"]},{"id":2395,"created_on":"2020-09-28 22:51:23","title":"Python caching in GitHub Actions","description":"How to speed up slow Python builds in GitHub Actions with effective caching.","tags":["article","tutorial","mlops","github-actions","caching"]},{"id":2396,"created_on":"2020-09-29 00:36:12","title":"EfficientDet meets Pytorch Lightning","description":"Beginner friendly guide to object detection using EfficientDet.","tags":["article","tutorial","computer-vision","object-detection","efficientdet","pytroch","pytroch-lightning"]},{"id":2397,"created_on":"2020-09-29 02:15:46","title":"Optimizing MobileDet for Mobile Deployments","description":"Learn about the criticalities of effectively optimizing MobileDet object detectors for mobile deployments.","tags":["article","code","notebook","paper","research","tutorial","tensorflow","computer-vision","object-detection","tensorflow-lite","edge-ai","arxiv:2004.14525"]},{"id":2398,"created_on":"2020-09-29 09:58:09","title":"Deep Dive into TensorBoard: Tutorial With Examples","description":"There is a common business saying that you can\u2019t improve what you don\u2019t measure. This is true in machine learning as well. There are various tools for measuring","tags":["article","tutorial","tensorflow","tensorboard"]},{"id":2399,"created_on":"2020-09-29 14:23:00","title":"Image Dehazing using GMAN net","description":"Single image dehazing using the GMAN network and its implementation in Tensorflow(version 2+).","tags":["article","code","dataset","research","tensorflow","deep-learning","dehazing"]},{"id":2400,"created_on":"2020-09-29 22:30:14","title":"MLJ.jl","description":"A Julia machine learning framework.","tags":["code","julia","machine-learning","library"]},{"id":2402,"created_on":"2020-09-30 22:11:07","title":"Adapting Text Augmentation to Industry Problems","description":"In this post I will talk about the recent advances in exploiting language models for data generation and also show how, where we can implement them in Industry.","tags":["article","data-augmentation","language-modeling","natural-language-processing","pet","cbert","text-augmentaiton"]},{"id":2403,"created_on":"2020-09-30 22:15:07","title":"Easy Data Augmentation (EDA)","description":"Easy Data Augmentation Techniques for Boosting Performance on Text Classification Tasks","tags":["article","code","library","data-augmentation","natural-language-processing","eda","text-augmentation"]},{"id":2404,"created_on":"2020-09-30 22:22:07","title":"12 Factors of Reproducible Machine Learning in Production","description":"We took our experience to deduce 12 factors (as a nod to the 12 factor app) that build the backbone of successful ML in production.","tags":["article","code","machine-learning","production","reproducibility"]},{"id":2405,"created_on":"2020-10-01 01:33:33","title":"Scientific Computing in Python: Introduction to NumPy& Matplotlib","description":"Blog article with the embedded \u201cnarrated content\u201d for NumPy and Matplotlib notes.","tags":["article","code","tutorial","matplotlib","numpy"]},{"id":2406,"created_on":"2020-10-01 04:17:19","title":"Audio signal analysis and Feature extraction","description":"Extract features from audio signal as a part of Speech recognition task","tags":["code","research","tutorial","library","audio","feature-engineering","speech","speech-recognition","melspectrum","mfcc"]},{"id":2408,"created_on":"2020-10-01 05:58:17","title":"Revelations of Gradients and Hessians.","description":"This blog post explores some of the insights gained from looking at gradients and Hessian matrices of the objective functions\/loss functions. ","tags":["article","deep-learning"]},{"id":2409,"created_on":"2020-10-01 07:06:24","title":"Deploying Python FastAPI on Azure App Service","description":"A detailed walk through on how to deploy FastAPI on Azure App Service. This includes detailed article and a video demonstration","tags":["article","code","research","tutorial","video","azure","fastapi","python","architecture","devops","demo","ci-cd"]},{"id":2410,"created_on":"2020-10-01 13:42:23","title":"Serving PyTorch models in production with the Amazon SageMaker","description":"TorchServe is now natively supported in Amazon SageMaker as the default model server for PyTorch inference. ","tags":["article","tutorial","aws","pytorch","production","sagemaker","torchserve","serving"]},{"id":2411,"created_on":"2020-10-01 14:55:12","title":"How to Make Sense of the Reinforcement Learning Agents?","description":"What and Why I Log During Training and Debug?","tags":["article","tutorial","deep-learning","machine-learning","reinforcement-learning","neptune-ai","neptune"]},{"id":2412,"created_on":"2020-10-01 18:50:05","title":"Introduction to 3D Medical Imaging: Preprocessing & Augmentations","description":"Learn how to apply 3D transformations for medical image preprocessing and augmentation, to setup your awesome deep learning pipeline.","tags":["article","code","notebook","tutorial","deep-learning","machine-learning","health","computer-vision","data-augmentation","medical-imaging","preprocessing","demo"]},{"id":2413,"created_on":"2020-10-01 23:50:04","title":"Keeping Data Pipelines healthy w\/ Great Expectations GH Actions","description":"We show you how you can use GitHub Actions together with the open source project Great Expectations to automatically test, document, and profile data pipelines.","tags":["article","video","unit-tests","testing","data-pipelines","github-actions","great-expectations","data-quality"]},{"id":2414,"created_on":"2020-10-01 23:52:31","title":"GenForce Lib for Generative Modeling","description":"GenForce: an efficient PyTorch library for deep generative modeling (StyleGANv1v2, PGGAN, etc).","tags":["code","pytorch","library","generative-modeling","genforce"]},{"id":2415,"created_on":"2020-10-01 23:55:36","title":"Explainable ML Monitoring","description":"The video covers an overview of some of the risks of AI, the need for explainable monitoring, and what exactly we mean when we talk about it.","tags":["video","interpretability","monitoring"]},{"id":2416,"created_on":"2020-10-01 23:59:08","title":"RecSys 2020 - Takeaways and Notable Papers","description":"Some observations and notes on papers I enjoyed from this year's RecSys 2020.","tags":["article","recommendation-systems","recsys","recsys-2020"]},{"id":2417,"created_on":"2020-10-02 09:44:25","title":"Parallelizing Prophet Cross-Validation with Dask","description":"Applied Example w\/ Code","tags":["article","code","dataset","notebook","tutorial","python","forecasting","time-series","time-series-forecasting","prophet","hyperparameter-optimization","dask","cross-validation","nyc-taxi"]},{"id":2418,"created_on":"2020-10-02 10:16:17","title":"Top Research Papers from the ECML-PKDD 2020 Conference","description":"ECML-PKDD -> selectionof the best reaesch papers","tags":["article","research","deep-learning","machine-learning","reinforcement-learning","data-science"]},{"id":2419,"created_on":"2020-10-02 15:37:27","title":"GANs in Computer Vision Free Ebook \/ Article-series","description":"This free ebook\/article-series follows the chronological order of 20 peer-reviewed highly-cited papers as they presented in a series of 6 articles.","tags":["article","code","paper","research","tutorial","generative-adversarial-networks","computer-vision","image-generation","demo"]},{"id":2420,"created_on":"2020-10-02 21:20:48","title":"DVC Basics","description":"This tutorial is for total beginners to get started using DVC and Git to version data, models, and more. ","tags":["tutorial","video","git","dvc","versioning"]},{"id":2421,"created_on":"2020-10-02 21:28:14","title":"Q-Aid","description":"A comprehensive healthcare conversational agent powered by Visual QA and segmentation models.","tags":["api","article","code","dataset","paper","research","aws","fastapi","pytorch","react","health","computer-vision","medical-imaging","natural-language-processing","question-answering","segmentation","conversational-ai","visual-question-answering","mobile","xai"]},{"id":2422,"created_on":"2020-10-02 21:48:21","title":"Pattern-Exploiting Training (PET)","description":"This repository contains the code for \"Exploiting Cloze Questions for Few-Shot Text Classification and Natural Language Inference\"","tags":["code","paper","research","few-shot-learning","natural-language-processing","text-classification","cloze-questions","arxiv:2001.07676"]},{"id":2423,"created_on":"2020-10-03 20:27:36","title":"Imaginaire","description":"NVIDIA PyTorch GAN library with distributed and mixed precision support.","tags":["code","video","pytorch","generative-adversarial-networks","library","computer-vision","image-to-image-translation","nvidia","mixed-precision","imaginaire","model-zoo"]},{"id":2424,"created_on":"2020-10-03 22:26:41","title":"Principles and Practice of Explainable Machine Learning","description":"A survey to help industry practitioners understand the field of explainable machine learning better and apply the right tools.","tags":["paper","research","interpretability","explainability","survey","arxiv:2009.11698"]},{"id":2425,"created_on":"2020-10-03 22:31:30","title":"From Python to Julia & Learning by Doing","description":"A Case Study with an Opinion Dynamics Model Simulation.","tags":["article","tutorial","julia","simulation"]},{"id":2426,"created_on":"2020-10-04 11:54:28","title":"Free (0$) deep learning hardware?","description":"You don't have money but want to start learning deep learning? Take a look at this video for some tips!","tags":["tutorial","deep-learning","hardware","gpu","cloud","deep-learning-pc"]},{"id":2427,"created_on":"2020-10-04 16:39:29","title":"Knowledge Transfer in Self Supervised Learning","description":"A general framework to transfer knowledge from deep self-supervised models to shallow task-specific models.","tags":["article","tutorial","knowledge-distillation","model-compression","self-supervised-learning"]},{"id":2428,"created_on":"2020-10-05 02:09:23","title":"Efficient Transformers: A Survey","description":"Characterizes a large and thoughtful selection of recent efficiency-flavored \"X-former\" models.","tags":["paper","research","transformers","natural-language-processing","survey","arxiv:2009.06732"]},{"id":2429,"created_on":"2020-10-05 02:16:34","title":"Meta-learning for Few-shot Natural Language Processing: A Survey","description":"Clear definitions, progress summary and some common datasets of applying meta-learning to few-shot NLP.","tags":["paper","research","few-shot-learning","meta-learning","natural-language-processing","survey","arxiv:2007.09604"]},{"id":2430,"created_on":"2020-10-05 10:09:28","title":"Transection: Transformers for English to Chinese Translation \u57fa\u4e8et","description":"Tutorials on how to fine-tune a BART based transformer for English to Chinese translation.","tags":["code","tutorial","transformers","library","machine-translation","natural-language-processing","demo"]},{"id":2431,"created_on":"2020-10-05 12:36:02","title":"A Survey of the State of Explainable AI for NLP","description":"Overview of the operations and explainability techniques currently available for generating explanations for NLP model predictions.","tags":["paper","research","interpretability","natural-language-processing","explainability","survey","xai","arxiv:2010.00711"]},{"id":2432,"created_on":"2020-10-05 13:09:58","title":"Topic Modeling with BERT","description":"Leveraging \ud83e\udd17 Transformers and a class-based TF-IDF to create dense clusters allowing for easily interpretable topics. ","tags":["article","code","tutorial","huggingface","attention","bert","transformers","library","natural-language-processing","topic-modeling"]},{"id":2433,"created_on":"2020-10-05 18:11:30","title":"Understanding the receptive field of deep convolutional networks","description":"An intuitive guide on why it is important to inspect the receptive field, as well as how the receptive field affect the design choices of deep convolutional net","tags":["article","tutorial","convolutional-neural-networks","deep-learning","machine-learning"]},{"id":2434,"created_on":"2020-10-06 02:13:01","title":"OpenMMLab Computer Vision","description":"MMCV is a python library for CV research and supports many research projects such as object detection, segmentation, pose estimation, action classification.\r\n\r\n","tags":["article","code","pytorch","library","3d","computer-vision","image-classification","image-generation","object-detection","pose-estimation","super-resolution","3d-object-detection","pretraining","segmentation","inpainting","action-recognition","model-zoo","matting"]},{"id":2435,"created_on":"2020-10-06 12:09:17","title":"Top \u201cApplied Data Science\u201d Papers from ECML-PKDD 2020","description":"Explore the innovative world of Machine Learning with these inspiring Applied Data Science papers from this year\u2019s ECML-PKDD 2020 Conference!","tags":["article","deep-learning","machine-learning","advertising","computer-hardware","healthcare","sports","transportation","anomaly-detection","data-science"]},{"id":2436,"created_on":"2020-10-06 13:29:44","title":"Machine Learning Methods Explained (+ Examples)","description":"Most common techniques used in data science projects; get to know them through easy-to-understand examples and put them into practice in your own ML projects!","tags":["article","deep-learning","machine-learning","dimensionality-reduction","reinforcement-learning","unsupervised-learning","artificial-intelligence","neptune-ai","neptune"]},{"id":2437,"created_on":"2020-10-06 14:53:39","title":"Rasoee","description":"A powerful web and mobile application that identifies food dishes from a given input image, and provides an ingredient list along with relevant recipes.","tags":["api","article","code","dataset","paper","research","django","pytorch","food","computer-vision","web-app","cooking","mobile","demo","android","efficient-net","kotlin"]},{"id":2438,"created_on":"2020-10-07 10:19:59","title":"How to Deal with Files in Google Colab: What You Need to Know","description":"How to supercharge your Google Colab experience by reading external files or data in Google Colab and writing from Google Colab to those external data sources.","tags":["article","google-colab","colab","file-system"]}]